
.. this file is auto generated by docs/packets.py

==============================
em.system.hi.cmd.rtc 
==============================

.. contents:: Index
   :local:
   :depth: 2

.. raw:: html

    <input class="search input" type="text" placeholder="Live Search" style="width: 100%; padding: 10px;">
    <div>&nbsp</div>
    <div id="search-loader" style="display:none;">please wait...</div>
    <div id="count">14 Packets</div>


.. _pkt-EMSHI_RTC_ReadCounterValue:


EMSHI_RTC_ReadCounterValue_
---------------------------

**API usage:** 
``engine.send("EMSHI_RTC_ReadCounterValue")``

**CLI usage:**
``blengine send EMSHI_RTC_ReadCounterValue``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8601

Read Counter Value.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x86", "1", "<B", "|  No Description"
	"**command**", "0x01", "1", "<B", "|  No Description"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**Counter**", "4", "<L", "|  Counter Value"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_RTC_Localtime:


EMSHI_RTC_Localtime_
--------------------

**API usage:** 
``engine.send("EMSHI_RTC_Localtime", CurrentTime=0xXx)``

**CLI usage:**
``blengine send EMSHI_RTC_Localtime --CurrentTime=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8602

Set Local Time.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x86", "1", "<B", "|  No Description"
	"**command**", "0x02", "1", "<B", "|  No Description"
	"**CurrentTime**", "", "4", "<L", "|  Current time expressed 
  |              as number of seconds from reference point (1.1.2000, 00:00:00)."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_RTC_Mktime:


EMSHI_RTC_Mktime_
-----------------

**API usage:** 
``engine.send("EMSHI_RTC_Mktime")``

**CLI usage:**
``blengine send EMSHI_RTC_Mktime``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8603

Read Local Time.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x86", "1", "<B", "|  No Description"
	"**command**", "0x03", "1", "<B", "|  No Description"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**CurrentTime**", "4", "<L", "|  Current time expressed 
  |              as number of seconds from reference point (1.1.2000, 00:00:00)."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_RTC_Init:


EMSHI_RTC_Init_
---------------

**API usage:** 
``engine.send("EMSHI_RTC_Init", Channel=0xXx)``

**CLI usage:**
``blengine send EMSHI_RTC_Init --Channel=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8604

Init RTC module.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x86", "1", "<B", "|  No Description"
	"**command**", "0x04", "1", "<B", "|  No Description"
	"**Channel**", "", "1", "<B", "|  Sleep Timer channel to be used 
  |              in RTC module. 
  |              Channel 0 is used by generic Sleep mode
  |              controller thus channels 1-3 are available."
	"**Wait**", "0x00", "1", "<B", "|  Wait callback"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_RTC_Enable:


EMSHI_RTC_Enable_
-----------------

**API usage:** 
``engine.send("EMSHI_RTC_Enable", Enable=0xXx)``

**CLI usage:**
``blengine send EMSHI_RTC_Enable --Enable=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8605

Enable RTC function.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x86", "1", "<B", "|  No Description"
	"**command**", "0x05", "1", "<B", "|  No Description"
	"**Enable**", "", "1", "<B", "|  Enable or disable RTC function."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_RTC_SetShortAlarm:


EMSHI_RTC_SetShortAlarm_
------------------------

**API usage:** 
``engine.send("EMSHI_RTC_SetShortAlarm", Period=0xXx,Mode=0xXx)``

**CLI usage:**
``blengine send EMSHI_RTC_SetShortAlarm --Period=0xXx --Mode=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8606

Set short alarm generated by RTC.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x86", "1", "<B", "|  No Description"
	"**command**", "0x06", "1", "<B", "|  No Description"
	"**Period**", "", "4", "<L", "|  Period of interrupt. Period is in [ms] and 
  |              can be in range <1; 86400000>. Maximum value corresponds to 1 day (24*3600*100ms).
  |              If Period value is out of range command is ignored."
	"**Mode**", "", "1", "<B", "|  Mode of short alarm operation."
	"**Wait**", "0x00", "1", "<B", "|  Wait callback"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_RTC_SetTime:


EMSHI_RTC_SetTime_
------------------

**API usage:** 
``engine.send("EMSHI_RTC_SetTime", CurrentTime=0xXx,Subseconds=0xXx)``

**CLI usage:**
``blengine send EMSHI_RTC_SetTime --CurrentTime=0xXx --Subseconds=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8607

Set RTC current time.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x86", "1", "<B", "|  No Description"
	"**command**", "0x07", "1", "<B", "|  No Description"
	"**CurrentTime**", "", "4", "<L", "|  Current time expressed 
  |              as number of seconds from reference point (1.1.2000, 00:00:00)."
	"**Subseconds**", "", "1", "<B", "|  Subseconds to be included for current time."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_RTC_GetTime:


EMSHI_RTC_GetTime_
------------------

**API usage:** 
``engine.send("EMSHI_RTC_GetTime")``

**CLI usage:**
``blengine send EMSHI_RTC_GetTime``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8608

Get RTC current time.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x86", "1", "<B", "|  No Description"
	"**command**", "0x08", "1", "<B", "|  No Description"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**CurrentTime**", "4", "<L", "|  Current time expressed 
  |              as number of seconds from reference point (1.1.2000, 00:00:00)."
	"**Subseconds**", "1", "<B", "|  Subseconds to be included for current time."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_RTC_SetTimeAndDate:


EMSHI_RTC_SetTimeAndDate_
-------------------------

**API usage:** 
``engine.send("EMSHI_RTC_SetTimeAndDate", Year=0xXx,Month=0xXx,Day=0xXx,Weekday=0xXx,Hours=0xXx,Minutes=0xXx,Seconds=0xXx,Subseconds=0xXx)``

**CLI usage:**
``blengine send EMSHI_RTC_SetTimeAndDate --Year=0xXx --Month=0xXx --Day=0xXx --Weekday=0xXx --Hours=0xXx --Minutes=0xXx --Seconds=0xXx --Subseconds=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8609

Set RTC current time and date.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x86", "1", "<B", "|  No Description"
	"**command**", "0x09", "1", "<B", "|  No Description"
	"**Year**", "", "1", "<B", "|  Year"
	"**Month**", "", "1", "<B", "|  Month"
	"**Day**", "", "1", "<B", "|  Day"
	"**Weekday**", "", "1", "<B", "|  Week Day"
	"**Hours**", "", "1", "<B", "|  Hours"
	"**Minutes**", "", "1", "<B", "|  Minutes"
	"**Seconds**", "", "1", "<B", "|  Seconds"
	"**Subseconds**", "", "1", "<B", "|  Subseconds"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_RTC_GetTimeAndDate:


EMSHI_RTC_GetTimeAndDate_
-------------------------

**API usage:** 
``engine.send("EMSHI_RTC_GetTimeAndDate")``

**CLI usage:**
``blengine send EMSHI_RTC_GetTimeAndDate``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x860a

Get RTC current time and date.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x86", "1", "<B", "|  No Description"
	"**command**", "0x0a", "1", "<B", "|  No Description"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**Year**", "1", "<B", "|  Year"
	"**Month**", "1", "<B", "|  Month"
	"**Day**", "1", "<B", "|  Day"
	"**Weekday**", "1", "<B", "|  Week Day"
	"**Hours**", "1", "<B", "|  Hours"
	"**Minutes**", "1", "<B", "|  Minutes"
	"**Seconds**", "1", "<B", "|  Seconds"
	"**Subseconds**", "1", "<B", "|  Subseconds"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_RTC_SetAlarmTime:


EMSHI_RTC_SetAlarmTime_
-----------------------

**API usage:** 
``engine.send("EMSHI_RTC_SetAlarmTime", AlarmTime=0xXx,Subseconds=0xXx,Enable=0xXx)``

**CLI usage:**
``blengine send EMSHI_RTC_SetAlarmTime --AlarmTime=0xXx --Subseconds=0xXx --Enable=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x860b

Set RTC Alarm for given time.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x86", "1", "<B", "|  No Description"
	"**command**", "0x0b", "1", "<B", "|  No Description"
	"**AlarmTime**", "", "4", "<L", "|  Time of alarm expressed 
  |              as number of seconds from reference point (1.1.2000, 00:00:00)."
	"**Subseconds**", "", "1", "<B", "|  Subseconds"
	"**Enable**", "", "1", "<B", "|  True enables alarm, 
  |              False disable alarm function."
	"**Wait**", "0x00", "1", "<B", "|  Wait callback"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_RTC_SetAlarm:


EMSHI_RTC_SetAlarm_
-------------------

**API usage:** 
``engine.send("EMSHI_RTC_SetAlarm", Year=0xXx,Month=0xXx,Day=0xXx,Weekday=0xXx,Hours=0xXx,Minutes=0xXx,Seconds=0xXx,Subseconds=0xXx,Enable=0xXx)``

**CLI usage:**
``blengine send EMSHI_RTC_SetAlarm --Year=0xXx --Month=0xXx --Day=0xXx --Weekday=0xXx --Hours=0xXx --Minutes=0xXx --Seconds=0xXx --Subseconds=0xXx --Enable=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x860c

Set RTC Alarm for given time and date.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x86", "1", "<B", "|  No Description"
	"**command**", "0x0c", "1", "<B", "|  No Description"
	"**Year**", "", "1", "<B", "|  Year"
	"**Month**", "", "1", "<B", "|  Month"
	"**Day**", "", "1", "<B", "|  Day"
	"**Weekday**", "", "1", "<B", "|  Week Day"
	"**Hours**", "", "1", "<B", "|  Hours"
	"**Minutes**", "", "1", "<B", "|  Minutes"
	"**Seconds**", "", "1", "<B", "|  Seconds"
	"**Subseconds**", "", "1", "<B", "|  Subseconds"
	"**Enable**", "", "1", "<B", "|  True enables alarm, 
  |              False disable alarm function."
	"**Wait**", "0x00", "1", "<B", "|  Wait callback"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_RTC_SetCalibration:


EMSHI_RTC_SetCalibration_
-------------------------

**API usage:** 
``engine.send("EMSHI_RTC_SetCalibration", Enable=0xXx,Period=0xXx,Length=0xXx)``

**CLI usage:**
``blengine send EMSHI_RTC_SetCalibration --Enable=0xXx --Period=0xXx --Length=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x860d

Set RTC clock calibration.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x86", "1", "<B", "|  No Description"
	"**command**", "0x0d", "1", "<B", "|  No Description"
	"**Enable**", "", "1", "<B", "|  True enables alarm, 
  |              False disable alarm function."
	"**Period**", "", "2", "<H", "|  Period of RTC clock calibration. 
  |              Period range is 1-1440. 
  |              Calibration perios is N*1min. Other values are invalid and will be ignored."
	"**Length**", "", "2", "<H", "|  Length of RTC clock calibration. 
  |              Length range is 10-300. 
  |              Calibration length is N*100us. Other values are invalid and will be ignored."
	"**Wait**", "0x00", "1", "<B", "|  Wait callback"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_RTC_GetClockFrequency:


EMSHI_RTC_GetClockFrequency_
----------------------------

**API usage:** 
``engine.send("EMSHI_RTC_GetClockFrequency")``

**CLI usage:**
``blengine send EMSHI_RTC_GetClockFrequency``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x860e

Get current RTC clock frequency.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x86", "1", "<B", "|  No Description"
	"**command**", "0x0e", "1", "<B", "|  No Description"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ClockFrequencyFraction**", "1", "<B", "|  RTC current clock frequency. 
  |              part with following format: fraction[8 bits]"
	"**ClockFrequency**", "2", "<H", "|  RTC current clock frequency. 
  |              part with following format: integer[16 bits]"

.. raw:: html
    
    <hr>

