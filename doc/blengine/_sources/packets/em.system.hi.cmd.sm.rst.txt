
.. this file is auto generated by docs/packets.py

=============================
em.system.hi.cmd.sm 
=============================

.. contents:: Index
   :local:
   :depth: 2

.. raw:: html

    <input class="search input" type="text" placeholder="Live Search" style="width: 100%; padding: 10px;">
    <div>&nbsp</div>
    <div id="search-loader" style="display:none;">please wait...</div>
    <div id="count">21 Packets</div>


.. _pkt-EMSHI_SM_GenerateAndSetRandomAddress:


EMSHI_SM_GenerateAndSetRandomAddress_
-------------------------------------

**API usage:** 
``engine.send("EMSHI_SM_GenerateAndSetRandomAddress", Type=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_GenerateAndSetRandomAddress --Type=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8301

Used by the application to generate and 
  |          set a new random address for the local device.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x01", "1", "<B", "|  No Description"
	"**Type**", "", "1", "<B", "|  The type of PRIVATE Address that the 
  |              application wants to generate and set."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_SetIOCapability:


EMSHI_SM_SetIOCapability_
-------------------------

**API usage:** 
``engine.send("EMSHI_SM_SetIOCapability", IoCapability=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_SetIOCapability --IoCapability=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8302

Used by the application to set the Local IO 
  |          capability.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x02", "1", "<B", "|  No Description"
	"**IoCapability**", "", "1", "<B", "|  the Io capability to set for 
  |              the local device."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_SetMaximumEncrytionKeySize:


EMSHI_SM_SetMaximumEncrytionKeySize_
------------------------------------

**API usage:** 
``engine.send("EMSHI_SM_SetMaximumEncrytionKeySize", KeySize=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_SetMaximumEncrytionKeySize --KeySize=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8303

Used by the application to set the Maximum 
  |          encryption key size



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x03", "1", "<B", "|  No Description"
	"**KeySize**", "", "1", "<B", "|  the maximum encryption key size set
  |              for the local device."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_InitiatePairing:


EMSHI_SM_InitiatePairing_
-------------------------

**API usage:** 
``engine.send("EMSHI_SM_InitiatePairing", ConnHandle=0xXx,Bond=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_InitiatePairing --ConnHandle=0xXx --Bond=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8304

Used by the application to initiate a pairing process



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x04", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  The Local identifier of the Link layer 
  |              connection that is intended to be authenticated."
	"**Bond**", "", "1", "<B", "|  Set to 1 if the local device ."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_ConfirmPairing:


EMSHI_SM_ConfirmPairing_
------------------------

**API usage:** 
``engine.send("EMSHI_SM_ConfirmPairing", ConnHandle=0xXx,Accept=0xXx,Bond=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_ConfirmPairing --ConnHandle=0xXx --Accept=0xXx --Bond=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8305

Used by the application to accept or reject the pairing request



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x05", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  The Local identifier of the Link layer 
  |              connection that is intended to be authenticated."
	"**Accept**", "", "1", "<B", "|  zero means that the pairing request is rejected 
  |              by the application non-zero means the pairing request is accepted by the application"
	"**Bond**", "", "1", "<B", "|  Set to 1 if the local device."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_SetOobData:


EMSHI_SM_SetOobData_
--------------------

**API usage:** 
``engine.send("EMSHI_SM_SetOobData", OobData=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_SetOobData --OobData=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8306

Used by the application to use Out Of Band data as pairing information



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x06", "1", "<B", "|  No Description"
	"**OobData**", "", "16", "<16s", "|  the 16 bytes length Out of band data."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_ClearOobData:


EMSHI_SM_ClearOobData_
----------------------

**API usage:** 
``engine.send("EMSHI_SM_ClearOobData")``

**CLI usage:**
``blengine send EMSHI_SM_ClearOobData``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8307

Used by the application to clear any Out Of band data



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x07", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_ConfirmPasskey:


EMSHI_SM_ConfirmPasskey_
------------------------

**API usage:** 
``engine.send("EMSHI_SM_ConfirmPasskey", ConnHandle=0xXx,Passkey=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_ConfirmPasskey --ConnHandle=0xXx --Passkey=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8308

Used by the application to set the passkey or to confirm the passkey



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x08", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  The Local identifier of the Link layer 
  |              connection that is intended to be authenticated."
	"**Passkey**", "", "16", "<16s", "|  the passkey to provide or confirm."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_RejectPasskey:


EMSHI_SM_RejectPasskey_
-----------------------

**API usage:** 
``engine.send("EMSHI_SM_RejectPasskey", ConnHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_RejectPasskey --ConnHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8309

Used by the application to reject the passkey provided 
  |          or to reject the passkey request.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x09", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  The Local identifier of the Link layer 
  |              connection that is intended to be authenticated."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_GetLinkSecurityProperties:


EMSHI_SM_GetLinkSecurityProperties_
-----------------------------------

**API usage:** 
``engine.send("EMSHI_SM_GetLinkSecurityProperties", ConnHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_GetLinkSecurityProperties --ConnHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x830a

Used to retrieve the current security properties for 
  |          the given link.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x0a", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  The Local identifier of the Link layer 
  |              connection that is intended to be authenticated."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**BleLinkSecurityProperties**", "1", "<B", "|  The security properties"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_IsDeviceBonded:


EMSHI_SM_IsDeviceBonded_
------------------------

**API usage:** 
``engine.send("EMSHI_SM_IsDeviceBonded", Addr=0xXx,Role=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_IsDeviceBonded --Addr=0xXx --Role=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x830b

Retrieve bonding status of a remote device



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x0b", "1", "<B", "|  No Description"
	"**Addr**", "", "6", "<6s", "|  Bluetooth device address."
	"**Role**", "", "1", "<B", "|  The local device role."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_UnBond:


EMSHI_SM_UnBond_
----------------

**API usage:** 
``engine.send("EMSHI_SM_UnBond", Addr=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_UnBond --Addr=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x830c

Unbond (delete persistent memory information) 
  |          for the given remote device



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x0c", "1", "<B", "|  No Description"
	"**Addr**", "", "6", "<6s", "|  Bluetooth device address."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_ReadAuthenticatedPayloadTimeout:


EMSHI_SM_ReadAuthenticatedPayloadTimeout_
-----------------------------------------

**API usage:** 
``engine.send("EMSHI_SM_ReadAuthenticatedPayloadTimeout", ConnHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_ReadAuthenticatedPayloadTimeout --ConnHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x830d

Get the current authenticated 
  |          payload timeout value



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x0d", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  The Local identifier of the Link layer 
  |              connection that is intended to be authenticated."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**AuthenticatedTimeout**", "4", "<L", "|  the time to set for the 
  |              authenticated timeout value in milliseconds"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_WriteAuthenticatedPayloadTimeout:


EMSHI_SM_WriteAuthenticatedPayloadTimeout_
------------------------------------------

**API usage:** 
``engine.send("EMSHI_SM_WriteAuthenticatedPayloadTimeout", ConnHandle=0xXx,AuthenticatedTimeout=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_WriteAuthenticatedPayloadTimeout --ConnHandle=0xXx --AuthenticatedTimeout=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x830e

Set the current authenticated 
  |          payload timeout value



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x0e", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  The Local identifier of the Link layer 
  |              connection that is intended to be authenticated."
	"**AuthenticatedTimeout**", "", "4", "<L", "|  the time to set for the 
  |              authenticated timeout value in milliseconds"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_ForcePairingMode:


EMSHI_SM_ForcePairingMode_
--------------------------

**API usage:** 
``engine.send("EMSHI_SM_ForcePairingMode", localPairingMode=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_ForcePairingMode --localPairingMode=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x830f

Force Pairing Mode



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x0f", "1", "<B", "|  No Description"
	"**localPairingMode**", "", "1", "<B", "|  1 force legacy pairing.
  |              2 force the secure connection pairing."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_PrivacyGetCurrentDeviceIdentityInformation:


EMSHI_SM_PrivacyGetCurrentDeviceIdentityInformation_
----------------------------------------------------

**API usage:** 
``engine.send("EMSHI_SM_PrivacyGetCurrentDeviceIdentityInformation", ConnHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_PrivacyGetCurrentDeviceIdentityInformation --ConnHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8310

Get the identity information of the remote resolvable Private addresses device.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x10", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  The Local identifier of the Link layer 
  |              connection that is intended to be authenticated."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**Addr**", "6", "<6s", "|  Bluetooth device address of the remote device"
	"**AddrType**", "1", "<B", "|  Bluetooth device address type of the remote device"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_PrivacyAddDeviceInResolvingList:


EMSHI_SM_PrivacyAddDeviceInResolvingList_
-----------------------------------------

**API usage:** 
``engine.send("EMSHI_SM_PrivacyAddDeviceInResolvingList", Addr=0xXx,AddrType=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_PrivacyAddDeviceInResolvingList --Addr=0xXx --AddrType=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8311

Add a device to the resolving list.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x11", "1", "<B", "|  No Description"
	"**Addr**", "", "6", "<6s", "|  Bluetooth device address of the remote device"
	"**AddrType**", "", "1", "<B", "|  Bluetooth device address type of the remote device"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_PrivacyIsRemoteAddressResolvable:


EMSHI_SM_PrivacyIsRemoteAddressResolvable_
------------------------------------------

**API usage:** 
``engine.send("EMSHI_SM_PrivacyIsRemoteAddressResolvable", ConnHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_PrivacyIsRemoteAddressResolvable --ConnHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8312

Check if the remote device adress is resolvable.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x12", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  The Local identifier of the Link layer 
  |              connection that is intended to be authenticated."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_PrivacyConfigureAddressResolution:


EMSHI_SM_PrivacyConfigureAddressResolution_
-------------------------------------------

**API usage:** 
``engine.send("EMSHI_SM_PrivacyConfigureAddressResolution", enableAddressResolution=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_PrivacyConfigureAddressResolution --enableAddressResolution=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8313

Check if the remote device adress is resolvable.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x13", "1", "<B", "|  No Description"
	"**enableAddressResolution**", "", "1", "<B", "|  (disable or enable) controller resolvable private address resolution."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_PrivacyClearResolvingList:


EMSHI_SM_PrivacyClearResolvingList_
-----------------------------------

**API usage:** 
``engine.send("EMSHI_SM_PrivacyClearResolvingList")``

**CLI usage:**
``blengine send EMSHI_SM_PrivacyClearResolvingList``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8314

clear the device resolving list



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x14", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_SM_ForceLocalMITMReq:


EMSHI_SM_ForceLocalMITMReq_
---------------------------

**API usage:** 
``engine.send("EMSHI_SM_ForceLocalMITMReq", localMITMUsed=0xXx)``

**CLI usage:**
``blengine send EMSHI_SM_ForceLocalMITMReq --localMITMUsed=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8315

MITM Mode



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x83", "1", "<B", "|  No Description"
	"**command**", "0x15", "1", "<B", "|  No Description"
	"**localMITMUsed**", "", "1", "<B", "|  0 Set MITM bit to 0 for the connection pairing .
  |              1 Set MITM bit to 1 for the connection pairing."

.. raw:: html
    
    <hr>

