
.. this file is auto generated by docs/packets.py

===================
hci.event 
===================

.. contents:: Index
   :local:
   :depth: 2

.. raw:: html

    <input class="search input" type="text" placeholder="Live Search" style="width: 100%; padding: 10px;">
    <div>&nbsp</div>
    <div id="search-loader" style="display:none;">please wait...</div>
    <div id="count">16 Packets</div>


.. _pkt-Disconnection_Complete:


Disconnection_Complete_
-----------------------

**API usage:** 
``engine.send("Disconnection_Complete", Status=0xXx,Connection_Handle=0xXx,Reason=0xXx)``

**CLI usage:**
``blengine send Disconnection_Complete --Status=0xXx --Connection_Handle=0xXx --Reason=0xXx``

:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0x05

Connection is terminated or physical link fail



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0x05", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"
	"**Status**", "", "1", "<B", "|  0x00 Disconnection has occurred. 0x01 to 0xFF Disconnection failed to complete, see [Vol 1] Part F, Controller Error Codes"
	"**Connection_Handle**", "", "2", "<H", "|  Connection_Handle which was disconnected. Range: 0x0000 to 0x0EFF"
	"**Reason**", "", "1", "<B", "|  Reason for disconnection. See [Vol 1] Part F, Controller Error Codes"

.. raw:: html
    
    <hr>

.. _pkt-Authentication_Complete:


Authentication_Complete_
------------------------

**API usage:** 
``engine.send("Authentication_Complete", Connection_Handle=0xXx)``

**CLI usage:**
``blengine send Authentication_Complete --Connection_Handle=0xXx``

:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0x06

The HCI_Authentication_Complete event occurs when authentication has
  |  been completed for the specified connection. The Connection_Handle shall be
  |  a Connection_Handle for an ACL connection.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0x06", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"
	"**Connection_Handle**", "", "2", "<H", "|  Connection_Handle (Range: 0x0000 to 0x0EFF)"

.. raw:: html
    
    <hr>

.. _pkt-Encryption_Change_v1:


Encryption_Change_v1_
---------------------

**API usage:** 
``engine.send("Encryption_Change_v1", Status=0xXx,Connection_Handle=0xXx,Encryption_Enabled=0xXx)``

**CLI usage:**
``blengine send Encryption_Change_v1 --Status=0xXx --Connection_Handle=0xXx --Encryption_Enabled=0xXx``

:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0x08

The HCI_Encryption_Change event is used to indicate that the change of the
  |  encryption mode has been completed. The Connection_Handle will be a
  |  Connection_Handle for an ACL connection and is used to identify the remote
  |  device. The Encryption_Enabled event parameter specifies the new
  |  Encryption_Enabled parameter for the Connection_Handle specified by the
  |  Connection_Handle event parameter. This event will occur on both devices to
  |  notify the Hosts when Encryption has changed for all connections between the
  |  two devices. This event shall not be generated if encryption is paused or
  |  resumed; during a role switch, for example.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0x08", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"
	"**Status**", "", "1", "<B", "|  0x00 Encryption change has occurred. 0x01 to 0xFF An attempt to change encryption failed. See [Vol 1] Part F, Controller Error Codes for a list of error codes and descriptions."
	"**Connection_Handle**", "", "2", "<H", "|  Connection_Handle (Range: 0x0000 to 0x0EFF)"
	"**Encryption_Enabled**", "", "1", "<B", "|  0x00 Link Level Encryption is OFF.
  |  0x01 Link Level Encryption is ON with E0 for BR/EDR or Link Level Encryption is ON with AES-CCM for LE.
  |  0x02 Link Level Encryption is ON with AES-CCM for BR/EDR.
  |  All other values Reserved for future use."

.. raw:: html
    
    <hr>

.. _pkt-Encryption_Change_v2:


Encryption_Change_v2_
---------------------

**API usage:** 
``engine.send("Encryption_Change_v2", Status=0xXx,Connection_Handle=0xXx,Encryption_Enabled=0xXx,Encryption_Key_Size=0xXx)``

**CLI usage:**
``blengine send Encryption_Change_v2 --Status=0xXx --Connection_Handle=0xXx --Encryption_Enabled=0xXx --Encryption_Key_Size=0xXx``

:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0x59

The HCI_Encryption_Change event is used to indicate that the change of the
  |  encryption mode has been completed. The Connection_Handle will be a
  |  Connection_Handle for an ACL connection and is used to identify the remote
  |  device. The Encryption_Enabled event parameter specifies the new
  |  Encryption_Enabled parameter for the Connection_Handle specified by the
  |  Connection_Handle event parameter. The Encryption_Key_Size event parameter specifies the size, in octets, of the
  |  key used to encrypt the link. This event will occur on both devices to
  |  notify the Hosts when Encryption has changed for all connections between the
  |  two devices. This event shall not be generated if encryption is paused or
  |  resumed; during a role switch, for example.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0x59", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"
	"**Status**", "", "1", "<B", "|  0x00 Encryption change has occurred. 0x01 to 0xFF An attempt to change encryption failed. See [Vol 1] Part F, Controller Error Codes for a list of error codes and descriptions."
	"**Connection_Handle**", "", "2", "<H", "|  Connection_Handle (Range: 0x0000 to 0x0EFF)"
	"**Encryption_Enabled**", "", "1", "<B", "|  0x00 Link Level Encryption is OFF.
  |  0x01 Link Level Encryption is ON with E0 for BR/EDR or Link Level Encryption is ON with AES-CCM for LE.
  |  0x02 Link Level Encryption is ON with AES-CCM for BR/EDR.
  |  All other values Reserved for future use."
	"**Encryption_Key_Size**", "", "1", "<B", "|  0x00 Encryption key size in octets.
  |  This parameter shall be ignored for LE connections and shall be ignored when Link Level Encryption is OFF.
  |  Range: 0x01 to 0x10)"

.. raw:: html
    
    <hr>

.. _pkt-Read_Remote_Version_Information_Complete:


Read_Remote_Version_Information_Complete_
-----------------------------------------

**API usage:** 
``engine.send("Read_Remote_Version_Information_Complete", status=0xXx,Connection_Handle=0xXx,Version=0xXx,Manufacturer_Name=0xXx,Subversion:=0xXx)``

**CLI usage:**
``blengine send Read_Remote_Version_Information_Complete --status=0xXx --Connection_Handle=0xXx --Version=0xXx --Manufacturer_Name=0xXx --Subversion:=0xXx``

:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0x0c

The HCI_Read_Remote_Version_Information_Complete event is used to
  |  indicate the completion of the process obtaining the version information of the
  |  remote Controller specified by the Connection_Handle event parameter. The
  |  Connection_Handle shall be for an ACL connection.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0x0c", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"
	"**status**", "", "1", "<B", "|  HCI_Read_Remote_Version_Information command succeeded. 0x00 is Success.
  |                   0x01 to 0xFF is Failed. See [Vol 1] Part F, Controller Error Codes for a list of error codes and descriptions."
	"**Connection_Handle**", "", "2", "<H", "|  Connection_Handle. Range: 0x0000 to 0x0EFF"
	"**Version**", "", "1", "<B", "|  Version of the Current LMP or Link Layer in the remote Controller. 
  |  See LMP VersNr and Link LayerVersNr in Assigned Numbers."
	"**Manufacturer_Name**", "", "2", "<H", "|  Manufacturer Name of the remote Controller. 
  |  See CompId in Assigned Numbers."
	"**Subversion:**", "", "2", "<H", "|  Subversion of the LMP or Link Layer in the remote Controller. See [Vol 2]
  |  Part C, Table 5.2 and [Vol 6] Part B, Section 2.4.2.13."

.. raw:: html
    
    <hr>

.. _pkt-Command_Complete:


Command_Complete_
-----------------

**API usage:** 
``engine.send("Command_Complete", num_hci_command_packets=0xXx,command_opcode=0xXx,return_parameters=0xXx)``

**CLI usage:**
``blengine send Command_Complete --num_hci_command_packets=0xXx --command_opcode=0xXx --return_parameters=0xXx``

:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0x0e

Command Complete Event



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0x0e", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"
	"**num_hci_command_packets**", "", "1", "<B", "|  The Number of HCI Command packets which are allowed to be sent to the Controller from the Host."
	"**command_opcode**", "", "2", "<H", "|  Opcode of the command which caused this event."
	"**return_parameters**", "", "0", "None", "|  Content and size depends on Command"

.. raw:: html
    
    <hr>

.. _pkt-Command_Status:


Command_Status_
---------------

**API usage:** 
``engine.send("Command_Status", status=0xXx,num_hci_command_packets=0xXx,command_opcode=0xXx)``

**CLI usage:**
``blengine send Command_Status --status=0xXx --num_hci_command_packets=0xXx --command_opcode=0xXx``

:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0x0f

Command Status Event



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0x0f", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"
	"**status**", "", "1", "<B", "|  Status"
	"**num_hci_command_packets**", "", "1", "<B", "|  The Number of HCI Command packets which are allowed to be sent to the Controller from the Host."
	"**command_opcode**", "", "2", "<H", "|  Opcode of the command which caused this event."

.. raw:: html
    
    <hr>

.. _pkt-Hardware_Error:


Hardware_Error_
---------------

**API usage:** 
``engine.send("Hardware_Error", error_code=0xXx)``

**CLI usage:**
``blengine send Hardware_Error --error_code=0xXx``

:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0x10

No Description



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0x10", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"
	"**error_code**", "", "1", "<B", "|  Error"

.. raw:: html
    
    <hr>

.. _pkt-Flush_Occurred:


Flush_Occurred_
---------------

**API usage:** 
``engine.send("Flush_Occurred")``

**CLI usage:**
``blengine send Flush_Occurred``

:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0x11

No Description



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0x11", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"

.. raw:: html
    
    <hr>

.. _pkt-Number_Of_Completed_Packets:


Number_Of_Completed_Packets_
----------------------------

**API usage:** 
``engine.send("Number_Of_Completed_Packets", Num_Handles=0xXx,Connection_Handles=0xXx,Num_Completed_Packets=0xXx)``

**CLI usage:**
``blengine send Number_Of_Completed_Packets --Num_Handles=0xXx --Connection_Handles=0xXx --Num_Completed_Packets=0xXx``

:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0x13

NUmber of Completed Packet Event



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0x13", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"
	"**Num_Handles**", "", "1", "<B", "|  The number of Connection_Handles and Num_HCI_Data_Packets parameters pairs contained in this event.
  |  Range: 0 to 255"
	"**Connection_Handles**", "", "2", "H", "|  Connection_Handle.
  |  Range: 0x0000 to 0x0EFF"
	"**Num_Completed_Packets**", "", "2", "H", "|  The number of HCI Data packets that have been completed for the associated
  |  Connection_Handle since the previous time the event was returned.
  |  Range: 0x0000 to 0xFFFF"

.. raw:: html
    
    <hr>

.. _pkt-Data_Buffer_Overflow:


Data_Buffer_Overflow_
---------------------

**API usage:** 
``engine.send("Data_Buffer_Overflow", Link_Type=0xXx)``

**CLI usage:**
``blengine send Data_Buffer_Overflow --Link_Type=0xXx``

:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0x1a

This event is used to indicate that the Controllers data buffers have been
  |  overflowed. This can occur if the Host has sent more packets than allowed.
  |  The Link_Type parameter is used to indicate the type of data whose buffers
  |  overflowed.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0x1a", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"
	"**Link_Type**", "", "1", "<B", "|  0x00 Synchronous Data packet buffers
  |  0x01 ACL Data packet buffers
  |  0x02 ISO Data packet buffers
  |  All other values Reserved for future use."

.. raw:: html
    
    <hr>

.. _pkt-Encryption_Key_Refresh_Complete:


Encryption_Key_Refresh_Complete_
--------------------------------

**API usage:** 
``engine.send("Encryption_Key_Refresh_Complete", Connection_Handle:=0xXx)``

**CLI usage:**
``blengine send Encryption_Key_Refresh_Complete --Connection_Handle:=0xXx``

:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0x30

The HCI_Encryption_Key_Refresh_Complete event is used to indicate to the
  |  Host that the encryption key was refreshed on the given Connection_Handle
  |  any time encryption is paused and then resumed. The Controller shall send this
  |  event when the encryption key has been refreshed due to encryption being
  |  started or resumed.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0x30", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"
	"**Connection_Handle:**", "", "2", "<H", "|  Connection_Handle (Range: 0x0000 to 0x0EFF)"

.. raw:: html
    
    <hr>

.. _pkt-Remote_Host_Supported_Features_Notification:


Remote_Host_Supported_Features_Notification_
--------------------------------------------

**API usage:** 
``engine.send("Remote_Host_Supported_Features_Notification", Host_Supported_Features=0xXx)``

**CLI usage:**
``blengine send Remote_Host_Supported_Features_Notification --Host_Supported_Features=0xXx``

:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0x3d

The HCI_Remote_Host_Supported_Features_Notification event is used to
  |  return the LMP extended features page containing the Host features. The
  |  BD_ADDR shall be the address of the remote device.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0x3d", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"
	"**Host_Supported_Features**", "", "8", "<8s", "|  Bit map of Host Supported Features page of LMP extended features.
  |  For more information, see [Vol 2] Part C, Link Manager Protocol Specification."

.. raw:: html
    
    <hr>

.. _pkt-LE_Meta_Event:


LE_Meta_Event_
--------------

**API usage:** 
``engine.send("LE_Meta_Event")``

**CLI usage:**
``blengine send LE_Meta_Event``

:wrap: HCIMetaEventPacket
:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0x3e

Low Energy Meta Event



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0x3e", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"

.. raw:: html
    
    <hr>

.. _pkt-Authenticated_Payload_Timeout_Expired:


Authenticated_Payload_Timeout_Expired_
--------------------------------------

**API usage:** 
``engine.send("Authenticated_Payload_Timeout_Expired", Connection_Handle:=0xXx)``

**CLI usage:**
``blengine send Authenticated_Payload_Timeout_Expired --Connection_Handle:=0xXx``

:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0x57

The HCI_Authenticated_Payload_Timeout_Expired event is used to indicate
  |  that a packet containing a valid MIC on the Connection_Handle was not
  |  received within the authenticatedPayloadTO (see [Vol 2] Part B, Appendix B for
  |  the BR/EDR and [Vol 6] Part B, Section 5.4 for the LE connection).



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0x57", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"
	"**Connection_Handle:**", "", "2", "<H", "|  Connection_Handle (Range: 0x0000 to 0x0EFF)"

.. raw:: html
    
    <hr>

.. _pkt-Reserved_Vendor_Event:


Reserved_Vendor_Event_
----------------------

**API usage:** 
``engine.send("Reserved_Vendor_Event")``

**CLI usage:**
``blengine send Reserved_Vendor_Event``

:wrap: HCIVendorEventPacket
:wrapped by: :ref:`pkt-HCI_EVT` (0x04)
:identifier: 0xff

Vendor Event



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**event_code**", "0xff", "1", "<B", "|  Event Code"
	"**length**", "auto", "auto", "<B", "|  Fragments Length"

.. raw:: html
    
    <hr>

