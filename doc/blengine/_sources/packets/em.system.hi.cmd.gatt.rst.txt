
.. this file is auto generated by docs/packets.py

===============================
em.system.hi.cmd.gatt 
===============================

.. contents:: Index
   :local:
   :depth: 2

.. raw:: html

    <input class="search input" type="text" placeholder="Live Search" style="width: 100%; padding: 10px;">
    <div>&nbsp</div>
    <div id="search-loader" style="display:none;">please wait...</div>
    <div id="count">21 Packets</div>


.. _pkt-EMSHI_GATT_RegisterClient:


EMSHI_GATT_RegisterClient_
--------------------------

**API usage:** 
``engine.send("EMSHI_GATT_RegisterClient")``

**CLI usage:**
``blengine send EMSHI_GATT_RegisterClient``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8101

This function is used to register an GENERIC ATTRIBUTE Profile CLIENT.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x01", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_DeRegisterClient:


EMSHI_GATT_DeRegisterClient_
----------------------------

**API usage:** 
``engine.send("EMSHI_GATT_DeRegisterClient")``

**CLI usage:**
``blengine send EMSHI_GATT_DeRegisterClient``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8102

This function is used to deregister an GENERIC ATTRIBUTE Profile CLIENT.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x02", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_IsRegisterClient:


EMSHI_GATT_IsRegisterClient_
----------------------------

**API usage:** 
``engine.send("EMSHI_GATT_IsRegisterClient")``

**CLI usage:**
``blengine send EMSHI_GATT_IsRegisterClient``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8103

Ask if GENERIC ATTRIBUTE Profile CLIENT is registered.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x03", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_DiscoverAllPrimaryServices:


EMSHI_GATT_DiscoverAllPrimaryServices_
--------------------------------------

**API usage:** 
``engine.send("EMSHI_GATT_DiscoverAllPrimaryServices", ConnHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_DiscoverAllPrimaryServices --ConnHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8104

Discover all the services supported by the remote ATTRIBUTE SERVER.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x04", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ConnHandle**", "2", "<H", "|  "
	"**ServiceStartingHandle**", "2", "<H", "|  "
	"**ServiceEndingHandle**", "2", "<H", "|  "
	"**NumServices**", "1", "<B", "|  "

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_DiscoverPrimaryServiceByType:


EMSHI_GATT_DiscoverPrimaryServiceByType_
----------------------------------------

**API usage:** 
``engine.send("EMSHI_GATT_DiscoverPrimaryServiceByType", ConnHandle=0xXx,UUIDType=0xXx,UUID=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_DiscoverPrimaryServiceByType --ConnHandle=0xXx --UUIDType=0xXx --UUID=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8105

Discover if a specified service is supported by the remote SERVER



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x05", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover.
  |                                     ATT_UUID_SIZE_16                    (0u)
  |                                     ATT_UUID_SIZE_128                   (1u)"
	"**UUIDType**", "", "1", "<B", "|  the UUID len of the service to discover."
	"**UUID**", "", "16", "<16s", "|  the UUID of the service to discover."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ConnHandle**", "2", "<H", "|  "
	"**ServiceStartingHandle**", "2", "<H", "|  "
	"**ServiceEndingHandle**", "2", "<H", "|  "
	"**NumServices**", "1", "<B", "|  "

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_FindIncludedService:


EMSHI_GATT_FindIncludedService_
-------------------------------

**API usage:** 
``engine.send("EMSHI_GATT_FindIncludedService", ConnHandle=0xXx,ServiceStartingHandle=0xXx,ServiceEndingHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_FindIncludedService --ConnHandle=0xXx --ServiceStartingHandle=0xXx --ServiceEndingHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8106

Discover all the included services of the specified service



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x06", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."
	"**ServiceStartingHandle**", "", "2", "<H", "|  the Starting handle of the service in which the included services will be found."
	"**ServiceEndingHandle**", "", "2", "<H", "|  the Ending handle of the service in which the included services will be found."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_DiscoverAllCharacteristic:


EMSHI_GATT_DiscoverAllCharacteristic_
-------------------------------------

**API usage:** 
``engine.send("EMSHI_GATT_DiscoverAllCharacteristic", ConnHandle=0xXx,ServiceStartingHandle=0xXx,ServiceEndingHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_DiscoverAllCharacteristic --ConnHandle=0xXx --ServiceStartingHandle=0xXx --ServiceEndingHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8107

Discover all the Characteristic supported by a service



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x07", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."
	"**ServiceStartingHandle**", "", "2", "<H", "|  the Starting handle of the service in which the included services will be found."
	"**ServiceEndingHandle**", "", "2", "<H", "|  the Ending handle of the service in which the included services will be found."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ConnHandle**", "2", "<H", "|  "
	"**NumCharacteristics**", "1", "<B", "|  "

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_DiscoverCharacteristicByType:


EMSHI_GATT_DiscoverCharacteristicByType_
----------------------------------------

**API usage:** 
``engine.send("EMSHI_GATT_DiscoverCharacteristicByType", ConnHandle=0xXx,ServiceStartingHandle=0xXx,ServiceEndingHandle=0xXx,UUIDType=0xXx,UUID=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_DiscoverCharacteristicByType --ConnHandle=0xXx --ServiceStartingHandle=0xXx --ServiceEndingHandle=0xXx --UUIDType=0xXx --UUID=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8108

Discover Characteristic by type supported by a service



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x08", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."
	"**ServiceStartingHandle**", "", "2", "<H", "|  the Starting handle of the service in which the included services will be found."
	"**ServiceEndingHandle**", "", "2", "<H", "|  the Ending handle of the service in which the included services will be found."
	"**UUIDType**", "", "1", "<B", "|  the UUID len of the service to discover."
	"**UUID**", "", "16", "<16s", "|  the UUID of the service to discover."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ConnHandle**", "2", "<H", "|  "
	"**NumCharacteristics**", "1", "<B", "|  "

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_GetCharacteristicDescriptorList:


EMSHI_GATT_GetCharacteristicDescriptorList_
-------------------------------------------

**API usage:** 
``engine.send("EMSHI_GATT_GetCharacteristicDescriptorList", ConnHandle=0xXx,characStartingHandle=0xXx,characEndingHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_GetCharacteristicDescriptorList --ConnHandle=0xXx --characStartingHandle=0xXx --characEndingHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8109

Discover all the characteristic descriptors supported by a characteristic



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x09", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."
	"**characStartingHandle**", "", "2", "<H", "|  the Starting handle of the service in which the included services will be found."
	"**characEndingHandle**", "", "2", "<H", "|  the Ending handle of the service in which the included services will be found."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ConnHandle**", "2", "<H", "|  "
	"**ServerDataHandle**", "2", "<H", "|  "
	"**CharacStartingHandle**", "2", "<H", "|  "
	"**CharacEndingHandle**", "2", "<H", "|  "
	"**UuidType**", "1", "<B", "|  "
	"**UUID**", "0", "None", "|  "

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_ReadCharacteristicValueByHandle:


EMSHI_GATT_ReadCharacteristicValueByHandle_
-------------------------------------------

**API usage:** 
``engine.send("EMSHI_GATT_ReadCharacteristicValueByHandle", ConnHandle=0xXx,ValueHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_ReadCharacteristicValueByHandle --ConnHandle=0xXx --ValueHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x810a

Read the value of the characteristic specified by its handle in the remote ATTRIBUTE SERVER



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x0a", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."
	"**ValueHandle**", "", "2", "<H", "|  the handle of the characteristic for which the value should be read.."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ErrorCode**", "1", "<B", "|  "
	"**ValueHandle**", "2", "<H", "|  "
	"**ValueLen**", "2", "<H", "|  "
	"**Value**", "0", "None", "|  "

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_ReadLongCharacteristicValueByHandle:


EMSHI_GATT_ReadLongCharacteristicValueByHandle_
-----------------------------------------------

**API usage:** 
``engine.send("EMSHI_GATT_ReadLongCharacteristicValueByHandle", ConnHandle=0xXx,ValueHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_ReadLongCharacteristicValueByHandle --ConnHandle=0xXx --ValueHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x810b

Read the value of the characteristic specified by its handle in the remote ATTRIBUTE SERVER



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x0b", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."
	"**ValueHandle**", "", "2", "<H", "|  the handle of the characteristic for which the value should be read.."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ErrorCode**", "1", "<B", "|  "
	"**ValueHandle**", "2", "<H", "|  "
	"**ValueLen**", "2", "<H", "|  "
	"**Value**", "0", "None", "|  "

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_ReadCharacteristicValueByType:


EMSHI_GATT_ReadCharacteristicValueByType_
-----------------------------------------

**API usage:** 
``engine.send("EMSHI_GATT_ReadCharacteristicValueByType", ConnHandle=0xXx,ServiceStartingHandle=0xXx,ServiceEndingHandle=0xXx,UUIDType=0xXx,UUID=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_ReadCharacteristicValueByType --ConnHandle=0xXx --ServiceStartingHandle=0xXx --ServiceEndingHandle=0xXx --UUIDType=0xXx --UUID=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x810c

Read the value of the characteristic specified by its type in the remote ATTRIBUTE SERVER



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x0c", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."
	"**ServiceStartingHandle**", "", "2", "<H", "|  the Starting handle of the service in which the included services will be found."
	"**ServiceEndingHandle**", "", "2", "<H", "|  the Ending handle of the service in which the included services will be found."
	"**UUIDType**", "", "1", "<B", "|  the UUID len of the service to discover."
	"**UUID**", "", "16", "<16s", "|  the UUID of the service to discover."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ErrorCode**", "1", "<B", "|  "
	"**ValueHandle**", "2", "<H", "|  "
	"**ValueLen**", "2", "<H", "|  "
	"**Value**", "0", "None", "|  "

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_ReadMultipleValues:


EMSHI_GATT_ReadMultipleValues_
------------------------------

**API usage:** 
``engine.send("EMSHI_GATT_ReadMultipleValues", ConnHandle=0xXx,NumHandle=0xXx,Handles=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_ReadMultipleValues --ConnHandle=0xXx --NumHandle=0xXx --Handles=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x810d

Read the value of the characteristic specified by the handles in the remote ATTRIBUTE SERVER



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x0d", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."
	"**NumHandle**", "", "1", "<B", "|  the number of handles to read."
	"**Handles**", "", "0", "None", "|  The handles to read."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ErrorCode**", "1", "<B", "|  "
	"**ValueHandle**", "2", "<H", "|  "
	"**ValueLen**", "2", "<H", "|  "
	"**Value**", "0", "None", "|  "

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_WriteCharacteristicValueWithoutResponse:


EMSHI_GATT_WriteCharacteristicValueWithoutResponse_
---------------------------------------------------

**API usage:** 
``engine.send("EMSHI_GATT_WriteCharacteristicValueWithoutResponse", ConnHandle=0xXx,ValueHandle=0xXx,ValueLen=0xXx,Value=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_WriteCharacteristicValueWithoutResponse --ConnHandle=0xXx --ValueHandle=0xXx --ValueLen=0xXx --Value=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x810e

Write the value of the characteristic specified by its type in the remote ATTRIBUTE SERVER



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x0e", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."
	"**ValueHandle**", "", "2", "<H", "|  the handle of the characteristic for which the value should be read."
	"**ValueLen**", "", "1", "<B", "|  the handle of the characteristic for which the value should be written."
	"**Value**", "", "0", "None", "|  the value to write for in the valueHandle in the remote ATTRIBUTE SERVER database."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_WriteCharacteristicValue:


EMSHI_GATT_WriteCharacteristicValue_
------------------------------------

**API usage:** 
``engine.send("EMSHI_GATT_WriteCharacteristicValue", ConnHandle=0xXx,ValueHandle=0xXx,ValueLen=0xXx,Value=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_WriteCharacteristicValue --ConnHandle=0xXx --ValueHandle=0xXx --ValueLen=0xXx --Value=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x810f

Write the value of the characteristic specified by its type in the remote ATTRIBUTE SERVER



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x0f", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."
	"**ValueHandle**", "", "2", "<H", "|  the handle of the characteristic for which the value should be read."
	"**ValueLen**", "", "1", "<B", "|  the handle of the characteristic for which the value should be written."
	"**Value**", "", "0", "None", "|  the value to write for in the valueHandle in the remote ATTRIBUTE SERVER database."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ErrorCode**", "1", "<B", "|  "
	"**ValueHandle**", "2", "<H", "|  "

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_WriteLongCharacteristicValue:


EMSHI_GATT_WriteLongCharacteristicValue_
----------------------------------------

**API usage:** 
``engine.send("EMSHI_GATT_WriteLongCharacteristicValue", ConnHandle=0xXx,ValueHandle=0xXx,ValueLen=0xXx,Value=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_WriteLongCharacteristicValue --ConnHandle=0xXx --ValueHandle=0xXx --ValueLen=0xXx --Value=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8110

Write the long value of the characteristic specified by its type in the remote ATTRIBUTE SERVER



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x10", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."
	"**ValueHandle**", "", "2", "<H", "|  the handle of the characteristic for which the value should be read."
	"**ValueLen**", "", "1", "<B", "|  the handle of the characteristic for which the value should be written."
	"**Value**", "", "0", "None", "|  the value to write for in the valueHandle in the remote ATTRIBUTE SERVER database."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ErrorCode**", "1", "<B", "|  "
	"**ValueHandle**", "2", "<H", "|  "

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_ConfirmIndication:


EMSHI_GATT_ConfirmIndication_
-----------------------------

**API usage:** 
``engine.send("EMSHI_GATT_ConfirmIndication", ConnHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_ConfirmIndication --ConnHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8111

Confim an Indication received by the remote ATTRIBUTE SERVER



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x11", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_EndSubProcedure:


EMSHI_GATT_EndSubProcedure_
---------------------------

**API usage:** 
``engine.send("EMSHI_GATT_EndSubProcedure")``

**CLI usage:**
``blengine send EMSHI_GATT_EndSubProcedure``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8112

Terminate the ongoing Sub-procedure



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x12", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_ExchangeMTU:


EMSHI_GATT_ExchangeMTU_
-----------------------

**API usage:** 
``engine.send("EMSHI_GATT_ExchangeMTU", ConnHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_ExchangeMTU --ConnHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8113

Exchange the MTU with the remote ATTRIBUTE SERVER



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x13", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**negociatedMTUValue**", "2", "<H", "|  "

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_ReadLongCharacteristicValueByHandleEx:


EMSHI_GATT_ReadLongCharacteristicValueByHandleEx_
-------------------------------------------------

**API usage:** 
``engine.send("EMSHI_GATT_ReadLongCharacteristicValueByHandleEx", ConnHandle=0xXx,ValueHandle=0xXx,Offset=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_ReadLongCharacteristicValueByHandleEx --ConnHandle=0xXx --ValueHandle=0xXx --Offset=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8114

Read the value of the characteristic specified by its handle in the remote ATTRIBUTE SERVER



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x14", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."
	"**ValueHandle**", "", "2", "<H", "|  the handle of the characteristic for which the value should be read.."
	"**Offset**", "", "2", "<H", "|  Offset to start to read the characteristic Value."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ErrorCode**", "1", "<B", "|  "
	"**ValueHandle**", "2", "<H", "|  "
	"**ValueLen**", "2", "<H", "|  "
	"**Value**", "0", "None", "|  "

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GATT_WriteLongCharacteristicValueEx:


EMSHI_GATT_WriteLongCharacteristicValueEx_
------------------------------------------

**API usage:** 
``engine.send("EMSHI_GATT_WriteLongCharacteristicValueEx", ConnHandle=0xXx,ValueHandle=0xXx,ValueLen=0xXx,Value=0xXx)``

**CLI usage:**
``blengine send EMSHI_GATT_WriteLongCharacteristicValueEx --ConnHandle=0xXx --ValueHandle=0xXx --ValueLen=0xXx --Value=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8115

Write the long value of the characteristic specified by its type in the remote ATTRIBUTE SERVER



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x81", "1", "<B", "|  No Description"
	"**command**", "0x15", "1", "<B", "|  No Description"
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the ATTRIBUTE SERVER holding the primary services to discover."
	"**ValueHandle**", "", "2", "<H", "|  the handle of the characteristic for which the value should be read."
	"**Offset**", "0x00", "2", "<H", "|  Offset to start to write the characteristic Value."
	"**ValueLen**", "", "1", "<B", "|  the handle of the characteristic for which the value should be written."
	"**Value**", "", "0", "None", "|  the value to write for in the valueHandle in the remote ATTRIBUTE SERVER database."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ErrorCode**", "1", "<B", "|  "
	"**ValueHandle**", "2", "<H", "|  "

.. raw:: html
    
    <hr>

