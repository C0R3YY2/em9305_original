
.. this file is auto generated by docs/packets.py

==============================
em.system.hi.cmd.att 
==============================

.. contents:: Index
   :local:
   :depth: 2

.. raw:: html

    <input class="search input" type="text" placeholder="Live Search" style="width: 100%; padding: 10px;">
    <div>&nbsp</div>
    <div id="search-loader" style="display:none;">please wait...</div>
    <div id="count">28 Packets</div>


.. _pkt-EMSHI_ATT_is128bitsUUIDBtMasked:


EMSHI_ATT_is128bitsUUIDBtMasked_
--------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_is128bitsUUIDBtMasked", UUID=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_is128bitsUUIDBtMasked --UUID=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8201

Ask if the given 128 bit UUID is 
  |          masked with the BLUETOOTH BASE UUID



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x01", "1", "<B", "|  No Description"
	"**UUID**", "", "16", "<16s", "|  A 128 bit UUID"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_Are16bitsUUIDEquals:


EMSHI_ATT_Are16bitsUUIDEquals_
------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_Are16bitsUUIDEquals", givenUuid=0xXx,UUID=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_Are16bitsUUIDEquals --givenUuid=0xXx --UUID=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8202

Ask if the given  UUID is equal to 
  |          the given 16 bits UUID



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x02", "1", "<B", "|  No Description"
	"**givenUuid**", "", "2", "<H", "|  A UUID"
	"**UUID**", "", "2", "<H", "|  A 16 bit UUID to compare with givenUuid"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_Are128bitsUUIDEquals:


EMSHI_ATT_Are128bitsUUIDEquals_
-------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_Are128bitsUUIDEquals", givenUuid=0xXx,UUID=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_Are128bitsUUIDEquals --givenUuid=0xXx --UUID=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8203

Ask if the given  UUID is equal to 
  |          the given 128 bits UUID



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x03", "1", "<B", "|  No Description"
	"**givenUuid**", "", "16", "<16s", "|  A UUID"
	"**UUID**", "", "16", "<16s", "|  A 128 bit UUID to compare with givenUuid"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_SecureDatabaseAccess:


EMSHI_ATT_SERVER_SecureDatabaseAccess_
--------------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_SecureDatabaseAccess")``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_SecureDatabaseAccess``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8280

Prevents other service/profiles/remote
  |          device from accessing the database while the profile/application is doing it.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x80", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_ReleaseDatabaseAccess:


EMSHI_ATT_SERVER_ReleaseDatabaseAccess_
---------------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_ReleaseDatabaseAccess")``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_ReleaseDatabaseAccess``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8281

Release the database access previoulsy 
  |      locked by ATT_SERVER_SecureDatabaseAccess.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x81", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_RegisterServiceAttribute:


EMSHI_ATT_SERVER_RegisterServiceAttribute_
------------------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_RegisterServiceAttribute", AddressServiceAttribute=0xXx,AddressValue=0xXx,ValueLen=0xXx,Value=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_RegisterServiceAttribute --AddressServiceAttribute=0xXx --AddressValue=0xXx --ValueLen=0xXx --Value=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8282

Start a new empty service page i.e. 
  |          add a service attribute to the database.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x82", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**AddressServiceAttribute**", "", "4", "<L", "|  Memory Allocation Address Service Attribute"
	"**AddressValue**", "", "4", "<L", "|  Value Allocation Address Value"
	"**ValueLen**", "", "2", "<H", "|  the length of the value of this attribute."
	"**Value**", "", "0", "None", "|  the value (the service UUID) 2 or 16 bytes"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_isServiceAlreadyRegistered:


EMSHI_ATT_SERVER_isServiceAlreadyRegistered_
--------------------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_isServiceAlreadyRegistered", UUIDLen=0xXx,ServiceUUID=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_isServiceAlreadyRegistered --UUIDLen=0xXx --ServiceUUID=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8283

Check if the service is already 
  |          registered in the local database.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x83", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**UUIDLen**", "", "1", "<B", "|  The length if service value in the serviceUUID buffer, 
  |                      typically 2 or 16"
	"**ServiceUUID**", "", "16", "<16s", "|  The serviceUUID to check, LSO based"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**Registered**", "1", "<B", "|  0: Unregistered Service
  |                                                                1: Registered Service"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_RemoveAttribute:


EMSHI_ATT_SERVER_RemoveAttribute_
---------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_RemoveAttribute", AddressAttribute=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_RemoveAttribute --AddressAttribute=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8284

Remove an attribute from the database.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x84", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**AddressAttribute**", "", "4", "<L", "|  Memory Allocation Address Attribute"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_AddCharacteristic:


EMSHI_ATT_SERVER_AddCharacteristic_
-----------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_AddCharacteristic", CharacteristicProperty=0xXx,ValueRemoteAccessPermissions=0xXx,IsVariableValueLengh=0xXx,MaxValueLen=0xXx,AddressCharacteristicAttribute=0xXx,AddressValue=0xXx,AddressServiceAttribute=0xXx,AddressValueAttribute=0xXx,UUIDType=0xXx,UUID=0xXx,ValueLen=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_AddCharacteristic --CharacteristicProperty=0xXx --ValueRemoteAccessPermissions=0xXx --IsVariableValueLengh=0xXx --MaxValueLen=0xXx --AddressCharacteristicAttribute=0xXx --AddressValue=0xXx --AddressServiceAttribute=0xXx --AddressValueAttribute=0xXx --UUIDType=0xXx --UUID=0xXx --ValueLen=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8285

Add a characteristic to a service page 
  |          i.e. following a given service attribute.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x85", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**CharacteristicProperty**", "", "1", "<B", "|  the length of the value of this attribute."
	"**ValueRemoteAccessPermissions**", "", "1", "<B", "|  Whether the characteristic value may be 
  |                      read/written by peer devices."
	"**IsVariableValueLengh**", "", "1", "<B", "|  defines if the characteristic value size."
	"**MaxValueLen**", "", "2", "<H", "|  in case of the characteristic value size is 
  |                      variable the maximum size allowed for the attribute."
	"**AddressCharacteristicAttribute**", "", "4", "<L", "|  Memory Allocation Address Characteristic Attribute"
	"**AddressValue**", "", "4", "<L", "|  Memory Allocation Address Value"
	"**AddressServiceAttribute**", "", "4", "<L", "|  Memory Allocation Address Service Attribute"
	"**AddressValueAttribute**", "", "4", "<L", "|  Memory Allocation Address Value Attribute"
	"**UUIDType**", "", "1", "<B", "|  Type Uuid 0:16-bit 1:128-bit"
	"**UUID**", "", "16", "<16s", "|  a 16 or 128-bits UUID."
	"**ValueLen**", "", "2", "<H", "|  the length of the value of this characteristic value."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_AddCharacteristicUserDescription:


EMSHI_ATT_SERVER_AddCharacteristicUserDescription_
--------------------------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_AddCharacteristicUserDescription", AddressCharacteristicAttribute=0xXx,AddressValueAttribute=0xXx,AddressValue=0xXx,UserDescriptionLen=0xXx,UserDescription=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_AddCharacteristicUserDescription --AddressCharacteristicAttribute=0xXx --AddressValueAttribute=0xXx --AddressValue=0xXx --UserDescriptionLen=0xXx --UserDescription=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8286

Add a characteristic 
  |          Format descriptor to a specified characteristic



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x86", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**AddressCharacteristicAttribute**", "", "4", "<L", "|  Memory Allocation Address Characteristic Attribute"
	"**AddressValueAttribute**", "", "4", "<L", "|  Memory Allocation Address Value Attribute"
	"**AddressValue**", "", "4", "<L", "|  Memory Allocation Address Value"
	"**UserDescriptionLen**", "", "2", "<H", "|  The length of data in the userDescription"
	"**UserDescription**", "", "0", "None", "|  The user description descriptor value"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_AddCharacteristicFormat:


EMSHI_ATT_SERVER_AddCharacteristicFormat_
-----------------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_AddCharacteristicFormat", AddressCharacteristicAttribute=0xXx,AddressValueAttribute=0xXx,AddressFormat=0xXx,Format=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_AddCharacteristicFormat --AddressCharacteristicAttribute=0xXx --AddressValueAttribute=0xXx --AddressFormat=0xXx --Format=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8287

Add a characteristic 
  |          Format descriptor to a specified characteristic



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x87", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**AddressCharacteristicAttribute**", "", "4", "<L", "|  Memory Allocation Address Characteristic Attribute"
	"**AddressValueAttribute**", "", "4", "<L", "|  Memory Allocation Address Value Attribute"
	"**AddressFormat**", "", "4", "<L", "|  Memory Allocation Address Format"
	"**Format**", "", "7", "<7s", "|  the value of the format descriptor,"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_AddCharacteristicExtendedProperties:


EMSHI_ATT_SERVER_AddCharacteristicExtendedProperties_
-----------------------------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_AddCharacteristicExtendedProperties", AddressCharacteristicAttribute=0xXx,AddressValueAttribute=0xXx,ExtProperties=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_AddCharacteristicExtendedProperties --AddressCharacteristicAttribute=0xXx --AddressValueAttribute=0xXx --ExtProperties=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8288

Add a characteristic 
  |          Extended Properties configuration descriptor to a specified characteristic



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x88", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**AddressCharacteristicAttribute**", "", "4", "<L", "|  Memory Allocation Address Characteristic Attribute"
	"**AddressValueAttribute**", "", "4", "<L", "|  Memory Allocation Address Value Attribute"
	"**ExtProperties**", "", "2", "<H", "|  the initial value of the configuration"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_AddCharacteristicClientConfig:


EMSHI_ATT_SERVER_AddCharacteristicClientConfig_
-----------------------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_AddCharacteristicClientConfig", AddressCharacteristicAttribute=0xXx,AddressConfigValue=0xXx,AddressConfigAttribute=0xXx,IsValuePersistent=0xXx,InfoType=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_AddCharacteristicClientConfig --AddressCharacteristicAttribute=0xXx --AddressConfigValue=0xXx --AddressConfigAttribute=0xXx --IsValuePersistent=0xXx --InfoType=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8289

Add a 
  |          characteristic Format descriptor to a specified characteristic



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x89", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**AddressCharacteristicAttribute**", "", "4", "<L", "|  Memory Allocation Address Characteristic Attribute"
	"**AddressConfigValue**", "", "4", "<L", "|  Memory Allocation Address Config Value"
	"**AddressConfigAttribute**", "", "4", "<L", "|  Memory Allocation Address Config Attribute"
	"**IsValuePersistent**", "", "1", "<B", "|  a variable indicating if the instance of the
  |                      attribute value must be saved into non volatile memory in 
  |                      order to be restored upon reconnection."
	"**InfoType**", "", "1", "<B", "|  a constant indicating in which infotype the information is
  |                      saved in persistent memory."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_AddCharacteristicServerConfig:


EMSHI_ATT_SERVER_AddCharacteristicServerConfig_
-----------------------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_AddCharacteristicServerConfig", AddressCharacteristicAttribute=0xXx,AddressConfigAttribute=0xXx,ServerConfig=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_AddCharacteristicServerConfig --AddressCharacteristicAttribute=0xXx --AddressConfigAttribute=0xXx --ServerConfig=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x828a

the characteristic handle 
  |          for which this descriptor applies



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x8a", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**AddressCharacteristicAttribute**", "", "4", "<L", "|  Memory Allocation Address Characteristic Attribute"
	"**AddressConfigAttribute**", "", "4", "<L", "|  Memory Allocation Address Config Attribute"
	"**ServerConfig**", "", "2", "<H", "|  the value of the configuration"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_AddCharacteristicSpecificDescriptor:


EMSHI_ATT_SERVER_AddCharacteristicSpecificDescriptor_
-----------------------------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_AddCharacteristicSpecificDescriptor", ValueRemoteAccessPermissions=0xXx,IsVariableValueLengh=0xXx,MaxValueLen=0xXx,AddressCharacteristicAttribute=0xXx,AddressValue=0xXx,AddressValueAttribute=0xXx,UUID=0xXx,ValueLen=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_AddCharacteristicSpecificDescriptor --ValueRemoteAccessPermissions=0xXx --IsVariableValueLengh=0xXx --MaxValueLen=0xXx --AddressCharacteristicAttribute=0xXx --AddressValue=0xXx --AddressValueAttribute=0xXx --UUID=0xXx --ValueLen=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x828b

Add a specific 
  |          characteristic specific descriptor to a specified characteristic



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x8b", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ValueRemoteAccessPermissions**", "", "1", "<B", "|  Whether the characteristic value may be 
  |                      read/written by peer devices."
	"**IsVariableValueLengh**", "", "1", "<B", "|  defines if the characteristic value size."
	"**MaxValueLen**", "", "2", "<H", "|  in case of the characteristic value size is 
  |                      variable the maximum size allowed for the attribute."
	"**AddressCharacteristicAttribute**", "", "4", "<L", "|  Memory Allocation Address Characteristic Attribute"
	"**AddressValue**", "", "4", "<L", "|  Memory Allocation Address Value"
	"**AddressValueAttribute**", "", "4", "<L", "|  Memory Allocation Address Value Attribute"
	"**UUIDType**", "0x01", "1", "<B", "|  Type Uuid 0:16-bit 1:128-bit"
	"**UUID**", "", "16", "<16s", "|  a 16 or 128-bits UUID."
	"**ValueLen**", "", "2", "<H", "|  the length of the value of this characteristic value."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_AddServiceRelashionship:


EMSHI_ATT_SERVER_AddServiceRelashionship_
-----------------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_AddServiceRelashionship", AddressService=0xXx,AddressIncludedService=0xXx,AddressIncludeAttribute=0xXx,IncludedValue=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_AddServiceRelashionship --AddressService=0xXx --AddressIncludedService=0xXx --AddressIncludeAttribute=0xXx --IncludedValue=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x828c

Add a service 
  |          inclusion in the given Service



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x8c", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**AddressService**", "", "4", "<L", "|  Memory Allocation Address Service"
	"**AddressIncludedService**", "", "4", "<L", "|  Memory Allocation Address Included Service"
	"**AddressIncludeAttribute**", "", "4", "<L", "|  Memory Allocation Address Include Attribute"
	"**IncludedValue**", "", "4", "<L", "|  Memory Allocation Address Include Value"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_ReadAttributeValue:


EMSHI_ATT_SERVER_ReadAttributeValue_
------------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_ReadAttributeValue", Address=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_ReadAttributeValue --Address=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x828e

Read the value of an attribute 
  |          in the attribute database.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x8e", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**Address**", "", "4", "<L", "|  Memory Allocation Address"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ValueLen**", "2", "<H", "|  the length of the value."
	"**Value**", "0", "None", "|  the value."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_ReadInstantiatedAttributeValue:


EMSHI_ATT_SERVER_ReadInstantiatedAttributeValue_
------------------------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_ReadInstantiatedAttributeValue", ConnHandle=0xXx,Address=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_ReadInstantiatedAttributeValue --ConnHandle=0xXx --Address=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x828f

Read the value of an attribute 
  |          in the attribute database.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x8f", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the connection to 
  |                   retrieve information"
	"**Address**", "", "4", "<L", "|  Memory Allocation Address"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**ValueLen**", "2", "<H", "|  the length of the value."
	"**Value**", "0", "None", "|  the value."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_WriteInstantiatedAttributeValue:


EMSHI_ATT_SERVER_WriteInstantiatedAttributeValue_
-------------------------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_WriteInstantiatedAttributeValue", ConnHandle=0xXx,Address=0xXx,Length=0xXx,Value=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_WriteInstantiatedAttributeValue --ConnHandle=0xXx --Address=0xXx --Length=0xXx --Value=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8290

Write the value of an client 
  |          instantiated attribute in the attribute database.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x90", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ConnHandle**", "", "2", "<H", "|  the connection handle that identify the connection to 
  |                   retrieve information"
	"**Address**", "", "4", "<L", "|  Memory Allocation Address"
	"**Length**", "", "2", "<H", "|  the length of the value,"
	"**Value**", "", "0", "None", "|  the value,"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_WriteAttributeValue:


EMSHI_ATT_SERVER_WriteAttributeValue_
-------------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_WriteAttributeValue", Address=0xXx,Length=0xXx,Value=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_WriteAttributeValue --Address=0xXx --Length=0xXx --Value=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8291

Re-write the value of an attribute 
  |          in the attribute database.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x91", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**Address**", "", "4", "<L", "|  Memory Allocation Address"
	"**Length**", "", "2", "<H", "|  the length of the value,"
	"**Value**", "", "0", "None", "|  the value,"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_GetHandle:


EMSHI_ATT_SERVER_GetHandle_
---------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_GetHandle", Address=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_GetHandle --Address=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8292

Gives the handle of 
  |          an attribute in the database.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x92", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**Address**", "", "4", "<L", "|  Memory Allocation Address"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**Handle**", "2", "<H", "|  the handle."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_SendNotification:


EMSHI_ATT_SERVER_SendNotification_
----------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_SendNotification", DestinationHandle=0xXx,Address=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_SendNotification --DestinationHandle=0xXx --Address=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8293

Send a 
  |          Handle Value Notification to an attribute client.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x93", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**DestinationHandle**", "", "2", "<H", "|  the connection handle to the device to which this should be sent."
	"**Address**", "", "4", "<L", "|  Memory Allocation Address"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_SendIndication:


EMSHI_ATT_SERVER_SendIndication_
--------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_SendIndication", DestinationHandle=0xXx,Address=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_SendIndication --DestinationHandle=0xXx --Address=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8294

Send a 
  |          Handle Value Indication to an attribute client.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x94", "1", "<B", "|  No Description"
	"**SecureDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**ReleaseDatabase**", "0x01", "1", "<B", "|  Release Database."
	"**DestinationHandle**", "", "2", "<H", "|  the connection handle to the device to which this should be sent."
	"**Address**", "", "4", "<L", "|  Memory Allocation Address"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_SERVER_Attribute_Size:


EMSHI_ATT_SERVER_Attribute_Size_
--------------------------------

**API usage:** 
``engine.send("EMSHI_ATT_SERVER_Attribute_Size")``

**CLI usage:**
``blengine send EMSHI_ATT_SERVER_Attribute_Size``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8298

Attribute Memory Size



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x82", "1", "<B", "|  No Description"
	"**command**", "0x98", "1", "<B", "|  No Description"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**Service**", "1", "<B", "|  Size in bytes of Service Attribute."
	"**Attribute**", "1", "<B", "|  Size in bytes of Attribute."
	"**16BitCharacteristic**", "1", "<B", "|  Size in bytes of 16 Bit Characteristic."
	"**128BitCharacteristic**", "1", "<B", "|  Size in bytes of 128 Bit Characteristic."
	"**Instantiated**", "1", "<B", "|  Size in bytes of Instantiated Attribute."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_Welcome:


EMSHI_ATT_Welcome_
------------------

**API usage:** 
``engine.send("EMSHI_ATT_Welcome")``

**CLI usage:**
``blengine send EMSHI_ATT_Welcome``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d00

Welcome to the DM



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x00", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_Register:


EMSHI_ATT_Register_
-------------------

**API usage:** 
``engine.send("EMSHI_ATT_Register")``

**CLI usage:**
``blengine send EMSHI_ATT_Register``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d01

Register a callback with ATT.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x01", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_ConnRegister:


EMSHI_ATT_ConnRegister_
-----------------------

**API usage:** 
``engine.send("EMSHI_ATT_ConnRegister")``

**CLI usage:**
``blengine send EMSHI_ATT_ConnRegister``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d02

Register a connection callback with ATT.  The callback is typically used to
  |   *          manage the attribute server database.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x02", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATT_GetMtu:


EMSHI_ATT_GetMtu_
-----------------

**API usage:** 
``engine.send("EMSHI_ATT_GetMtu", ConnId=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATT_GetMtu --ConnId=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d21

Get the attribute protocol MTU of a connection.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x21", "1", "<B", "|  No Description"
	"**ConnId**", "", "1", "<B", "|  DM connection ID."

.. raw:: html
    
    <hr>

