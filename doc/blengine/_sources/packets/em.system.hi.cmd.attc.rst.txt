
.. this file is auto generated by docs/packets.py

===============================
em.system.hi.cmd.attc 
===============================

.. contents:: Index
   :local:
   :depth: 2

.. raw:: html

    <input class="search input" type="text" placeholder="Live Search" style="width: 100%; padding: 10px;">
    <div>&nbsp</div>
    <div id="search-loader" style="display:none;">please wait...</div>
    <div id="count">17 Packets</div>


.. _pkt-EMSHI_ATTC_Init:


EMSHI_ATTC_Init_
----------------

**API usage:** 
``engine.send("EMSHI_ATTC_Init")``

**CLI usage:**
``blengine send EMSHI_ATTC_Init``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d11

Initialize ATT client.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x11", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_SignInit:


EMSHI_ATTC_SignInit_
--------------------

**API usage:** 
``engine.send("EMSHI_ATTC_SignInit")``

**CLI usage:**
``blengine send EMSHI_ATTC_SignInit``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d12

Initialize ATT client for data signing.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x12", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_FindInfoReq:


EMSHI_ATTC_FindInfoReq_
-----------------------

**API usage:** 
``engine.send("EMSHI_ATTC_FindInfoReq", connId=0xXx,startHandle=0xXx,endHandle=0xXx,continuing=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTC_FindInfoReq --connId=0xXx --startHandle=0xXx --endHandle=0xXx --continuing=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d13

Initiate an attribute protocol Find Information Request.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x13", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**startHandle**", "", "2", "<H", "|  Attribute start handle."
	"**endHandle**", "", "2", "<H", "|  Attribute end handle."
	"**continuing**", "", "1", "<B", "|  TRUE if ATTC continues sending requests until complete."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_FindByTypeValueReq:


EMSHI_ATTC_FindByTypeValueReq_
------------------------------

**API usage:** 
``engine.send("EMSHI_ATTC_FindByTypeValueReq", connId=0xXx,startHandle=0xXx,endHandle=0xXx,uuid16=0xXx,valueLen=0xXx,pValue=0xXx,continuing=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTC_FindByTypeValueReq --connId=0xXx --startHandle=0xXx --endHandle=0xXx --uuid16=0xXx --valueLen=0xXx --pValue=0xXx --continuing=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d14

Initiate an attribute protocol Find By Type Value Request.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x14", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**startHandle**", "", "2", "<H", "|  Attribute start handle."
	"**endHandle**", "", "2", "<H", "|  Attribute end handle."
	"**uuid16**", "", "2", "<H", "|  16-bit UUID to find."
	"**valueLen**", "", "2", "<H", "|  Length of value data."
	"**pValue**", "", "16", "<16s", "|  Pointer to value data."
	"**continuing**", "", "1", "<B", "|  TRUE if ATTC continues sending requests until complete."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_ReadByTypeReq:


EMSHI_ATTC_ReadByTypeReq_
-------------------------

**API usage:** 
``engine.send("EMSHI_ATTC_ReadByTypeReq", connId=0xXx,startHandle=0xXx,endHandle=0xXx,uuidLen=0xXx,pUuid=0xXx,continuing=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTC_ReadByTypeReq --connId=0xXx --startHandle=0xXx --endHandle=0xXx --uuidLen=0xXx --pUuid=0xXx --continuing=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d15

Initiate an attribute protocol Read By Type Request.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x15", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**startHandle**", "", "2", "<H", "|  Attribute start handle."
	"**endHandle**", "", "2", "<H", "|  Attribute end handle."
	"**uuidLen**", "", "1", "<B", "|  Length of UUID (2 or 16)."
	"**pUuid**", "", "16", "<16s", "|  Pointer to UUID data."
	"**continuing**", "", "1", "<B", "|  TRUE if ATTC continues sending requests until complete."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_ReadLongReq:


EMSHI_ATTC_ReadLongReq_
-----------------------

**API usage:** 
``engine.send("EMSHI_ATTC_ReadLongReq", connId=0xXx,handle=0xXx,offset=0xXx,continuing=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTC_ReadLongReq --connId=0xXx --handle=0xXx --offset=0xXx --continuing=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d16

Initiate an attribute protocol Read Long Request.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x16", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**handle**", "", "2", "<H", "|  Attribute handle."
	"**offset**", "", "2", "<H", "|  Read attribute data starting at this offset."
	"**continuing**", "", "1", "<B", "|  TRUE if ATTC continues sending requests until complete."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_ReadMultipleReq:


EMSHI_ATTC_ReadMultipleReq_
---------------------------

**API usage:** 
``engine.send("EMSHI_ATTC_ReadMultipleReq", connId=0xXx,numHandles=0xXx,pHandles=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTC_ReadMultipleReq --connId=0xXx --numHandles=0xXx --pHandles=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d17

Initiate an attribute protocol Read Multiple Request.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x17", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**numHandles**", "", "1", "<B", "|  Number of handles in attribute handle list."
	"**pHandles**", "", "0", "None", "|  List of attribute handles."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_ReadReq:


EMSHI_ATTC_ReadReq_
-------------------

**API usage:** 
``engine.send("EMSHI_ATTC_ReadReq", connId=0xXx,handle=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTC_ReadReq --connId=0xXx --handle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d18

Initiate an attribute protocol Read Request.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x18", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**handle**", "", "2", "<H", "|  Attribute handle."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_ReadByGroupTypeReq:


EMSHI_ATTC_ReadByGroupTypeReq_
------------------------------

**API usage:** 
``engine.send("EMSHI_ATTC_ReadByGroupTypeReq", connId=0xXx,startHandle=0xXx,endHandle=0xXx,uuidLen=0xXx,pUuid=0xXx,continuing=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTC_ReadByGroupTypeReq --connId=0xXx --startHandle=0xXx --endHandle=0xXx --uuidLen=0xXx --pUuid=0xXx --continuing=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d19

Initiate an attribute protocol Read By Group Type Request.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x19", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**startHandle**", "", "2", "<H", "|  Attribute start handle."
	"**endHandle**", "", "2", "<H", "|  Attribute end handle."
	"**uuidLen**", "", "1", "<B", "|  Length of UUID (2 or 16)."
	"**pUuid**", "", "16", "<16s", "|  Pointer to UUID data."
	"**continuing**", "", "1", "<B", "|  TRUE if ATTC continues sending requests until complete."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_WriteCmd:


EMSHI_ATTC_WriteCmd_
--------------------

**API usage:** 
``engine.send("EMSHI_ATTC_WriteCmd", connId=0xXx,handle=0xXx,valueLen=0xXx,pValue=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTC_WriteCmd --connId=0xXx --handle=0xXx --valueLen=0xXx --pValue=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d1a

Initiate an attribute protocol Write Command.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x1a", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**handle**", "", "2", "<H", "|  Attribute handle."
	"**valueLen**", "", "2", "<H", "|  Length of value data."
	"**pValue**", "", "0", "None", "|  Pointer to value data."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_PrepareWriteReq:


EMSHI_ATTC_PrepareWriteReq_
---------------------------

**API usage:** 
``engine.send("EMSHI_ATTC_PrepareWriteReq", connId=0xXx,handle=0xXx,offset=0xXx,valueLen=0xXx,valueByRef=0xXx,continuing=0xXx,pValue=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTC_PrepareWriteReq --connId=0xXx --handle=0xXx --offset=0xXx --valueLen=0xXx --valueByRef=0xXx --continuing=0xXx --pValue=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d1b

Initiate an attribute protocol Prepare Write Request.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x1b", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**handle**", "", "2", "<H", "|  Attribute handle."
	"**offset**", "", "2", "<H", "|  Write attribute data starting at this offset."
	"**valueLen**", "", "2", "<H", "|  Length of value data."
	"**valueByRef**", "", "1", "<B", "|  TRUE if pValue data is accessed by reference rather than copied."
	"**continuing**", "", "1", "<B", "|  TRUE if ATTC continues sending requests until complete."
	"**pValue**", "", "0", "None", "|  Pointer to value data."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_ExecuteWriteReq:


EMSHI_ATTC_ExecuteWriteReq_
---------------------------

**API usage:** 
``engine.send("EMSHI_ATTC_ExecuteWriteReq", connId=0xXx,writeAll=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTC_ExecuteWriteReq --connId=0xXx --writeAll=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d1c

Initiate an attribute protocol Execute Write Request.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x1c", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**writeAll**", "", "1", "<B", "|  TRUE to write all queued writes, FALSE to cancel all queued writes."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_SignedWriteCmd:


EMSHI_ATTC_SignedWriteCmd_
--------------------------

**API usage:** 
``engine.send("EMSHI_ATTC_SignedWriteCmd", connId=0xXx,handle=0xXx,signCounter=0xXx,valueLen=0xXx,pValue=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTC_SignedWriteCmd --connId=0xXx --handle=0xXx --signCounter=0xXx --valueLen=0xXx --pValue=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d1d

Initiate an attribute protocol signed Write Command.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x1d", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**handle**", "", "1", "<B", "|  Attribute handle."
	"**signCounter**", "", "1", "<B", "|  Value of the sign counter."
	"**valueLen**", "", "1", "<B", "|  Length of value data."
	"**pValue**", "", "1", "<B", "|  Pointer to value data."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_WriteReq:


EMSHI_ATTC_WriteReq_
--------------------

**API usage:** 
``engine.send("EMSHI_ATTC_WriteReq", connId=0xXx,handle=0xXx,valueLen=0xXx,pValue=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTC_WriteReq --connId=0xXx --handle=0xXx --valueLen=0xXx --pValue=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d1e

Initiate an attribute protocol Write Request.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x1e", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**handle**", "", "2", "<H", "|  Attribute handle."
	"**valueLen**", "", "2", "<H", "|  Length of value data."
	"**pValue**", "", "0", "None", "|  Pointer of value data."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_MtuReq:


EMSHI_ATTC_MtuReq_
------------------

**API usage:** 
``engine.send("EMSHI_ATTC_MtuReq", connId=0xXx,mtu=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTC_MtuReq --connId=0xXx --mtu=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d1f

Initiate an attribute protocol Exchange MTU Request.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x1f", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**mtu**", "", "2", "<H", "|  Attribute protocol MTU."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_IndConfirm:


EMSHI_ATTC_IndConfirm_
----------------------

**API usage:** 
``engine.send("EMSHI_ATTC_IndConfirm", connId=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTC_IndConfirm --connId=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d20

Send an attribute protocol indication confirmation.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x20", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTC_DiscService:


EMSHI_ATTC_DiscService_
-----------------------

**API usage:** 
``engine.send("EMSHI_ATTC_DiscService", connId=0xXx,pUuid_pCharList=0xXx,settings_pCharList=0xXx,Value_pCfgList=0xXx,valueLen_pCfgList=0xXx,hdlIdx_pCfgList=0xXx,charListLen=0xXx,cfgListLen=0xXx,svcStartHdl=0xXx,svcEndHdl=0xXx,charListIdx=0xXx,endHdlIdx=0xXx,uuidLen=0xXx,pUuid=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTC_DiscService --connId=0xXx --pUuid_pCharList=0xXx --settings_pCharList=0xXx --Value_pCfgList=0xXx --valueLen_pCfgList=0xXx --hdlIdx_pCfgList=0xXx --charListLen=0xXx --cfgListLen=0xXx --svcStartHdl=0xXx --svcEndHdl=0xXx --charListIdx=0xXx --endHdlIdx=0xXx --uuidLen=0xXx --pUuid=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d24

This utility function discovers the given service on a peer device. Function AttcFindByTypeValueReq() is called to initiate the discovery procedure.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x24", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**pUuid_pCharList**", "", "1", "<B", "|  Pointer to UUID"
	"**settings_pCharList**", "", "1", "<B", "|  Characteristic discovery settings"
	"**Value_pCfgList**", "", "1", "<B", "|  Pointer to default value or NULL"
	"**valueLen_pCfgList**", "", "1", "<B", "|  Default value length"
	"**hdlIdx_pCfgList**", "", "1", "<B", "|  Index of its handle in handle list"
	"**charListLen**", "", "1", "<B", "|  Characteristic and handle list length"
	"**cfgListLen**", "", "1", "<B", "|  Configuration list length"
	"**svcStartHdl**", "", "1", "<B", "|  Internal use only"
	"**svcEndHdl**", "", "1", "<B", "|  Internal use only"
	"**charListIdx**", "", "1", "<B", "|  Internal use only"
	"**endHdlIdx**", "", "1", "<B", "|  Internal use only"
	"**uuidLen**", "", "1", "<B", "|  Length of service UUID (2 or 16)."
	"**pUuid**", "", "1", "<B", "|  Pointer to service UUID."

.. raw:: html
    
    <hr>

