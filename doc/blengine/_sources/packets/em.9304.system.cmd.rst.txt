
.. this file is auto generated by docs/packets.py

============================
em.9304.system.cmd 
============================

.. contents:: Index
   :local:
   :depth: 2

.. raw:: html

    <input class="search input" type="text" placeholder="Live Search" style="width: 100%; padding: 10px;">
    <div>&nbsp</div>
    <div id="search-loader" style="display:none;">please wait...</div>
    <div id="count">13 Packets</div>


.. _pkt-EM9304_SetPublicAddress:


EM9304_SetPublicAddress_
------------------------

**API usage:** 
``engine.send("EM9304_SetPublicAddress", Address=0xXx)``

**CLI usage:**
``blengine send EM9304_SetPublicAddress --Address=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc02





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x02fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Address**", "", "6", "<6s", "|  Device public address."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EM9304_Set_Sleep_Options:


EM9304_Set_Sleep_Options_
-------------------------

**API usage:** 
``engine.send("EM9304_Set_Sleep_Options", Sleep_Options=0xXx)``

**CLI usage:**
``blengine send EM9304_Set_Sleep_Options --Sleep_Options=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc2d





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x2dfc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Sleep_Options**", "", "1", "<B", "|  Sleep Options Settings.
  |  0x00 = Disable Automatic Sleep Mode
  |  0x01 = Enable Automatic Sleep Mode
  |  0x02  0xFF  Reserved"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EM9304_Read_At_Address:


EM9304_Read_At_Address_
-----------------------

**API usage:** 
``engine.send("EM9304_Read_At_Address", Start_Address=0xXx,Data_Length=0xXx)``

**CLI usage:**
``blengine send EM9304_Read_At_Address --Start_Address=0xXx --Data_Length=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc20





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x20fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Start_Address**", "", "4", "<L", "|  Address to start reading."
	"**Data_Length**", "", "1", "<B", "|  Number of bytes to read."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Data**", "0", "None", "|  Data read from the specified address."

.. raw:: html
    
    <hr>

.. _pkt-EM9304_Read_Continue:


EM9304_Read_Continue_
---------------------

**API usage:** 
``engine.send("EM9304_Read_Continue", Data_Length=0xXx)``

**CLI usage:**
``blengine send EM9304_Read_Continue --Data_Length=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc21





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x21fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Data_Length**", "", "1", "<B", "|  Number of bytes to read."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Data**", "0", "None", "|  Data read."

.. raw:: html
    
    <hr>

.. _pkt-EM9304_Write_At_Address:


EM9304_Write_At_Address_
------------------------

**API usage:** 
``engine.send("EM9304_Write_At_Address", Start_Address=0xXx,Data=0xXx)``

**CLI usage:**
``blengine send EM9304_Write_At_Address --Start_Address=0xXx --Data=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc22





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x22fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Start_Address**", "", "4", "<L", "|  Address to start writing."
	"**Data**", "", "0", "None", "|  Data to write to the specified address."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EM9304_Write_Continue:


EM9304_Write_Continue_
----------------------

**API usage:** 
``engine.send("EM9304_Write_Continue", Data=0xXx)``

**CLI usage:**
``blengine send EM9304_Write_Continue --Data=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc23





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x23fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Data**", "", "0", "None", "|  Data to write."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EM9304_WritePatchStart:


EM9304_WritePatchStart_
-----------------------

**API usage:** 
``engine.send("EM9304_WritePatchStart", CRC32=0xXx,Data=0xXx)``

**CLI usage:**
``blengine send EM9304_WritePatchStart --CRC32=0xXx --Data=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc27





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x27fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**DestinationMemory**", "0x00", "1", "<B", "|  0x00 = The patch should be written into IRAM1.
  |                             0x01 = The patch should be written into OTP.
  |                             0x02 - 0x0FF = Reserved."
	"**CRC32**", "", "4", "<L", "|  CRC32 of the patch data parameter to ensure correct read 
  |                  of this vendor command."
	"**Data**", "", "0", "None", "|  First portion of the patch data that may not exceed 59 bytes
  |                  (X <= 59)."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**PatchStatus**", "1", "<B", "|  Status code for the patch process.
  |              see table 5.6.12 of 9304-ds_0"

.. raw:: html
    
    <hr>

.. _pkt-EM9304_WritePatchContinue:


EM9304_WritePatchContinue_
--------------------------

**API usage:** 
``engine.send("EM9304_WritePatchContinue", SequenceNumber=0xXx,CRC32=0xXx,Data=0xXx)``

**CLI usage:**
``blengine send EM9304_WritePatchContinue --SequenceNumber=0xXx --CRC32=0xXx --Data=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc28





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x28fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**SequenceNumber**", "", "2", "<H", "|  Number for the patch data chunk. The sequence number
  |                  must start at 1 for a new patch and increment only when the
  |                  patch continue status is returned. The sequence may only
  |                  return to 1 for another patch after the EM_WritePatchStart
  |                  command completes successfully."
	"**CRC32**", "", "4", "<L", "|  CRC32 of the patch data parameter to ensure correct read 
  |                  of this vendor command."
	"**Data**", "", "0", "None", "|  First portion of the patch data that may not exceed 59 bytes
  |                  (X <= 59)."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**PatchStatus**", "1", "<B", "|  Status code for the patch process.
  |              see table 5.6.12 of 9304-ds_0"
	"**PatchAddress**", "4", "<4s", "|  When the patch applied status code is returned, this field
  |              contains the address where the patch was written."

.. raw:: html
    
    <hr>

.. _pkt-EM9304_WritePatchAbort:


EM9304_WritePatchAbort_
-----------------------

**API usage:** 
``engine.send("EM9304_WritePatchAbort")``

**CLI usage:**
``blengine send EM9304_WritePatchAbort``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc29





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x29fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Code_Value**", "0xdec0adde", "4", "<L", "|  The code 0xDEADC0DE must be provided to this vendor
  |                  command for successful completion. Upon successful
  |                  completion, the patch process is reset and a new patch may
  |                  be applied with the EM_WritePatch vendor command."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EM9304_CpuReset:


EM9304_CpuReset_
----------------

**API usage:** 
``engine.send("EM9304_CpuReset")``

**CLI usage:**
``blengine send EM9304_CpuReset``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc32





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x32fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EM9304_EM_Set_Rf_Power_Level_Ex:


EM9304_EM_Set_Rf_Power_Level_Ex_
--------------------------------

**API usage:** 
``engine.send("EM9304_EM_Set_Rf_Power_Level_Ex", Transmit_Power_Level=0xXx)``

**CLI usage:**
``blengine send EM9304_EM_Set_Rf_Power_Level_Ex --Transmit_Power_Level=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc26





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x26fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Transmit_Power_Level**", "", "1", "<B", "|  Transmit output power level defined in steps from 0 to
  |                  17 (0x11) Values 0x12  0xFF are reserved. See the
  |                  data sheet for power step definitions"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Max_Power_Level**", "1", "<B", "|  Maximum allowed power level. The returned power level
  |                  is provided as a power step as defined above."

.. raw:: html
    
    <hr>

.. _pkt-EM9304_EM_Transmitter_Test:


EM9304_EM_Transmitter_Test_
---------------------------

**API usage:** 
``engine.send("EM9304_EM_Transmitter_Test")``

**CLI usage:**
``blengine send EM9304_EM_Transmitter_Test``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc11





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x11fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Transmitter_Test_Mode**", "0x00", "1", "<B", "|  0x00 = EM transmitter test
  |              0x01 = CM (continuously modulated)
  |              0x02 = CW0 (continuous wave at bit 0)
  |              0x03 = CW1 (continuous wave modulated)
  |              0x04 = CWC (continuous wave at center frequency)
  |              0x05 - 0xFF Reserved"
	"**Channel_Number**", "0x00", "1", "<B", "|  0x00  0x27 = Bluetooth RF channel number (0  39)
  |              0x28  0xFF = Reserved)"
	"**Packet_Length**", "0x10", "1", "<B", "|  0x00  0xFF = Length in bytes of the test packet"
	"**Packet_Payload_Type**", "0x00", "1", "<B", "|  Packet payload type for EM and CM transmitter test
  |              modes.
  |              0x00 = Pseudo-Random bit sequence 9
  |              0x01 = Pattern of alternating bits 11110000
  |              0x02 = Pattern of alternating bits 10101010
  |              0x03 = Pseudo-Random bit sequence 9
  |              0x04 = Pattern of All 1 bits
  |              0x05 = Pattern of All 0 bits
  |              0x06 = Pattern of alternating bits 00001111
  |              0x07 = Pattern of alternating bits 01010101
  |              0x08  0xFF = Reserved"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EM9304_EM_Transmitter_Test_End:


EM9304_EM_Transmitter_Test_End_
-------------------------------

**API usage:** 
``engine.send("EM9304_EM_Transmitter_Test_End")``

**CLI usage:**
``blengine send EM9304_EM_Transmitter_Test_End``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc12





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x12fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Packet_Count**", "2", "<H", "|  Number of packets transmitted during the test"

.. raw:: html
    
    <hr>

