
.. this file is auto generated by docs/packets.py

===============================
em.system.hi.cmd.atts 
===============================

.. contents:: Index
   :local:
   :depth: 2

.. raw:: html

    <input class="search input" type="text" placeholder="Live Search" style="width: 100%; padding: 10px;">
    <div>&nbsp</div>
    <div id="search-loader" style="display:none;">please wait...</div>
    <div id="count">26 Packets</div>


.. _pkt-EMSHI_ATTS_Init:


EMSHI_ATTS_Init_
----------------

**API usage:** 
``engine.send("EMSHI_ATTS_Init")``

**CLI usage:**
``blengine send EMSHI_ATTS_Init``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d03

Initialize ATT server.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x03", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_IndInit:


EMSHI_ATTS_IndInit_
-------------------

**API usage:** 
``engine.send("EMSHI_ATTS_IndInit")``

**CLI usage:**
``blengine send EMSHI_ATTS_IndInit``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d04

Initialize ATT server for indications/notifications.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x04", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_SignInit:


EMSHI_ATTS_SignInit_
--------------------

**API usage:** 
``engine.send("EMSHI_ATTS_SignInit")``

**CLI usage:**
``blengine send EMSHI_ATTS_SignInit``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d05

Initialize ATT server for data signing.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x05", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_AddGroup:


EMSHI_ATTS_AddGroup_
--------------------

**API usage:** 
``engine.send("EMSHI_ATTS_AddGroup", svc_id=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_AddGroup --svc_id=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d06

Add an attribute group to the attribute server.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x06", "1", "<B", "|  No Description"
	"**svc_id**", "", "1", "<B", "|  Service Id between 0 till 23"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_RemoveGroup:


EMSHI_ATTS_RemoveGroup_
-----------------------

**API usage:** 
``engine.send("EMSHI_ATTS_RemoveGroup", startHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_RemoveGroup --startHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d07

Remove an attribute group from the attribute server.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x07", "1", "<B", "|  No Description"
	"**startHandle**", "", "1", "<B", "|  Start handle of attribute group to be removed."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_SetAttr:


EMSHI_ATTS_SetAttr_
-------------------

**API usage:** 
``engine.send("EMSHI_ATTS_SetAttr", handle=0xXx,valueLen=0xXx,pValue=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_SetAttr --handle=0xXx --valueLen=0xXx --pValue=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d08

Set an attribute value in the attribute server.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x08", "1", "<B", "|  No Description"
	"**handle**", "", "1", "<B", "|  Attribute handle."
	"**valueLen**", "", "1", "<B", "|  Attribute length."
	"**pValue**", "", "1", "<B", "|  Attribute value."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_GetAttr:


EMSHI_ATTS_GetAttr_
-------------------

**API usage:** 
``engine.send("EMSHI_ATTS_GetAttr", handle=0xXx,Len=0xXx,Value=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_GetAttr --handle=0xXx --Len=0xXx --Value=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d09

Get an attribute value in the attribute server.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x09", "1", "<B", "|  No Description"
	"**handle**", "", "1", "<B", "|  Attribute handle."
	"**Len**", "", "1", "<B", "|  Returned attribute length pointer"
	"**Value**", "", "1", "<B", "|  Returned attribute value pointer"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_HandleValueInd:


EMSHI_ATTS_HandleValueInd_
--------------------------

**API usage:** 
``engine.send("EMSHI_ATTS_HandleValueInd", connId=0xXx,handle=0xXx,valueLen=0xXx,pValue=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_HandleValueInd --connId=0xXx --handle=0xXx --valueLen=0xXx --pValue=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d0a

Send an attribute protocol Handle Value Indication.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x0a", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID"
	"**handle**", "", "2", "<H", "|  Attribute handle."
	"**valueLen**", "", "2", "<H", "|  Length of value data."
	"**pValue**", "", "0", "None", "|  Pointer to value data."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_HandleValueNtf:


EMSHI_ATTS_HandleValueNtf_
--------------------------

**API usage:** 
``engine.send("EMSHI_ATTS_HandleValueNtf", connId=0xXx,handle=0xXx,valueLen=0xXx,pValue=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_HandleValueNtf --connId=0xXx --handle=0xXx --valueLen=0xXx --pValue=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d0b

Send an attribute protocol Handle Value Notification.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x0b", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**handle**", "", "2", "<H", "|  Attribute handle."
	"**valueLen**", "", "2", "<H", "|  Length of value data."
	"**pValue**", "", "0", "None", "|  Pointer to value data."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_CccRegister:


EMSHI_ATTS_CccRegister_
-----------------------

**API usage:** 
``engine.send("EMSHI_ATTS_CccRegister", setLen=0xXx,pSet=0xXx,cback=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_CccRegister --setLen=0xXx --pSet=0xXx --cback=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d0c

Register the utility service for managing client characteristic configuration descriptors. This function is typically called once on system initialization.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x0c", "1", "<B", "|  No Description"
	"**setLen**", "", "1", "<B", "|  Length of settings array."
	"**pSet**", "", "1", "<B", "|  Array of CCC descriptor settings."
	"**cback**", "", "1", "<B", "|  Client callback function."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_CccGet:


EMSHI_ATTS_CccGet_
------------------

**API usage:** 
``engine.send("EMSHI_ATTS_CccGet", connId=0xXx,idx=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_CccGet --connId=0xXx --idx=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d0d

Get the value of a client characteristic configuration descriptor by its index. If not found, return zero.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x0d", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**idx**", "", "1", "<B", "|  Index of descriptor in CCC descriptor handle table."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_CccSet:


EMSHI_ATTS_CccSet_
------------------

**API usage:** 
``engine.send("EMSHI_ATTS_CccSet", connId=0xXx,idx=0xXx,value=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_CccSet --connId=0xXx --idx=0xXx --value=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d0e

Set the value of a client characteristic configuration descriptor by its index.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x0e", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**idx**", "", "1", "<B", "|  Index of descriptor in CCC descriptor handle table."
	"**value**", "", "1", "<B", "|  Value of the descriptor."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_SetCsrk:


EMSHI_ATTS_SetCsrk_
-------------------

**API usage:** 
``engine.send("EMSHI_ATTS_SetCsrk", connId=0xXx,pCsrk=0xXx,authen=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_SetCsrk --connId=0xXx --pCsrk=0xXx --authen=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d0f

Set the peer's data signing key on this connection. This function is typically called from the ATT connection callback when the connection is established. The caller is responsible for maintaining the memory that contains the key.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x0f", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**pCsrk**", "", "1", "<B", "|  Pointer to data signing key (CSRK)."
	"**authen**", "", "1", "<B", "|  Whether CSRK was received on authenticated connection."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_SetSignCounter:


EMSHI_ATTS_SetSignCounter_
--------------------------

**API usage:** 
``engine.send("EMSHI_ATTS_SetSignCounter", connId=0xXx,signCounter=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_SetSignCounter --connId=0xXx --signCounter=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d10

Set the peer's sign counter on this connection.
  |    This function is typically called from the ATT connection callback when the connection is established.
  |    ATT maintains the value of the sign counter internally and sets the value when a signed packet is successfully received.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x10", "1", "<B", "|  No Description"
	"**connId**", "", "1", "<B", "|  DM connection ID."
	"**signCounter**", "", "1", "<B", "|  Sign Counter."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_DynInit:


EMSHI_ATTS_DynInit_
-------------------

**API usage:** 
``engine.send("EMSHI_ATTS_DynInit")``

**CLI usage:**
``blengine send EMSHI_ATTS_DynInit``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d25

Initialize the Dynamic ATT Service subsystem.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x25", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_DynCreateGroup:


EMSHI_ATTS_DynCreateGroup_
--------------------------

**API usage:** 
``engine.send("EMSHI_ATTS_DynCreateGroup")``

**CLI usage:**
``blengine send EMSHI_ATTS_DynCreateGroup``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d26

Dynamically create an ATT Service at runtime.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x26", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_DynDeleteGroup:


EMSHI_ATTS_DynDeleteGroup_
--------------------------

**API usage:** 
``engine.send("EMSHI_ATTS_DynDeleteGroup", SvcHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_DynDeleteGroup --SvcHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d27

Dynamically delete an ATT Service at runtime.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x27", "1", "<B", "|  No Description"
	"**SvcHandle**", "", "1", "<B", "|  Service handle returned by AttsDynCreateGroup"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_DynAddAttr:


EMSHI_ATTS_DynAddAttr_
----------------------

**API usage:** 
``engine.send("EMSHI_ATTS_DynAddAttr", SvcHandle=0xXx,uuid=0xXx,Value=0xXx,len=0xXx,maxLen=0xXx,settings=0xXx,permissions=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_DynAddAttr --SvcHandle=0xXx --uuid=0xXx --Value=0xXx --len=0xXx --maxLen=0xXx --settings=0xXx --permissions=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d29

Dynamically add an attribute to a dynamic ATT Services at app initialization.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x29", "1", "<B", "|  No Description"
	"**SvcHandle**", "", "1", "<B", "|  Service handle returned by AttsDynCreateGroup"
	"**uuid**", "", "1", "<B", "|  Constant UUID"
	"**Value**", "", "1", "<B", "|  Initial value of attribute (copied into attribute memory)"
	"**len**", "", "2", "<H", "|  Length of pValue in bytes"
	"**maxLen**", "", "2", "<H", "|  Maximum length of the attribute in bytes"
	"**settings**", "", "1", "<B", "|  Atribute settings"
	"**permissions**", "", "1", "<B", "|  Attribute permissions"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_DynAddAttrConst:


EMSHI_ATTS_DynAddAttrConst_
---------------------------

**API usage:** 
``engine.send("EMSHI_ATTS_DynAddAttrConst", uuid=0xXx,Value=0xXx,len=0xXx,settings=0xXx,permissions=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_DynAddAttrConst --uuid=0xXx --Value=0xXx --len=0xXx --settings=0xXx --permissions=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d2a

Dynamically add an attribute with a constant value to a dynamic ATT Services.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x2a", "1", "<B", "|  No Description"
	"**uuid**", "", "2", "<H", "|  Constant UUID"
	"**Value**", "", "1", "<B", "|  Pointer to constant attribute memory"
	"**len**", "", "1", "<B", "|  Length of pValue in bytes"
	"**settings**", "", "1", "<B", "|  Atribute settings"
	"**permissions**", "", "1", "<B", "|  Attribute permissions"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_AllocateMemoryForAttributes:


EMSHI_ATTS_AllocateMemoryForAttributes_
---------------------------------------

**API usage:** 
``engine.send("EMSHI_ATTS_AllocateMemoryForAttributes", service=0xXx,characteristic=0xXx,cccd=0xXx,startingHandle=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_AllocateMemoryForAttributes --service=0xXx --characteristic=0xXx --cccd=0xXx --startingHandle=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d2b

This function allocates memory and creates the list for the attribute handles.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x2b", "1", "<B", "|  No Description"
	"**service**", "", "1", "<B", "|  Number of Services"
	"**characteristic**", "", "1", "<B", "|  Number of Characteristic"
	"**cccd**", "", "1", "<B", "|  Number of CCCD"
	"**startingHandle**", "", "1", "<B", "|  Starting attribute handle"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_AddService:


EMSHI_ATTS_AddService_
----------------------

**API usage:** 
``engine.send("EMSHI_ATTS_AddService", setting=0xXx,permissions=0xXx,uuidSize=0xXx,partialUuid=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_AddService --setting=0xXx --permissions=0xXx --uuidSize=0xXx --partialUuid=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d2c

This function builds the custom service and adds to the application.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x2c", "1", "<B", "|  No Description"
	"**setting**", "", "1", "<B", "|  attribute settings"
	"**permissions**", "", "1", "<B", "|  attribute permissions"
	"**uuidSize**", "", "1", "<B", "|  UUID Size; 2 Bytes or 16 Bytes"
	"**partialUuid**", "", "0", "None", "|  partial uuid value which is used to build the pValue of attsAttr_t element"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_AddCharacteristic:


EMSHI_ATTS_AddCharacteristic_
-----------------------------

**API usage:** 
``engine.send("EMSHI_ATTS_AddCharacteristic", setting=0xXx,permissions=0xXx,properties=0xXx,uuidSize=0xXx,partialUuid=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_AddCharacteristic --setting=0xXx --permissions=0xXx --properties=0xXx --uuidSize=0xXx --partialUuid=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d2d

Build custom UUIDs



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x2d", "1", "<B", "|  No Description"
	"**setting**", "", "1", "<B", "|  attribute settings"
	"**permissions**", "", "1", "<B", "|  attribute permissions"
	"**properties**", "", "1", "<B", "|  characteristic properties"
	"**uuidSize**", "", "1", "<B", "|  UUID Size; 2 Bytes or 16 Bytes"
	"**partialUuid**", "", "0", "None", "|  partial uuid value which is used to build the pValue of attsAttr_t element"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_AddCharValue:


EMSHI_ATTS_AddCharValue_
------------------------

**API usage:** 
``engine.send("EMSHI_ATTS_AddCharValue", setting=0xXx,permissions=0xXx,valLen=0xXx,charVal=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_AddCharValue --setting=0xXx --permissions=0xXx --valLen=0xXx --charVal=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d2e

Build custom UUIDs



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x2e", "1", "<B", "|  No Description"
	"**setting**", "", "1", "<B", "|  attribute settings"
	"**permissions**", "", "1", "<B", "|  attribute permissions"
	"**valLen**", "", "2", "<H", "|  Length of the value"
	"**charVal**", "", "0", "None", "|  Value of the characteristic"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_AddCCCD:


EMSHI_ATTS_AddCCCD_
-------------------

**API usage:** 
``engine.send("EMSHI_ATTS_AddCCCD", setting=0xXx,permissions=0xXx,attrValue=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_AddCCCD --setting=0xXx --permissions=0xXx --attrValue=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d2f

Build custom UUIDs



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x2f", "1", "<B", "|  No Description"
	"**setting**", "", "1", "<B", "|  attribute settings"
	"**permissions**", "", "1", "<B", "|  attribute permissions"
	"**attrValue**", "", "2", "<H", "|  Defaul cccd Value"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_AddCustomAttrGroup:


EMSHI_ATTS_AddCustomAttrGroup_
------------------------------

**API usage:** 
``engine.send("EMSHI_ATTS_AddCustomAttrGroup")``

**CLI usage:**
``blengine send EMSHI_ATTS_AddCustomAttrGroup``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d30

Adds the custom attribute group to the application



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x30", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_ATTS_GetAttrHandle:


EMSHI_ATTS_GetAttrHandle_
-------------------------

**API usage:** 
``engine.send("EMSHI_ATTS_GetAttrHandle", index=0xXx)``

**CLI usage:**
``blengine send EMSHI_ATTS_GetAttrHandle --index=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8d31

This function fetches the attribute handle from the attribute handle list.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x8d", "1", "<B", "|  No Description"
	"**command**", "0x31", "1", "<B", "|  No Description"
	"**index**", "", "1", "<B", "|  List index"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**Handle**", "1", "<B", "|  Attribute handle."

.. raw:: html
    
    <hr>

