
.. this file is auto generated by docs/packets.py

=======================
em.bridge.cmd 
=======================

.. contents:: Index
   :local:
   :depth: 2

.. raw:: html

    <input class="search input" type="text" placeholder="Live Search" style="width: 100%; padding: 10px;">
    <div>&nbsp</div>
    <div id="search-loader" style="display:none;">please wait...</div>
    <div id="count">12 Packets</div>


.. _pkt-BRIDGE_V6_Get_Bridge_ID:


BRIDGE_V6_Get_Bridge_ID_
------------------------

**API usage:** 
``engine.send("BRIDGE_V6_Get_Bridge_ID")``

**CLI usage:**
``blengine send BRIDGE_V6_Get_Bridge_ID``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xffc1

Get the bridge identifier.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc1ff", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**BridgeID**", "1", "<B", "|  Identifier of the bridge.
  |              0x00 = Reserved
  |              0x01 = ST Nucleo Bridge for EM9304
  |              0x02  0xFF Reserved"

.. raw:: html
    
    <hr>

.. _pkt-BRIDGE_V6_Reset_Bridge:


BRIDGE_V6_Reset_Bridge_
-----------------------

**API usage:** 
``engine.send("BRIDGE_V6_Reset_Bridge")``

**CLI usage:**
``blengine send BRIDGE_V6_Reset_Bridge``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc30

Old command to reset the EM9304 in requested mode.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x30fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Mode**", "0x00", "1", "<B", "|  Reset mode.
  |              0x00 = Normal 
  |              0x01 = Test Mode
  |              0x02 = Reset Bridge
  |              0x02 - 0xff Reserved"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-BRIDGE_V6_Reset_EM930x:


BRIDGE_V6_Reset_EM930x_
-----------------------

**API usage:** 
``engine.send("BRIDGE_V6_Reset_EM930x")``

**CLI usage:**
``blengine send BRIDGE_V6_Reset_EM930x``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xffc2

Reset the EM930x in requested mode.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc2ff", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Mode**", "0x00", "1", "<B", "|  Reset mode.
  |              0x00 = Normal 
  |              0x01 = Test Mode
  |              0x02 = Reset Bridge
  |              0x03 - 0xff Reserved"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-BRIDGE_V6_Spi_Configure:


BRIDGE_V6_Spi_Configure_
------------------------

**API usage:** 
``engine.send("BRIDGE_V6_Spi_Configure", State=0xXx)``

**CLI usage:**
``blengine send BRIDGE_V6_Spi_Configure --State=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xffc3

Configure the SPI Master on the bridge.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc3ff", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**State**", "", "1", "<B", "|  SPI Master mode. 
  |  			0x00 = SPI disabled, GPIOs as input
  |  			0x01 = SPI enabled
  |  			0x02 - 0xff Reserved"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-BRIDGE_V6_GPIO_Configure:


BRIDGE_V6_GPIO_Configure_
-------------------------

**API usage:** 
``engine.send("BRIDGE_V6_GPIO_Configure", Port=0xXx,Pin=0xXx,Mode=0xXx)``

**CLI usage:**
``blengine send BRIDGE_V6_GPIO_Configure --Port=0xXx --Pin=0xXx --Mode=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xffc4

Configure the specified GPIO pin on the bridge.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc4ff", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Port**", "", "1", "<B", "|  GPIO port bank.
  |  			0x00 = GPIOA.
  |  			0x01 = GPIOB.
  |  			0x02 = GPIOC.
  |  			0x03 = GPIOD.
  |  			0x04  0xFF Reserved"
	"**Pin**", "", "1", "<B", "|  GPIO pin number."
	"**Mode**", "", "1", "<B", "|  GPIO pin mode.
  |  			0x00 = Input high-Z.
  |  			0x01 = Input with pull-up resistor.
  |  			0x02 = Input with pull-down resistor.
  |  			0x03  0x0F Reserved.
  |  			0x10 = Push-pull output.
  |  			0x11 = Open-drain output.
  |  			0x12  0xFF Reserved"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-BRIDGE_V6_GPIO_Write:


BRIDGE_V6_GPIO_Write_
---------------------

**API usage:** 
``engine.send("BRIDGE_V6_GPIO_Write", Port=0xXx,Pin=0xXx,State=0xXx)``

**CLI usage:**
``blengine send BRIDGE_V6_GPIO_Write --Port=0xXx --Pin=0xXx --State=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xffc5

Set the value of the specified GPIO pin on the bridge.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc5ff", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Port**", "", "1", "<B", "|  GPIO port bank.
  |  			0x00 = GPIOA.
  |  			0x01 = GPIOB.
  |  			0x02 = GPIOC.
  |  			0x03 = GPIOD.
  |  			0x04  0xFF Reserved"
	"**Pin**", "", "1", "<B", "|  GPIO pin number."
	"**State**", "", "1", "<B", "|  GPIO pin state.
  |  			0x00 = GPIO pin reset.
  |  			0x01 = GPIO pin set.
  |  			0x02 0xFF Reserved"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-BRIDGE_V6_GPIO_Read:


BRIDGE_V6_GPIO_Read_
--------------------

**API usage:** 
``engine.send("BRIDGE_V6_GPIO_Read", Port=0xXx,Pin=0xXx)``

**CLI usage:**
``blengine send BRIDGE_V6_GPIO_Read --Port=0xXx --Pin=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xffc6

Read the current state of the specified GPIO pin on the bridge.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc6ff", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Port**", "", "1", "<B", "|  GPIO port bank.
  |  			0x00 = GPIOA.
  |  			0x01 = GPIOB.
  |  			0x02 = GPIOC.
  |  			0x03 = GPIOD.
  |  			0x04  0xFF Reserved"
	"**Pin**", "", "1", "<B", "|  GPIO pin number."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**State**", "1", "<B", "|  GPIO pin state.
  |  			0x00 = GPIO pin reset.
  |  			0x01 = GPIO pin set.
  |  			0x02 0xFF Reserved"

.. raw:: html
    
    <hr>

.. _pkt-BRIDGE_V6_Get_System_Time:


BRIDGE_V6_Get_System_Time_
--------------------------

**API usage:** 
``engine.send("BRIDGE_V6_Get_System_Time")``

**CLI usage:**
``blengine send BRIDGE_V6_Get_System_Time``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xffc7

Get the bridge system time.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc7ff", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Time**", "4", "<L", "|  System time"

.. raw:: html
    
    <hr>

.. _pkt-BRIDGE_V6_Get_Info:


BRIDGE_V6_Get_Info_
-------------------

**API usage:** 
``engine.send("BRIDGE_V6_Get_Info")``

**CLI usage:**
``blengine send BRIDGE_V6_Get_Info``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xffc8

Check Buffer RX and TX.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc8ff", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**RxChecks**", "2", "<H", "|  "
	"**TxChecks**", "2", "<H", "|  "
	"**RCC_CSR**", "4", "<L", "|  "

.. raw:: html
    
    <hr>

.. _pkt-BRIDGE_V6_Stepper_Motor_Configure:


BRIDGE_V6_Stepper_Motor_Configure_
----------------------------------

**API usage:** 
``engine.send("BRIDGE_V6_Stepper_Motor_Configure")``

**CLI usage:**
``blengine send BRIDGE_V6_Stepper_Motor_Configure``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xffc9

Configure the Stepper Motor



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc9ff", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-BRIDGE_V6_Stepper_Motor_Run:


BRIDGE_V6_Stepper_Motor_Run_
----------------------------

**API usage:** 
``engine.send("BRIDGE_V6_Stepper_Motor_Run")``

**CLI usage:**
``blengine send BRIDGE_V6_Stepper_Motor_Run``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xffca

Run the Stepper Motor



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xcaff", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Direction**", "0x00", "1", "<B", "|  Direction.
  |              0x00 = Forward 
  |              0x01 = Backward"
	"**Steps**", "0x5a", "1", "<B", "|  Steps."
	"**Delay**", "0x01", "1", "<B", "|  Delay."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-BRIDGE_V6_Encoder_Motor:


BRIDGE_V6_Encoder_Motor_
------------------------

**API usage:** 
``engine.send("BRIDGE_V6_Encoder_Motor")``

**CLI usage:**
``blengine send BRIDGE_V6_Encoder_Motor``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xffcb

Run the Encoder Motor



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xcbff", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Direction**", "0x00", "1", "<B", "|  Direction.
  |              0x00 = Forward 
  |              0x01 = Backward
  |              0x02 = Stop"
	"**Duty**", "0x02", "1", "<B", "|  Duty Cycles 0-100"
	"**Encoder**", "0x00", "4", "<L", "|  Encoder"
	"**Brake**", "0x00", "4", "<L", "|  Brake"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

