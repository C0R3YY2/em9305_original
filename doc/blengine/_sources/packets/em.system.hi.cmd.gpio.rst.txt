
.. this file is auto generated by docs/packets.py

===============================
em.system.hi.cmd.gpio 
===============================

.. contents:: Index
   :local:
   :depth: 2

.. raw:: html

    <input class="search input" type="text" placeholder="Live Search" style="width: 100%; padding: 10px;">
    <div>&nbsp</div>
    <div id="search-loader" style="display:none;">please wait...</div>
    <div id="count">30 Packets</div>


.. _pkt-EMSHI_GPIO_GetValues:


EMSHI_GPIO_GetValues_
---------------------

**API usage:** 
``engine.send("EMSHI_GPIO_GetValues")``

**CLI usage:**
``blengine send EMSHI_GPIO_GetValues``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8501

Read the state of all GPIO pins.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x01", "1", "<B", "|  No Description"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**Values**", "4", "<L", "|  The current state of the GPIO inputs."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_GetValue:


EMSHI_GPIO_GetValue_
--------------------

**API usage:** 
``engine.send("EMSHI_GPIO_GetValue", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_GetValue --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8502

Read the state of one GPIO pin.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x02", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**Value**", "1", "<B", "|  The current state of the GPIO input."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_SetValues:


EMSHI_GPIO_SetValues_
---------------------

**API usage:** 
``engine.send("EMSHI_GPIO_SetValues", Values=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_SetValues --Values=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8503

Write the state of all GPIO pins.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x03", "1", "<B", "|  No Description"
	"**Values**", "", "4", "<L", "|  The current state of the GPIO inputs."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_SetHigh:


EMSHI_GPIO_SetHigh_
-------------------

**API usage:** 
``engine.send("EMSHI_GPIO_SetHigh", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_SetHigh --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8504

Set the specified GPIO pin high.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x04", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_SetLow:


EMSHI_GPIO_SetLow_
------------------

**API usage:** 
``engine.send("EMSHI_GPIO_SetLow", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_SetLow --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8505

Set the specified GPIO pin low.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x05", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_DisablePullUp:


EMSHI_GPIO_DisablePullUp_
-------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_DisablePullUp", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_DisablePullUp --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8506

Disable the pull-up on the GPIO pin.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x06", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_EnablePullDown:


EMSHI_GPIO_EnablePullDown_
--------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_EnablePullDown", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_EnablePullDown --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8507

Enable the pull-down on the GPIO pin.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x07", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_EnablePullUp:


EMSHI_GPIO_EnablePullUp_
------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_EnablePullUp", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_EnablePullUp --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8508

Enable the pull-up on the GPIO pin.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x08", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_Toogle:


EMSHI_GPIO_Toogle_
------------------

**API usage:** 
``engine.send("EMSHI_GPIO_Toogle", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_Toogle --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8509

Toggle the specified GPIO pin.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x09", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_DisablePullDown:


EMSHI_GPIO_DisablePullDown_
---------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_DisablePullDown", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_DisablePullDown --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x850a

Disable the pull-down on the GPIO pin.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x0a", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_EnableOutput:


EMSHI_GPIO_EnableOutput_
------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_EnableOutput", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_EnableOutput --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x850b

Enable the output driver of the specified GPIO pin.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x0b", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_EnableInput:


EMSHI_GPIO_EnableInput_
-----------------------

**API usage:** 
``engine.send("EMSHI_GPIO_EnableInput", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_EnableInput --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x850c

Enable the input driver of the specified GPIO pin.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x0c", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_DisableOutput:


EMSHI_GPIO_DisableOutput_
-------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_DisableOutput", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_DisableOutput --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x850d

Disable the output driver of the specified GPIO pin.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x0d", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_DisableInput:


EMSHI_GPIO_DisableInput_
------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_DisableInput", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_DisableInput --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x850e

Disable the input driver of the specified GPIO pin.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x0e", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_EnableDebouncer:


EMSHI_GPIO_EnableDebouncer_
---------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_EnableDebouncer", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_EnableDebouncer --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x850f

Enable the debouncer for the GPIO input pin.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x0f", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_DisableDebouncer:


EMSHI_GPIO_DisableDebouncer_
----------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_DisableDebouncer", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_DisableDebouncer --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8510

Disable the debouncer for the GPIO input pin.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x10", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_SetDebounceTime:


EMSHI_GPIO_SetDebounceTime_
---------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_SetDebounceTime", DebounceTime=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_SetDebounceTime --DebounceTime=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8511

Set the debounce time for all GPIO.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x11", "1", "<B", "|  No Description"
	"**DebounceTime**", "", "1", "<B", "|  The Debounce Time"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_GetDebounceTime:


EMSHI_GPIO_GetDebounceTime_
---------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_GetDebounceTime")``

**CLI usage:**
``blengine send EMSHI_GPIO_GetDebounceTime``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8512

Get the debounce time for all GPIO.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x12", "1", "<B", "|  No Description"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**DebounceTime**", "1", "<B", "|  The Debounce Time"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_SetDebouncePrescaler:


EMSHI_GPIO_SetDebouncePrescaler_
--------------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_SetDebouncePrescaler", Prescaler=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_SetDebouncePrescaler --Prescaler=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8513

Set the prescaler debounce time for all GPIO.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x13", "1", "<B", "|  No Description"
	"**Prescaler**", "", "1", "<B", "|  The prescaler"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_GetDebouncePrescaler:


EMSHI_GPIO_GetDebouncePrescaler_
--------------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_GetDebouncePrescaler")``

**CLI usage:**
``blengine send EMSHI_GPIO_GetDebouncePrescaler``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8514

Get the prescaler debounce time for all GPIO.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x14", "1", "<B", "|  No Description"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**Prescaler**", "1", "<B", "|  The prescaler"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_SetMinimumDebounce:


EMSHI_GPIO_SetMinimumDebounce_
------------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_SetMinimumDebounce", DebounceTime=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_SetMinimumDebounce --DebounceTime=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8515

Set the minimum debounce time for all GPIO.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x15", "1", "<B", "|  No Description"
	"**DebounceTime**", "", "2", "<H", "|  The minimum debounce time in s."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_GetMinimumDebounce:


EMSHI_GPIO_GetMinimumDebounce_
------------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_GetMinimumDebounce")``

**CLI usage:**
``blengine send EMSHI_GPIO_GetMinimumDebounce``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8516

Get the minimum debounce time for all GPIO.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x16", "1", "<B", "|  No Description"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**DebounceTime**", "2", "<H", "|  The minimum debounce time in s."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_SetPolarityRising:


EMSHI_GPIO_SetPolarityRising_
-----------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_SetPolarityRising", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_SetPolarityRising --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8517

Set the desired GPIO pin to interrupt on the rising edge.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x17", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_SetPolarityFalling:


EMSHI_GPIO_SetPolarityFalling_
------------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_SetPolarityFalling", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_SetPolarityFalling --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8518

Set the desired GPIO pin to interrupt on the falling edge.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x18", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_SetOutputPinFunction:


EMSHI_GPIO_SetOutputPinFunction_
--------------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_SetOutputPinFunction", GPIO=0xXx,Function=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_SetOutputPinFunction --GPIO=0xXx --Function=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x8519

Set the function for the desired GPIO output pin.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x19", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"
	"**Function**", "", "1", "<B", "|  The function for the GPIO output pin to perform."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_GetOutputPinFunction:


EMSHI_GPIO_GetOutputPinFunction_
--------------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_GetOutputPinFunction", GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_GetOutputPinFunction --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x851a

Get the function for the desired GPIO output pin.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x1a", "1", "<B", "|  No Description"
	"**GPIO**", "", "4", "<L", "|  The GPIO pin"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**Function**", "1", "<B", "|  The function for the GPIO output pin."

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_SetInputFunctionPin:


EMSHI_GPIO_SetInputFunctionPin_
-------------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_SetInputFunctionPin", Function=0xXx,GPIO=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_SetInputFunctionPin --Function=0xXx --GPIO=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x851b

Set the function to utilize the desired GPIO input pin.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x1b", "1", "<B", "|  No Description"
	"**Function**", "", "1", "<B", "|  The function to get the desired GPIO input pin of."
	"**GPIO**", "", "1", "<B", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_GetInputFunctionPin:


EMSHI_GPIO_GetInputFunctionPin_
-------------------------------

**API usage:** 
``engine.send("EMSHI_GPIO_GetInputFunctionPin", Function=0xXx)``

**CLI usage:**
``blengine send EMSHI_GPIO_GetInputFunctionPin --Function=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x851c

Get the desired GPIO input pin for the function.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x1c", "1", "<B", "|  No Description"
	"**Function**", "", "1", "<B", "|  The function to get the desired GPIO input pin of."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**GPIO**", "1", "<B", "|  The GPIO pin"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_EnableJtag:


EMSHI_GPIO_EnableJtag_
----------------------

**API usage:** 
``engine.send("EMSHI_GPIO_EnableJtag")``

**CLI usage:**
``blengine send EMSHI_GPIO_EnableJtag``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x851d

Enable the JTAG on GPIO 8-11.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x1d", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

.. _pkt-EMSHI_GPIO_DisableJtag:


EMSHI_GPIO_DisableJtag_
-----------------------

**API usage:** 
``engine.send("EMSHI_GPIO_DisableJtag")``

**CLI usage:**
``blengine send EMSHI_GPIO_DisableJtag``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01) > :ref:`pkt-EMSHI_PACKET` (0xffc0)
:identifier: 0x851e

Disable the JTAG on GPIO 8-11.



.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**em_opcode**", "0x85", "1", "<B", "|  No Description"
	"**command**", "0x1e", "1", "<B", "|  No Description"

.. raw:: html
    
    <hr>

