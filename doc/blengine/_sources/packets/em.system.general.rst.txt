
.. this file is auto generated by docs/packets.py

===========================
em.system.general 
===========================

.. contents:: Index
   :local:
   :depth: 2

.. raw:: html

    <input class="search input" type="text" placeholder="Live Search" style="width: 100%; padding: 10px;">
    <div>&nbsp</div>
    <div id="search-loader" style="display:none;">please wait...</div>
    <div id="count">24 Packets</div>


.. _pkt-EMSG_Read_Product_Information:


EMSG_Read_Product_Information_
------------------------------

**API usage:** 
``engine.send("EMSG_Read_Product_Information")``

**CLI usage:**
``blengine send EMSG_Read_Product_Information``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc01





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x01fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Product_Information_Structure_Version**", "4", ">L", "|  Device information Structure Version."
	"**IC_Family_ID**", "4", "<L", "|  IC Family ID."
	"**Lot_ID**", "8", "<8s", "|  Lot ID."
	"**Wafer_Number**", "1", "<b", "|  Wafer Number"
	"**X_Position**", "1", "<b", "|  X Coordinate on the Wafer"
	"**Y_Position**", "1", "<b", "|  Y Coordinate on the Wafer"
	"**Maskset**", "1", "<1s", "|  Maskset Revision"
	"**Test_Program_Revision**", "1", "<1s", "|  Test Program Revision"
	"**Test_Program_Version**", "3", "<3s", "|  Test Program Version"
	"**Package_Type**", "1", "<b", "|  Package Type"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Read_Supported_Features:


EMSG_Read_Supported_Features_
-----------------------------

**API usage:** 
``engine.send("EMSG_Read_Supported_Features")``

**CLI usage:**
``blengine send EMSG_Read_Supported_Features``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc41





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x41fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_CPU_Reset:


EMSG_CPU_Reset_
---------------

**API usage:** 
``engine.send("EMSG_CPU_Reset")``

**CLI usage:**
``blengine send EMSG_CPU_Reset``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc42





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x42fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Set_Public_Address:


EMSG_Set_Public_Address_
------------------------

**API usage:** 
``engine.send("EMSG_Set_Public_Address", Public_Address=0xXx)``

**CLI usage:**
``blengine send EMSG_Set_Public_Address --Public_Address=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc43





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x43fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Public_Address**", "", "6", "<6s", "|  Device Public Address."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Set_UART_Baud_Rate:


EMSG_Set_UART_Baud_Rate_
------------------------

**API usage:** 
``engine.send("EMSG_Set_UART_Baud_Rate", Baud_Rate=0xXx)``

**CLI usage:**
``blengine send EMSG_Set_UART_Baud_Rate --Baud_Rate=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc44





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x44fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Baud_Rate**", "", "1", "<B", "|  Baud rate selection.
  |  0x00 =    1200 Baud
  |  0x01 =    2400 Baud
  |  0x02 =    4800 Baud
  |  0x03 =    9600 Baud
  |  0x04 =   14400 Baud
  |  0x05 =   19200 Baud
  |  0x06 =   28800 Baud
  |  0x07 =   38400 Baud
  |  0x08 =   57600 Baud
  |  0x09 =   76800 Baud
  |  0x0A =  115200 Baud
  |  0x0B =  230400 Baud
  |  0x0C =  460800 Baud
  |  0x0D =  921600 Baud
  |  0x0E = 1843200 Baud
  |  0x0F - 0xFF = Reserved"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Set_Clock_Source:


EMSG_Set_Clock_Source_
----------------------

**API usage:** 
``engine.send("EMSG_Set_Clock_Source", Clock_Source=0xXx)``

**CLI usage:**
``blengine send EMSG_Set_Clock_Source --Clock_Source=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc45





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x45fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Clock_Source**", "", "1", "<B", "|  Clock source selection.
  |  0x00 = High Frequency RC
  |  0x01 = High Frequency Crystal
  |  0x02 - 0xFF  Reserved"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Set_HF_Clock_Frequency:


EMSG_Set_HF_Clock_Frequency_
----------------------------

**API usage:** 
``engine.send("EMSG_Set_HF_Clock_Frequency", Clock_Frequency=0xXx)``

**CLI usage:**
``blengine send EMSG_Set_HF_Clock_Frequency --Clock_Frequency=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc46





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x46fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Clock_Frequency**", "", "1", "<B", "|  Clock frequency selection.
  |  0x00 = 24MHz
  |  0x01 = 48MHz
  |  0x02 - 0xFF  Reserved"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Get_Memory_Usage:


EMSG_Get_Memory_Usage_
----------------------

**API usage:** 
``engine.send("EMSG_Get_Memory_Usage")``

**CLI usage:**
``blengine send EMSG_Get_Memory_Usage``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc47





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x47fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**RAM_Pool_Size**", "4", "<L", "|  Total size of the memory pool in bytes."
	"**PRAM_Used**", "4", "<L", "|  Retention memory used in bytes."
	"**NPRAM_Used**", "4", "<L", "|  Non-retention memory used in bytes."
	"**PRAM_Reserved**", "4", "<L", "|  Size in bytes of memory reserved as retention memory."

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Set_Power_Mode:


EMSG_Set_Power_Mode_
--------------------

**API usage:** 
``engine.send("EMSG_Set_Power_Mode", Power_Mode=0xXx)``

**CLI usage:**
``blengine send EMSG_Set_Power_Mode --Power_Mode=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc48





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x48fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Power_Mode**", "", "1", "<B", "|  Power Mode selection.
  |  0x00 = Active Mode
  |  0x01 = CPU Sleep Mode
  |  0x02 = Sleep Mode
  |  0x03 = Deep Sleep Mode
  |  0x04 - 0xFF  Reserved"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Set_Sleep_Options:


EMSG_Set_Sleep_Options_
-----------------------

**API usage:** 
``engine.send("EMSG_Set_Sleep_Options", Sleep_Options=0xXx)``

**CLI usage:**
``blengine send EMSG_Set_Sleep_Options --Sleep_Options=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc49





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x49fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Sleep_Options**", "", "1", "<B", "|  Sleep Options Settings.
  |  0x00 = Disable Automatic Sleep Mode
  |  0x01 = Enable Automatic Sleep Mode
  |  0x02 - 0xFF  Reserved"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_SVLD_Measurement:


EMSG_SVLD_Measurement_
----------------------

**API usage:** 
``engine.send("EMSG_SVLD_Measurement")``

**CLI usage:**
``blengine send EMSG_SVLD_Measurement``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc4a





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x4afc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Power_Configuration**", "1", "<B", "|  Power Management Setups.
  |  0x00 = DCDC Step-Down Configuration
  |  0x01 = Direct Power (DCDC off) Configuration
  |  0x02 = DCDC Step-Up Configuration
  |  0x03 = Voltage Multiplier Configuration
  |  0x04 - 0xFF  Reserved"
	"**SVLD_Value**", "1", "<B", "|  SVLD Comparator Value."

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Execute_JLI_Function:


EMSG_Execute_JLI_Function_
--------------------------

**API usage:** 
``engine.send("EMSG_Execute_JLI_Function", JLI_Entry=0xXx,Number_Of_Arguments=0xXx,Argument_1=0xXx,Argument_2=0xXx,Argument_3=0xXx,Argument_4=0xXx)``

**CLI usage:**
``blengine send EMSG_Execute_JLI_Function --JLI_Entry=0xXx --Number_Of_Arguments=0xXx --Argument_1=0xXx --Argument_2=0xXx --Argument_3=0xXx --Argument_4=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc4b





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x4bfc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**JLI_Entry**", "", "2", "<H", "|  JLI Entry Number."
	"**Number_Of_Arguments**", "", "1", "<B", "|  Number of arguments of the function (maximum = 4)."
	"**Argument_1**", "", "4", "<L", "|  First argument of the function."
	"**Argument_2**", "", "4", "<L", "|  Second argument of the function."
	"**Argument_3**", "", "4", "<L", "|  Third argument of the function."
	"**Argument_4**", "", "4", "<L", "|  Forth argument of the function."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Return_Value**", "4", "<L", "|  Return value of the function."

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Execute_Function:


EMSG_Execute_Function_
----------------------

**API usage:** 
``engine.send("EMSG_Execute_Function", Function_Address=0xXx,Number_Of_Arguments=0xXx,Argument_1=0xXx,Argument_2=0xXx,Argument_3=0xXx,Argument_4=0xXx)``

**CLI usage:**
``blengine send EMSG_Execute_Function --Function_Address=0xXx --Number_Of_Arguments=0xXx --Argument_1=0xXx --Argument_2=0xXx --Argument_3=0xXx --Argument_4=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc4c





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x4cfc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Function_Address**", "", "4", "<L", "|  Address of the function."
	"**Number_Of_Arguments**", "", "1", "<B", "|  Number of arguments of the function (maximum = 4)."
	"**Argument_1**", "", "4", "<L", "|  First argument of the function."
	"**Argument_2**", "", "4", "<L", "|  Second argument of the function."
	"**Argument_3**", "", "4", "<L", "|  Third argument of the function."
	"**Argument_4**", "", "4", "<L", "|  Forth argument of the function."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Return_Value**", "4", "<L", "|  Return value of the function."

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Jump_To_Function:


EMSG_Jump_To_Function_
----------------------

**API usage:** 
``engine.send("EMSG_Jump_To_Function", Function_Address=0xXx)``

**CLI usage:**
``blengine send EMSG_Jump_To_Function --Function_Address=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc4d





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x4dfc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Function_Address**", "", "4", "<L", "|  Address of the function."
	"**Number_Of_Arguments**", "0x00", "1", "<B", "|  Number of arguments of the function (maximum = 4)."
	"**Argument_1**", "0x00", "4", "<L", "|  First argument of the function."
	"**Argument_2**", "0x00", "4", "<L", "|  Second argument of the function."
	"**Argument_3**", "0x00", "4", "<L", "|  Third argument of the function."
	"**Argument_4**", "0x00", "4", "<L", "|  Forth argument of the function."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Calculate_CRC32:


EMSG_Calculate_CRC32_
---------------------

**API usage:** 
``engine.send("EMSG_Calculate_CRC32", Start_Address=0xXx,End_Address=0xXx)``

**CLI usage:**
``blengine send EMSG_Calculate_CRC32 --Start_Address=0xXx --End_Address=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc4e





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x4efc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Start_Address**", "", "4", "<L", "|  Starting address (included in the calculation)."
	"**End_Address**", "", "4", "<L", "|  Ending address (excluded from the calculation)."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**CRC32**", "4", "<L", "|  Calculated 32-bit CRC value."

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Enter_Configuration_Mode:


EMSG_Enter_Configuration_Mode_
------------------------------

**API usage:** 
``engine.send("EMSG_Enter_Configuration_Mode")``

**CLI usage:**
``blengine send EMSG_Enter_Configuration_Mode``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc4f





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x4ffc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Leave_Configuration_Mode:


EMSG_Leave_Configuration_Mode_
------------------------------

**API usage:** 
``engine.send("EMSG_Leave_Configuration_Mode")``

**CLI usage:**
``blengine send EMSG_Leave_Configuration_Mode``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc50





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x50fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Call_Weak_Function:


EMSG_Call_Weak_Function_
------------------------

**API usage:** 
``engine.send("EMSG_Call_Weak_Function")``

**CLI usage:**
``blengine send EMSG_Call_Weak_Function``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc51





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x51fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Read_MAC_Address:


EMSG_Read_MAC_Address_
----------------------

**API usage:** 
``engine.send("EMSG_Read_MAC_Address")``

**CLI usage:**
``blengine send EMSG_Read_MAC_Address``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc52





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x52fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**ID**", "0x00", "1", "<B", "|  MAC address selection:
  |  0x00 = Automatic (USER if it exists, EM otherwise)
  |  0x01 = EM
  |  0x02 = USER
  |  0x03 - 0xFF - Reserved"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**MAC**", "6", "mac", "|  MAC address"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Get_EMCore_Information:


EMSG_Get_EMCore_Information_
----------------------------

**API usage:** 
``engine.send("EMSG_Get_EMCore_Information")``

**CLI usage:**
``blengine send EMSG_Get_EMCore_Information``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc53





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x53fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Variant_ID**", "2", "<H", "|  Identifier of the EM Core variant"
	"**Version**", "0", "None", "|  Version from git describe"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Set_Boot_Mode_Flags:


EMSG_Set_Boot_Mode_Flags_
-------------------------

**API usage:** 
``engine.send("EMSG_Set_Boot_Mode_Flags", Boot_Mode=0xXx)``

**CLI usage:**
``blengine send EMSG_Set_Boot_Mode_Flags --Boot_Mode=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc54





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x54fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Boot_Mode**", "", "1", "<B", "|  Boot Mode:
  |              0x00: Reserved
  |              0x01: EMCore
  |              0x02: Bootloader
  |              0x03: Application
  |              0x04-0xFF: Reserved"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Clear_Mode_Flags:


EMSG_Clear_Mode_Flags_
----------------------

**API usage:** 
``engine.send("EMSG_Clear_Mode_Flags")``

**CLI usage:**
``blengine send EMSG_Clear_Mode_Flags``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc55





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x55fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Disable_Timeout:


EMSG_Disable_Timeout_
---------------------

**API usage:** 
``engine.send("EMSG_Disable_Timeout")``

**CLI usage:**
``blengine send EMSG_Disable_Timeout``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfc56





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x56fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSG_Set_RSSI_Offset:


EMSG_Set_RSSI_Offset_
---------------------

**API usage:** 
``engine.send("EMSG_Set_RSSI_Offset")``

**CLI usage:**
``blengine send EMSG_Set_RSSI_Offset``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfcc8





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc8fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Offset**", "0x00", "1", "<B", "|  Offset.
  |  < 0x00 = negative dB
  |  = 0x00 = zero dB
  |  > 0x01 = Positve dB"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

