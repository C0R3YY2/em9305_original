
.. this file is auto generated by docs/packets.py

======================
em.system.mm 
======================

.. contents:: Index
   :local:
   :depth: 2

.. raw:: html

    <input class="search input" type="text" placeholder="Live Search" style="width: 100%; padding: 10px;">
    <div>&nbsp</div>
    <div id="search-loader" style="display:none;">please wait...</div>
    <div id="count">12 Packets</div>


.. _pkt-EMSMM_Read_At_Address:


EMSMM_Read_At_Address_
----------------------

**API usage:** 
``engine.send("EMSMM_Read_At_Address", Start_Address=0xXx,Data_Length=0xXx)``

**CLI usage:**
``blengine send EMSMM_Read_At_Address --Start_Address=0xXx --Data_Length=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfd01





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x01fd", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Start_Address**", "", "4", "<L", "|  Address to start reading."
	"**Data_Length**", "", "1", "<B", "|  Number of bytes to read."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Data**", "0", "None", "|  Data read from the specified address."

.. raw:: html
    
    <hr>

.. _pkt-EMSMM_Read_Continue:


EMSMM_Read_Continue_
--------------------

**API usage:** 
``engine.send("EMSMM_Read_Continue", Data_Length=0xXx)``

**CLI usage:**
``blengine send EMSMM_Read_Continue --Data_Length=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfd02





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x02fd", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Data_Length**", "", "1", "<B", "|  Number of bytes to read."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Data**", "0", "None", "|  Data read."

.. raw:: html
    
    <hr>

.. _pkt-EMSMM_Write_At_Address:


EMSMM_Write_At_Address_
-----------------------

**API usage:** 
``engine.send("EMSMM_Write_At_Address", Start_Address=0xXx,Data=0xXx)``

**CLI usage:**
``blengine send EMSMM_Write_At_Address --Start_Address=0xXx --Data=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfd03





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x03fd", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Start_Address**", "", "4", "<L", "|  Address to start writing."
	"**Data**", "", "0", "None", "|  Data to write to the specified address."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSMM_Write_Continue:


EMSMM_Write_Continue_
---------------------

**API usage:** 
``engine.send("EMSMM_Write_Continue", Data=0xXx)``

**CLI usage:**
``blengine send EMSMM_Write_Continue --Data=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfd04





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x04fd", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Data**", "", "0", "None", "|  Data to write."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSMM_NVM_Erase_Full:


EMSMM_NVM_Erase_Full_
---------------------

**API usage:** 
``engine.send("EMSMM_NVM_Erase_Full")``

**CLI usage:**
``blengine send EMSMM_NVM_Erase_Full``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfd05





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x05fd", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSMM_NVM_Erase_Main:


EMSMM_NVM_Erase_Main_
---------------------

**API usage:** 
``engine.send("EMSMM_NVM_Erase_Main")``

**CLI usage:**
``blengine send EMSMM_NVM_Erase_Main``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfd06





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x06fd", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSMM_NVM_Erase_Page:


EMSMM_NVM_Erase_Page_
---------------------

**API usage:** 
``engine.send("EMSMM_NVM_Erase_Page", Area=0xXx,Page=0xXx)``

**CLI usage:**
``blengine send EMSMM_NVM_Erase_Page --Area=0xXx --Page=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfd07





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x07fd", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Area**", "", "1", "<B", "|  Area selection.
  |  0x00 = Main area
  |  0x01 = Information area
  |  0x02 - 0xFF  Reserved"
	"**Page**", "", "1", "<B", "|  Page number in the given area."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSMM_NVM_Get_Lock_Page:


EMSMM_NVM_Get_Lock_Page_
------------------------

**API usage:** 
``engine.send("EMSMM_NVM_Get_Lock_Page", Area=0xXx,Page=0xXx)``

**CLI usage:**
``blengine send EMSMM_NVM_Get_Lock_Page --Area=0xXx --Page=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfd08





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x08fd", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Area**", "", "1", "<B", "|  Area selection.
  |  0x00 = Main area
  |  0x01 = Information area
  |  0x02 - 0xFF  Reserved"
	"**Page**", "", "1", "<B", "|  Page number in the given area."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Lock**", "1", "<B", "|  Lock status of the page.
  |  0x00 = Page unlocked
  |  0x01 = Page locked
  |  0x02 - 0xFF  Reserved"

.. raw:: html
    
    <hr>

.. _pkt-EMSMM_NVM_Lock_Page:


EMSMM_NVM_Lock_Page_
--------------------

**API usage:** 
``engine.send("EMSMM_NVM_Lock_Page", Area=0xXx,Page=0xXx)``

**CLI usage:**
``blengine send EMSMM_NVM_Lock_Page --Area=0xXx --Page=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfd09





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x09fd", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Area**", "", "1", "<B", "|  Area selection.
  |  0x00 = Main area
  |  0x01 = Information area
  |  0x02 - 0xFF  Reserved"
	"**Page**", "", "1", "<B", "|  Page number in the given area."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSMM_NVM_Power_Control:


EMSMM_NVM_Power_Control_
------------------------

**API usage:** 
``engine.send("EMSMM_NVM_Power_Control", Enable=0xXx)``

**CLI usage:**
``blengine send EMSMM_NVM_Power_Control --Enable=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfd0a





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x0afd", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Enable**", "", "1", "<B", "|  Enable.
  |  0x00 = Power down NVM
  |  0x01 = Power up NVM
  |  0x02 - 0xFF  Reserved"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSMM_Write_At_Address_Without_Response:


EMSMM_Write_At_Address_Without_Response_
----------------------------------------

**API usage:** 
``engine.send("EMSMM_Write_At_Address_Without_Response", Start_Address=0xXx,Data=0xXx)``

**CLI usage:**
``blengine send EMSMM_Write_At_Address_Without_Response --Start_Address=0xXx --Data=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfd0b





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x0bfd", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Start_Address**", "", "4", "<L", "|  Address to start writing."
	"**Data**", "", "0", "None", "|  Data to write to the specified address."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSMM_Write_Continue_Without_Response:


EMSMM_Write_Continue_Without_Response_
--------------------------------------

**API usage:** 
``engine.send("EMSMM_Write_Continue_Without_Response", Data=0xXx)``

**CLI usage:**
``blengine send EMSMM_Write_Continue_Without_Response --Data=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfd0c





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0x0cfd", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Data**", "", "0", "None", "|  Data to write."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

