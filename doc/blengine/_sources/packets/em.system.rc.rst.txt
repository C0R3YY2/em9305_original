
.. this file is auto generated by docs/packets.py

======================
em.system.rc 
======================

.. contents:: Index
   :local:
   :depth: 2

.. raw:: html

    <input class="search input" type="text" placeholder="Live Search" style="width: 100%; padding: 10px;">
    <div>&nbsp</div>
    <div id="search-loader" style="display:none;">please wait...</div>
    <div id="count">13 Packets</div>


.. _pkt-EMSRC_Transmitter_Test:


EMSRC_Transmitter_Test_
-----------------------

**API usage:** 
``engine.send("EMSRC_Transmitter_Test")``

**CLI usage:**
``blengine send EMSRC_Transmitter_Test``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfcc1





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc1fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**TX_Test_Mode**", "0x00", "1", "<B", "|  Transmitter test mode (PM = Packet Mode, CM = Continuously modulated signal):
  |  0x00 = PM (sending packets as in BLE DTM mode).
  |  0x01 = CM - PRBS9 sequence
  |  0x02 = CM - PRBS15 sequence
  |  0x03 = CM - '0000000000000000' sequence
  |  0x04 = CM - '1111111111111111' sequence
  |  0x05 = CM - '0101010101010101' sequence
  |  0x06 = CM - '0011001100110011' sequence
  |  0x07 = CM - '0000111100001111' sequence
  |  0x08 = CM - '0000000011111111' sequence
  |  0x09 - 0xFF - Reserved"
	"**TX_Channel**", "0x00", "1", "<B", "|  RF channel
  |  N = (F-2402) / 2
  |  Range: 0x00 to 0x27
  |  Frequency Range: 2402 MHz to 2480 MHz"
	"**Test_Data_Length**", "0x10", "1", "<B", "|  Length in bytes of payload data in each packet (valid only for packet mode)."
	"**Packet_Payload**", "0x00", "1", "<B", "|  Packet payload type for PM mode (valid only for packet mode):
  |  0x00 = PRBS9 sequence
  |  0x01 = Repeated '11110000' sequence
  |  0x02 = Repeated '10101010' sequence
  |  0x03 = PRBS15
  |  0x04 = Repeated '11111111' sequence
  |  0x05 = Repeated '00000000' sequence
  |  0x06 = Repeated '00001111' sequence
  |  0x07 = Repeated '01010101' sequence
  |  0x08 - 0xFF = Reserved"
	"**PHY**", "0x01", "1", "<B", "|  PHY mode:
  |  0x00 = Reserved
  |  0x01 = Transmitter set to use the LE 1M PHY
  |  0x02 = Transmitter set to use the LE 2M PHY
  |  0x03 = Transmitter set to use the LE Coded PHY with S=8 data coding
  |  0x04 = Transmitter set to use the LE Coded PHY with S=2 data coding
  |  0x05 - 0xFF = Reserved"
	"**Transmit_Power_Level**", "0x00", "1", "<B", "|  Transmit power level:
  |  Range: -127 to +20
  |  Units: dBm"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Transmit_Power_Level_Max**", "1", "<B", "|  Maximum transmit power level currently available.
  |  Units: dBm."
	"**Transmit_Power_Level_Actual**", "1", "<B", "|  Actual transmit power level used.
  |  Units: dBm."

.. raw:: html
    
    <hr>

.. _pkt-EMSRC_Transmitter_Test_V2:


EMSRC_Transmitter_Test_V2_
--------------------------

**API usage:** 
``engine.send("EMSRC_Transmitter_Test_V2")``

**CLI usage:**
``blengine send EMSRC_Transmitter_Test_V2``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfcca





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xcafc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**TX_Test_Mode**", "0x00", "1", "<B", "|  Transmitter test mode (PM = Packet Mode, CM = Continuously modulated signal):
  |  0x00 = PM (sending packets as in BLE DTM mode).
  |  0x01 = CM - PRBS9 sequence
  |  0x02 = CM - PRBS15 sequence
  |  0x03 = CM - '0000000000000000' sequence
  |  0x04 = CM - '1111111111111111' sequence
  |  0x05 = CM - '0101010101010101' sequence
  |  0x06 = CM - '0011001100110011' sequence
  |  0x07 = CM - '0000111100001111' sequence
  |  0x08 = CM - '0000000011111111' sequence
  |  0x09 - 0xFF - Reserved"
	"**TX_Channel**", "0x00", "1", "<B", "|  RF channel
  |  N = (F-2402) / 2
  |  Range: 0x00 to 0x27
  |  Frequency Range: 2402 MHz to 2480 MHz"
	"**Test_Data_Length**", "0x10", "1", "<B", "|  Length in bytes of payload data in each packet (valid only for packet mode)."
	"**Packet_Payload**", "0x00", "1", "<B", "|  Packet payload type for PM mode (valid only for packet mode):
  |  0x00 = PRBS9 sequence
  |  0x01 = Repeated '11110000' sequence
  |  0x02 = Repeated '10101010' sequence
  |  0x03 = PRBS15
  |  0x04 = Repeated '11111111' sequence
  |  0x05 = Repeated '00000000' sequence
  |  0x06 = Repeated '00001111' sequence
  |  0x07 = Repeated '01010101' sequence
  |  0x08 - 0xFF = Reserved"
	"**PHY**", "0x01", "1", "<B", "|  PHY mode:
  |  0x00 = Reserved
  |  0x01 = Transmitter set to use the LE 1M PHY
  |  0x02 = Transmitter set to use the LE 2M PHY
  |  0x03 = Transmitter set to use the LE Coded PHY with S=8 data coding
  |  0x04 = Transmitter set to use the LE Coded PHY with S=2 data coding
  |  0x05 - 0xFF = Reserved"
	"**Transmit_Power_Level**", "0x00", "1", "<B", "|  Transmit power level:
  |  Range: -127 to +20
  |  Units: dBm"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Transmit_Power_Level_Max**", "1", "<B", "|  Maximum transmit power level currently available.
  |  Units: dBm."
	"**Transmit_Power_Level_Actual**", "1", "<B", "|  Actual transmit power level used.
  |  Units: dBm."

.. raw:: html
    
    <hr>

.. _pkt-EMSRC_Transmitter_Test_V3:


EMSRC_Transmitter_Test_V3_
--------------------------

**API usage:** 
``engine.send("EMSRC_Transmitter_Test_V3", TX_Channel=0xXx,Test_Data_Length=0xXx,Packet_Payload=0xXx,PHY=0xXx,CTE_Length=0xXx,CTE_Type=0xXx,Switching_Pattern_Length=0xXx,Antenna_IDs=0xXx)``

**CLI usage:**
``blengine send EMSRC_Transmitter_Test_V3 --TX_Channel=0xXx --Test_Data_Length=0xXx --Packet_Payload=0xXx --PHY=0xXx --CTE_Length=0xXx --CTE_Type=0xXx --Switching_Pattern_Length=0xXx --Antenna_IDs=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfccb





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xcbfc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**TX_Test_Mode**", "0x00", "1", "<B", "|  Transmitter test mode (PM = Packet Mode, CM = Continuously modulated signal):
  |  0x00 = PM (sending packets as in BLE DTM mode).
  |  0x01 = CM - PRBS9 sequence
  |  0x02 = CM - PRBS15 sequence
  |  0x03 = CM - '0000000000000000' sequence
  |  0x04 = CM - '1111111111111111' sequence
  |  0x05 = CM - '0101010101010101' sequence
  |  0x06 = CM - '0011001100110011' sequence
  |  0x07 = CM - '0000111100001111' sequence
  |  0x08 = CM - '0000000011111111' sequence
  |  0x09 - 0xFF - Reserved"
	"**TX_Channel**", "", "1", "<B", "|  N = (F-2402) / 2
  |  Range: 0x00 to 0x27.
  |  Frequency Range: 2402 MHz to 2480 MHz"
	"**Test_Data_Length**", "", "1", "<B", "|  Length in bytes of payload data in each packet"
	"**Packet_Payload**", "", "1", "<B", "|  0x00 PRBS9 sequence '11111111100000111101...' (in transmission order) as described in [Vol 6] Part F, Section 4.1.5
  |  0x01 Repeated '11110000' (in transmission order) sequence as described in [Vol 6] Part F, Section 4.1.5
  |  0x02 Repeated '10101010' (in transmission order) sequence as described in [Vol 6] Part F, Section 4.1.5
  |  0x03 PRBS15 sequence as described in [Vol 6] Part F, Section 4.1.5
  |  0x04 Repeated '11111111' (in transmission order) sequence
  |  0x05 Repeated '00000000' (in transmission order) sequence
  |  0x06 Repeated '00001111' (in transmission order) sequence
  |  0x07 Repeated '01010101' (in transmission order) sequence
  |  All other values Reserved for future use"
	"**PHY**", "", "1", "<B", "|  0x01 Transmitter set to use the LE 1M PHY
  |  0x02 Transmitter set to use the LE 2M PHY
  |  0x03 Transmitter set to use the LE Coded PHY with S=8 data coding
  |  0x04 Transmitter set to use the LE Coded PHY with S=2 data coding
  |  All other values Reserved for future use"
	"**Transmit_Power_Level**", "0x00", "1", "<B", "|  0xXX Set transmitter to the specified or the nearest transmit power level.
  |  Range: -127 to +20
  |  Units: dBm
  |  0x7E Set transmitter to minimum transmit power level
  |  0x7F Set transmitter to maximum transmit power level"
	"**CTE_Length**", "", "1", "<B", "|  0x00 Do not transmit a Constant Tone Extension
  |  0x02 to 0x14 Length of the Constant Tone Extension in 8 s units
  |  All other values Reserved for future use"
	"**CTE_Type**", "", "1", "<B", "|  0x00 AoA Constant Tone Extension
  |  0x01 AoD Constant Tone Extension with 1 s slots
  |  0x02 AoD Constant Tone Extension with 2 s slots
  |  All other values Reserved for future use"
	"**Switching_Pattern_Length**", "", "1", "<B", "|  0x02 to 0x4B The number of Antenna IDs in the pattern
  |  All other values Reserved for future use"
	"**Antenna_IDs**", "", "0", "None", "|  List of Antenna IDs in the pattern (Size: Switching_Pattern_Length * 1 octet)"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Transmit_Power_Level_Max**", "1", "<B", "|  Maximum transmit power level currently available.
  |  Units: dBm."
	"**Transmit_Power_Level_Actual**", "1", "<B", "|  Actual transmit power level used.
  |  Units: dBm."

.. raw:: html
    
    <hr>

.. _pkt-EMSRC_Transmitter_Test_End:


EMSRC_Transmitter_Test_End_
---------------------------

**API usage:** 
``engine.send("EMSRC_Transmitter_Test_End")``

**CLI usage:**
``blengine send EMSRC_Transmitter_Test_End``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfcc2





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc2fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Number_Of_Packets**", "2", "<H", "|  Number of packets transmitted during the test."

.. raw:: html
    
    <hr>

.. _pkt-EMSRC_Set_RF_Activity:


EMSRC_Set_RF_Activity_
----------------------

**API usage:** 
``engine.send("EMSRC_Set_RF_Activity")``

**CLI usage:**
``blengine send EMSRC_Set_RF_Activity``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfcc3





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc3fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSRC_Set_RF_Power:


EMSRC_Set_RF_Power_
-------------------

**API usage:** 
``engine.send("EMSRC_Set_RF_Power")``

**CLI usage:**
``blengine send EMSRC_Set_RF_Power``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfcc4





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc4fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Transmit_Power_Level**", "0x00", "1", "<B", "|  Transmit power level:
  |  Range: -127 to +20
  |  Units: dBm"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Transmit_Power_Level_Max**", "1", "<B", "|  Maximum transmit power level currently available.
  |  Units: dBm."
	"**Transmit_Power_Level_Actual**", "1", "<B", "|  Actual transmit power level used.
  |  Units: dBm."

.. raw:: html
    
    <hr>

.. _pkt-EMSRC_Receiver_Test:


EMSRC_Receiver_Test_
--------------------

**API usage:** 
``engine.send("EMSRC_Receiver_Test")``

**CLI usage:**
``blengine send EMSRC_Receiver_Test``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfcc5





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc5fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**RX_Channel**", "0x00", "1", "<B", "|  RF channel
  |  N = (F-2402) / 2
  |  Range: 0x00 to 0x27
  |  Frequency Range: 2402 MHz to 2480 MHz"
	"**PHY**", "0x01", "1", "<B", "|  PHY mode:
  |  0x00 = Reserved
  |  0x01 = Receiver set to use the LE 1M PHY
  |  0x02 = Receiver set to use the LE 2M PHY
  |  0x03 = Receiver set to use the LE Coded PHY
  |  0x04 - 0xFF = Reserved"
	"**Syncword**", "0x29417671", "4", "<L", "|  Syncword (Access Address) used in receiver test."


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSRC_Receiver_Test_V2:


EMSRC_Receiver_Test_V2_
-----------------------

**API usage:** 
``engine.send("EMSRC_Receiver_Test_V2")``

**CLI usage:**
``blengine send EMSRC_Receiver_Test_V2``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfccc





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xccfc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**RX_Channel**", "0x00", "1", "<B", "|  RF channel
  |  N = (F-2402) / 2
  |  Range: 0x00 to 0x27
  |  Frequency Range: 2402 MHz to 2480 MHz"
	"**PHY**", "0x01", "1", "<B", "|  PHY mode:
  |  0x00 = Reserved
  |  0x01 = Receiver set to use the LE 1M PHY
  |  0x02 = Receiver set to use the LE 2M PHY
  |  0x03 = Receiver set to use the LE Coded PHY
  |  0x04 - 0xFF = Reserved"
	"**Syncword**", "0x29417671", "4", "<L", "|  Syncword (Access Address) used in receiver test."
	"**Modulation_Index**", "0x00", "1", "<B", "|  Either standard or stable modulation index:
  |                   0x00 = Assume transmitter will have a standard modulation index
  |                   0x01 = Assume transmitter will have a stable modulation index
  |                   All other values = Reserved for future use"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSRC_Receiver_Test_V3:


EMSRC_Receiver_Test_V3_
-----------------------

**API usage:** 
``engine.send("EMSRC_Receiver_Test_V3", RX_Channel=0xXx,PHY=0xXx,Modulation_Index=0xXx,Expected_CTE_Length=0xXx,Expected_CTE_Type=0xXx,Slot_Durations=0xXx,Switching_Pattern_Length=0xXx,Antenna_IDs=0xXx)``

**CLI usage:**
``blengine send EMSRC_Receiver_Test_V3 --RX_Channel=0xXx --PHY=0xXx --Modulation_Index=0xXx --Expected_CTE_Length=0xXx --Expected_CTE_Type=0xXx --Slot_Durations=0xXx --Switching_Pattern_Length=0xXx --Antenna_IDs=0xXx``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfccd





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xcdfc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**RX_Channel**", "", "1", "<B", "|  N = (F-2402) / 2
  |  Range: 0x00 to 0x27.
  |  Frequency Range: 2402 MHz to 2480 MHz"
	"**PHY**", "", "1", "<B", "|  0x01 Receiver set to use the LE 1M PHY
  |  0x02 Receiver set to use the LE 2M PHY
  |  0x03 Receiver set to use the LE Coded PHY
  |  All other values Reserved for future use"
	"**Syncword**", "0x29417671", "4", "<L", "|  Syncword (Access Address) used in receiver test."
	"**Modulation_Index**", "", "1", "<B", "|  0x00 Assume transmitter will have a standard modulation index
  |  0x01 Assume transmitter will have a stable modulation index"
	"**Expected_CTE_Length**", "", "1", "<B", "|  0x00 No Constant Tone Extension expected (default)
  |  0x02 to 0x14 Expected length of the Constant Tone Extension in 8 s units
  |  All other values Reserved for future use"
	"**Expected_CTE_Type**", "", "1", "<B", "|  0x00 Expect AoA Constant Tone Extension
  |  0x01 Expect AoD Constant Tone Extension with 1 s slots
  |  0x02 Expect AoD Constant Tone Extension with 2 s slots
  |  All other values Reserved for future use"
	"**Slot_Durations**", "", "1", "<B", "|  0x01 Switching and sampling slots are 1 s each
  |  0x02 Switching and sampling slots are 2 s each
  |  All other values Reserved for future use"
	"**Switching_Pattern_Length**", "", "1", "<B", "|  0x02 to 0x4B The number of Antenna IDs in the pattern
  |  All other values Reserved for future use"
	"**Antenna_IDs**", "", "0", "None", "|  List of Antenna IDs in the pattern (Size: Switching_Pattern_Length  1 octet)"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

.. _pkt-EMSRC_Receiver_Test_End:


EMSRC_Receiver_Test_End_
------------------------

**API usage:** 
``engine.send("EMSRC_Receiver_Test_End")``

**CLI usage:**
``blengine send EMSRC_Receiver_Test_End``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfcc6





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc6fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Number_Of_Packets**", "2", "<H", "|  Number of packets received during the test."
	"**Average_RSSI**", "2", "hirssi", "|  Average RSSI of all received packets."

.. raw:: html
    
    <hr>

.. _pkt-EMSRC_Receiver_154_Test_End:


EMSRC_Receiver_154_Test_End_
----------------------------

**API usage:** 
``engine.send("EMSRC_Receiver_154_Test_End")``

**CLI usage:**
``blengine send EMSRC_Receiver_154_Test_End``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfccf





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xcffc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Number_Of_Packets**", "2", "<H", "|  Number of packets received during the test."
	"**Average_RSSI**", "2", "hirssi", "|  Average RSSI of all received packets."
	"**LQI**", "1", "<B", "|  LQI Linq Quality Indicator."

.. raw:: html
    
    <hr>

.. _pkt-EMSRC_Energy_Scan_154:


EMSRC_Energy_Scan_154_
----------------------

**API usage:** 
``engine.send("EMSRC_Energy_Scan_154")``

**CLI usage:**
``blengine send EMSRC_Energy_Scan_154``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfcce





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xcefc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"
	"**Mode**", "0x00", "1", "<B", "|  Scan Mode"
	"**Freq**", "0x00", "1", "<B", "|  Frequency to scan"
	"**Scan_Time**", "0x00", "2", "<H", "|  Scan Time"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"
	"**Average_RSSI**", "2", "<H", "|  Average RSSI"
	"**RF RSSI**", "2", "<H", "|  RF RSSI"
	"**RF Slow RSSI**", "2", "<H", "|  RF Slow RSSI"

.. raw:: html
    
    <hr>

.. _pkt-EMSRC_Start_Adv_Pattern:


EMSRC_Start_Adv_Pattern_
------------------------

**API usage:** 
``engine.send("EMSRC_Start_Adv_Pattern")``

**CLI usage:**
``blengine send EMSRC_Start_Adv_Pattern``

:wrapped by: :ref:`pkt-HCI_CMD` (0x01)
:identifier: 0xfcc9





.. csv-table:: Parameters
  :header: "name", "value", "size", "struct", "description"
  :widths: 40,1,1,1,60

	"**opcode**", "0xc9fc", "2", "<H", "|  Command OpCode"
	"**length**", "auto", "auto", "<B", "|  Packet Length"


.. csv-table:: Expected Response
  :header: "name", "size", "struct", "description"
  :widths: 40,1,1,60

	"**status**", "1", "<B", "|  Response Status"

.. raw:: html
    
    <hr>

