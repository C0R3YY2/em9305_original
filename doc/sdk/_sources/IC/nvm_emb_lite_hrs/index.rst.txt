=========================================================================
Heart Rate Service EMB Lite Sample Application
=========================================================================


Overview
--------

This sample application uses the `EMBLite` APIs and works the same as the `nvm_emb_hrs` sample application to set up the EM9305 as a heart rate monitor that periodically displays a simulated heart rate.
The `EMBLite API` documentation can be found in the SDK.

It exposes the following services:

* Heart Rate Service
* Device Information Service
* Battery Service

Libraries
---------

This sample application also introduces the emb_lite as a configuration library. Including this library in the CMakeLists file will enable the use of the EMB Lite APIs in the application.
The emb_lite config library still depends on a base configuration library like emb_peripheral or emb_peripheral_legacy.
Example:

.. code-block:: cmake

  SET(${PROJECT_NAME}_LIBS
    ${NVM_COMMON_LIBS}
    QPC
    emb_lite
    emb_peripheral
  )

Build
-----

The build target of this example is: **nvm_emb_lite_hrs**

.. code-block:: bash

  cd <sdk>\build
  cmake --build . --target nvm_emb_lite_hrs


Program
-------

To program and run the example:

.. code-block:: bash

  cd <sdk>\tools\blengine
  python blengine_cli.py --port COMYY run emsystem_prog ..\..\build\projects\nvm_emb_lite_hrs\nvm_emb_lite_hrs.ihex --progress

With YY = the COM port number of your DVK (optional if you set it in the file ``<sdk>\tools\blengine\config.cfg``).


Test
----

To connect to the device, you need a smartphone with a BLE app installed. Typically, the LightBlue application is used for
the rest of this page.

When installed, open the application and start a BLE scan.
Find your device which name should be 'EM9305_HRS'.

The following picture shows the HRS beacon among many other devices.

.. image:: imgs/LightBlue_scan.jpg
  :scale: 100 %
  :alt: HRS - Scan
  :align: center

Click on the device name. This shows up detailed information on the device.

.. image:: imgs/LightBlue_properties.jpg
  :scale: 100 %
  :alt: HRS - Properties
  :align: center

Click on CONNECT to connect to the device.
When connected, you can read some device informations and enable the notifications of some services.

.. image:: imgs/LightBlue_connected.jpg
  :scale: 100 %
  :alt: HRS - Connected
  :align: center

Once connected, scroll down until you see the Heart Rate service.

.. image:: imgs/LightBlue_heartrate.jpg
  :scale: 100 %
  :alt: HRS - Heartrate service
  :align: center

Then click on the 'Heart Rate Measurement' menu entry. This will give access to the underneath properties.
Thus, a 'Subscribe' button is displayed.

.. image:: imgs/LightBlue_subscription.jpg
  :scale: 100 %
  :alt: HRS - Subscription to heart rate service
  :align: center

By clicking on this button, you can instruct the device to send the heart rate value on a periodic basis. The application
will then display this value each time it is updated.

.. image:: imgs/LightBlue_subscribed.jpg
  :scale: 100 %
  :alt: HRS - Receiving heart rate values
  :align: center

In this application, the sent value is a fake one. It is just a counter that is incremented every second. But it helps showing
things up and running.
