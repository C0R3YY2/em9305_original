<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="bstream_8h" kind="file" language="C++">
    <compoundname>bstream.h</compoundname>
    <includes refid="bda_8h" local="yes">util/bda.h</includes>
    <incdepgraph>
      <node id="2">
        <label>util/bda.h</label>
        <link refid="bda_8h"/>
      </node>
      <node id="1">
        <label>/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h</label>
        <link refid="bstream_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <header>Macros for converting a little endian byte buffer to integers.</header>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga991d93505c23b1bed30ebb97e68959ed" prot="public" static="no">
        <name>BYTES_TO_INT16</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>{(n) = ((int16_t)(p)[0] + ((int16_t)(p)[1] &lt;&lt; 8));}</initializer>
        <briefdescription>
<para>convert little endian byte buffer to int16_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="42" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gaa02bff331d7f1e710dcc060056f19206" prot="public" static="no">
        <name>BYTES_TO_UINT16</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>{(n) = ((uint16_t)(p)[0] + ((uint16_t)(p)[1] &lt;&lt; 8));}</initializer>
        <briefdescription>
<para>convert little endian byte buffer to uint16_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="44" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga853ae294f1f2f097f208de040a76a972" prot="public" static="no">
        <name>BYTES_TO_UINT24</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>                                        {(n) = ((uint16_t)(p)[0] + ((uint16_t)(p)[1] &lt;&lt; 8) + \
                                        ((uint16_t)(p)[2] &lt;&lt; 16));}</initializer>
        <briefdescription>
<para>convert little endian byte buffer to uint24_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="46" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gafae7693946c06dc197ec88ce0f02e0e0" prot="public" static="no">
        <name>BYTES_TO_UINT32</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>                                        {(n) = ((uint32_t)(p)[0] + ((uint32_t)(p)[1] &lt;&lt; 8) + \
                                        ((uint32_t)(p)[2] &lt;&lt; 16) + ((uint32_t)(p)[3] &lt;&lt; 24));}</initializer>
        <briefdescription>
<para>convert little endian byte buffer to uint32_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="49" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga2014c3f6c11cf49912baee4005a68093" prot="public" static="no">
        <name>BYTES_TO_UINT40</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>                                        {(n) = ((uint64_t)(p)[0] + ((uint64_t)(p)[1] &lt;&lt; 8) + \
                                        ((uint64_t)(p)[2] &lt;&lt; 16) + ((uint64_t)(p)[3] &lt;&lt; 24) + \
                                        ((uint64_t)(p)[4] &lt;&lt; 32));}</initializer>
        <briefdescription>
<para>convert little endian byte buffer to uint40_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="52" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga3c2ad72e259909349ec1be8cf3b8aa84" prot="public" static="no">
        <name>BYTES_TO_UINT64</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>                                        {(n) = ((uint64_t)(p)[0] + ((uint64_t)(p)[1] &lt;&lt; 8) + \
                                        ((uint64_t)(p)[2] &lt;&lt; 16) + ((uint64_t)(p)[3] &lt;&lt; 24) + \
                                        ((uint64_t)(p)[4] &lt;&lt; 32) + ((uint64_t)(p)[5] &lt;&lt; 40) + \
                                        ((uint64_t)(p)[6] &lt;&lt; 48) + ((uint64_t)(p)[7] &lt;&lt; 56));}</initializer>
        <briefdescription>
<para>convert little endian byte buffer to uint64_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="56" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Macros for converting a big endian byte buffer to integers.</header>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gaf43c0dbcf578a40d03b085b807dac44f" prot="public" static="no">
        <name>BYTES_BE_TO_UINT16</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>{(n) = ((uint16_t)(p)[1] + ((uint16_t)(p)[0] &lt;&lt; 8));}</initializer>
        <briefdescription>
<para>convert big endian byte buffer to uint16_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="67" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga0cdc3a3834f6f2619c86eba9f160841a" prot="public" static="no">
        <name>BYTES_BE_TO_UINT24</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>                                           {(n) = ((uint16_t)(p)[2] + ((uint16_t)(p)[1] &lt;&lt; 8) + \
                                           ((uint16_t)(p)[0] &lt;&lt; 16));}</initializer>
        <briefdescription>
<para>convert big endian byte buffer to 24-bit uint32_t (MSB 0). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="69" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga5fe83c7b8059e3dcdd954faf43e4b8ac" prot="public" static="no">
        <name>BYTES_BE_TO_UINT32</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>                                           {(n) = ((uint32_t)(p)[3] + ((uint32_t)(p)[2] &lt;&lt; 8) + \
                                           ((uint32_t)(p)[1] &lt;&lt; 16) + ((uint32_t)(p)[0] &lt;&lt; 24));}</initializer>
        <briefdescription>
<para>convert big endian byte buffer to uint32_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="72" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Macros for converting little endian integers to array of bytes</header>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gaf9152c24144cd02bee0a44a2dc203dc7" prot="public" static="no">
        <name>UINT16_TO_BYTES</name>
        <param><defname>n</defname></param>
        <initializer>((uint8_t) (n)), ((uint8_t)((n) &gt;&gt; 8))</initializer>
        <briefdescription>
<para>convert little endian uint16_t to array of bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="81" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga53004aa32363549d3906dc6cdc879049" prot="public" static="no">
        <name>UINT24_TO_BYTES</name>
        <param><defname>n</defname></param>
        <initializer>((uint8_t) (n)), ((uint8_t)((n) &gt;&gt; 8)), ((uint8_t)((n) &gt;&gt; 16))</initializer>
        <briefdescription>
<para>convert little endian uint24_t to array of bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="83" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gac690dc08c964c36df31a118caf79e12f" prot="public" static="no">
        <name>UINT32_TO_BYTES</name>
        <param><defname>n</defname></param>
        <initializer>((uint8_t) (n)), ((uint8_t)((n) &gt;&gt; 8)), ((uint8_t)((n) &gt;&gt; 16)), ((uint8_t)((n) &gt;&gt; 24))</initializer>
        <briefdescription>
<para>convert little endian uint32_t to array of bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="85" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Macros for converting big endian integers to array of bytes</header>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gafca56db8a39836dc249fb6ffa81bcbba" prot="public" static="no">
        <name>UINT16_TO_BE_BYTES</name>
        <param><defname>n</defname></param>
        <initializer>((uint8_t)((n) &gt;&gt; 8)), ((uint8_t) (n))</initializer>
        <briefdescription>
<para>convert big endian uint16_t to array of bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="93" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga0b02aba8c89c3af0be69224303c92fc9" prot="public" static="no">
        <name>UINT24_TO_BE_BYTES</name>
        <param><defname>n</defname></param>
        <initializer>((uint8_t)((n) &gt;&gt; 16)), ((uint8_t)((n) &gt;&gt; 8)), ((uint8_t) (n))</initializer>
        <briefdescription>
<para>convert 24-bit big endian uint32_t (MSB 0) to array of bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="95" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga5a71e0444abdbce73e54d56b2fbf2ed0" prot="public" static="no">
        <name>UINT32_TO_BE_BYTES</name>
        <param><defname>n</defname></param>
        <initializer>((uint8_t)((n) &gt;&gt; 24)), ((uint8_t)((n) &gt;&gt; 16)), ((uint8_t)((n) &gt;&gt; 8)), ((uint8_t) (n))</initializer>
        <briefdescription>
<para>convert big endian uint32_t to array of bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="97" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Macros for converting little endian integers to single bytes</header>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gafbcf22810085ef4763bcfafecaa8b13a" prot="public" static="no">
        <name>UINT16_TO_BYTE0</name>
        <param><defname>n</defname></param>
        <initializer>((uint8_t) (n))</initializer>
        <briefdescription>
<para>convert little endian uint16_t to byte 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="105" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga97792131d8ceff1b1e6f936ead55a6c7" prot="public" static="no">
        <name>UINT16_TO_BYTE1</name>
        <param><defname>n</defname></param>
        <initializer>((uint8_t) ((n) &gt;&gt; 8))</initializer>
        <briefdescription>
<para>convert little endian uint16_t to byte 1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="107" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga4860736477154c8d3167e846813de7ca" prot="public" static="no">
        <name>UINT32_TO_BYTE0</name>
        <param><defname>n</defname></param>
        <initializer>((uint8_t) (n))</initializer>
        <briefdescription>
<para>convert little endian uint32_t to byte 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="110" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga36f5e0de24c69fd5424ccb23e65dbca5" prot="public" static="no">
        <name>UINT32_TO_BYTE1</name>
        <param><defname>n</defname></param>
        <initializer>((uint8_t) ((n) &gt;&gt; 8))</initializer>
        <briefdescription>
<para>convert little endian uint32_t to byte 1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="112" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga7566ae8a0f7cad170eec741a26623db9" prot="public" static="no">
        <name>UINT32_TO_BYTE2</name>
        <param><defname>n</defname></param>
        <initializer>((uint8_t) ((n) &gt;&gt; 16))</initializer>
        <briefdescription>
<para>convert little endian uint32_t to byte 2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="114" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gad489fe5f488b5e22160f62a617ecd66b" prot="public" static="no">
        <name>UINT32_TO_BYTE3</name>
        <param><defname>n</defname></param>
        <initializer>((uint8_t) ((n) &gt;&gt; 24))</initializer>
        <briefdescription>
<para>convert little endian uint32_t to byte 3. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="116" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Macros for converting a little endian byte stream to integers, with increment.</header>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gac97d97f29490ef44c343671c0d0114f4" prot="public" static="no">
        <name>BSTREAM_TO_INT8</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>{(n) = (int8_t)(*(p)++);}</initializer>
        <briefdescription>
<para>convert little endian byte stream to uint8_t, incrementing one byte. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="124" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga2e18370ef9c610ad7c48e798a6d70239" prot="public" static="no">
        <name>BSTREAM_TO_UINT8</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>{(n) = (uint8_t)(*(p)++);}</initializer>
        <briefdescription>
<para>convert little endian byte stream to int8_t, incrementing one byte. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="126" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga1b95608efb33d88d3cb8a425770f4f43" prot="public" static="no">
        <name>BSTREAM_TO_INT16</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>{<ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga991d93505c23b1bed30ebb97e68959ed" kindref="member">BYTES_TO_INT16</ref>(n, p); p += 2;}</initializer>
        <briefdescription>
<para>convert little endian byte stream to int16_t, incrementing two bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="128" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga789372e640f135f249ce3848cd3fc74b" prot="public" static="no">
        <name>BSTREAM_TO_UINT16</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>{<ref refid="group___w_s_f___u_t_i_l___a_p_i_1gaa02bff331d7f1e710dcc060056f19206" kindref="member">BYTES_TO_UINT16</ref>(n, p); p += 2;}</initializer>
        <briefdescription>
<para>convert little endian byte stream to uint16_t, incrementing two bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="130" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gaf156794916ea31dc2f665fae2c0a41a2" prot="public" static="no">
        <name>BSTREAM_TO_UINT24</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>{<ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga853ae294f1f2f097f208de040a76a972" kindref="member">BYTES_TO_UINT24</ref>(n, p); p += 3;}</initializer>
        <briefdescription>
<para>convert little endian byte stream to uint24_t, incrementing three bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="132" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gaa75f54870560ec2bf0bbd347fbc8abcc" prot="public" static="no">
        <name>BSTREAM_TO_UINT32</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>{<ref refid="group___w_s_f___u_t_i_l___a_p_i_1gafae7693946c06dc197ec88ce0f02e0e0" kindref="member">BYTES_TO_UINT32</ref>(n, p); p += 4;}</initializer>
        <briefdescription>
<para>convert little endian byte stream to uint32_t, incrementing four bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="134" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gaf5e2090382def4aa415c479db80716ba" prot="public" static="no">
        <name>BSTREAM_TO_UINT40</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>{<ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga2014c3f6c11cf49912baee4005a68093" kindref="member">BYTES_TO_UINT40</ref>(n, p); p += 5;}</initializer>
        <briefdescription>
<para>convert little endian byte stream to uint40_t, incrementing five bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="136" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga8b859cae725e712566256931ace88d17" prot="public" static="no">
        <name>BSTREAM_TO_UINT64</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>{(n) = <ref refid="group___w_s_f___u_t_i_l___a_p_i_1gadcbc56dbd2a12edbe54925fa6e0fb848" kindref="member">BstreamToUint64</ref>(p); p += 8;}</initializer>
        <briefdescription>
<para>convert little endian byte stream to uint64_t, incrementing eight bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="138" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga2010496959ca3d1ad1dcfc0e08aa0c26" prot="public" static="no">
        <name>BSTREAM_TO_BDA</name>
        <param><defname>bda</defname></param>
        <param><defname>p</defname></param>
        <initializer>{<ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga738f9ef30320ac9b7f89aa6a678d3f0c" kindref="member">BdaCpy</ref>(bda, p); p += <ref refid="group___w_s_f___u_t_i_l___a_p_i_1gafe0fd26fd5c5acb67658cb62d0e5f819" kindref="member">BDA_ADDR_LEN</ref>;}</initializer>
        <briefdescription>
<para>convert little endian byte stream to six byte Bluetooth device address, incrementing six bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="140" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga7da40001d1190984a1c8318fc1b6a46f" prot="public" static="no">
        <name>BSTREAM_TO_BDA64</name>
        <param><defname>bda</defname></param>
        <param><defname>p</defname></param>
        <initializer>{(bda) = <ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga4d4bafef08a51956c3674ff5e3c67bfd" kindref="member">BstreamToBda64</ref>(p); p += <ref refid="group___w_s_f___u_t_i_l___a_p_i_1gafe0fd26fd5c5acb67658cb62d0e5f819" kindref="member">BDA_ADDR_LEN</ref>;}</initializer>
        <briefdescription>
<para>convert little endian byte stream to eight byte Bluetooth device address, incrementing eight bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="142" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Macros for converting a big endian byte stream to integers, with increment.</header>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gaa42c3f56fc6a1385daff3f2a70dff625" prot="public" static="no">
        <name>BSTREAM_BE_TO_UINT16</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>{<ref refid="group___w_s_f___u_t_i_l___a_p_i_1gaf43c0dbcf578a40d03b085b807dac44f" kindref="member">BYTES_BE_TO_UINT16</ref>(n, p); p += 2;}</initializer>
        <briefdescription>
<para>convert big endian byte stream to uint16_t, incrementing one byte. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="150" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gaf1a2590e91bf0147429a52a03854c187" prot="public" static="no">
        <name>BSTREAM_BE_TO_UINT24</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>{<ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga0cdc3a3834f6f2619c86eba9f160841a" kindref="member">BYTES_BE_TO_UINT24</ref>(n, p); p += 3;}</initializer>
        <briefdescription>
<para>convert big endian byte stream to 24-bit uint32_t (MSB 0), incrementing one byte. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="152" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Macros for converting integers to a little endian byte stream, with increment.</header>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga2993351b63a566161138520be2f34a32" prot="public" static="no">
        <name>UINT8_TO_BSTREAM</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>{*(p)++ = (uint8_t)(n);}</initializer>
        <briefdescription>
<para>convert uint8_t to little endian byte stream, incrementing one byte. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="160" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gaf77097b1f100badf5a7d496b5de16435" prot="public" static="no">
        <name>UINT16_TO_BSTREAM</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>{*(p)++ = (uint8_t)(n); *(p)++ = (uint8_t)((n) &gt;&gt; 8);}</initializer>
        <briefdescription>
<para>convert uint16_t to little endian byte stream, incrementing two bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="162" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gadbb4f6f98e9f7f26269220b2caea823a" prot="public" static="no">
        <name>UINT24_TO_BSTREAM</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>                                  {*(p)++ = (uint8_t)(n); *(p)++ = (uint8_t)((n) &gt;&gt; 8); \
                                  *(p)++ = (uint8_t)((n) &gt;&gt; 16);}</initializer>
        <briefdescription>
<para>convert uint24_t to little endian byte stream, incrementing three bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="164" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gaa58b0df3e2ad6805048a580eb8ab0286" prot="public" static="no">
        <name>UINT32_TO_BSTREAM</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>                                  {*(p)++ = (uint8_t)(n); *(p)++ = (uint8_t)((n) &gt;&gt; 8); \
                                  *(p)++ = (uint8_t)((n) &gt;&gt; 16); *(p)++ = (uint8_t)((n) &gt;&gt; 24);}</initializer>
        <briefdescription>
<para>convert uint32_t to little endian byte stream, incrementing four bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="167" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga297b7247fc327062a2afd8fb38288538" prot="public" static="no">
        <name>UINT40_TO_BSTREAM</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>                                  {*(p)++ = (uint8_t)(n); *(p)++ = (uint8_t)((n) &gt;&gt; 8); \
                                  *(p)++ = (uint8_t)((n) &gt;&gt; 16); *(p)++ = (uint8_t)((n) &gt;&gt; 24); \
                                  *(p)++ = (uint8_t)((n) &gt;&gt; 32);}</initializer>
        <briefdescription>
<para>convert uint40_t to little endian byte stream, incrementing five bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="170" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gaca24f2aa31cdde01ee8e5fe54dab33c3" prot="public" static="no">
        <name>UINT64_TO_BSTREAM</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>{<ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga88e008572bce7fefbc93b50d7183f9c6" kindref="member">Uint64ToBstream</ref>(p, n); p += sizeof(uint64_t);}</initializer>
        <briefdescription>
<para>convert uint64_t to little endian byte stream, incrementing eight bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="174" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gab763b0b236629c2cf3a338309e23b03b" prot="public" static="no">
        <name>BDA_TO_BSTREAM</name>
        <param><defname>p</defname></param>
        <param><defname>bda</defname></param>
        <initializer>{<ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga738f9ef30320ac9b7f89aa6a678d3f0c" kindref="member">BdaCpy</ref>(p, bda); p += <ref refid="group___w_s_f___u_t_i_l___a_p_i_1gafe0fd26fd5c5acb67658cb62d0e5f819" kindref="member">BDA_ADDR_LEN</ref>;}</initializer>
        <briefdescription>
<para>convert six byte Bluetooth device address to little endian byte stream, incrementing six bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="176" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga9365cda9e5d0841b3f2cf1d3413553da" prot="public" static="no">
        <name>BDA64_TO_BSTREAM</name>
        <param><defname>p</defname></param>
        <param><defname>bda</defname></param>
        <initializer>{<ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga116fe6347026b166e030630671231a1b" kindref="member">Bda64ToBstream</ref>(p, bda); p += <ref refid="group___w_s_f___u_t_i_l___a_p_i_1gafe0fd26fd5c5acb67658cb62d0e5f819" kindref="member">BDA_ADDR_LEN</ref>;}</initializer>
        <briefdescription>
<para>convert eight byte Bluetooth device address to little endian byte stream, incrementing eight bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="178" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Macros for converting integers to a big endian byte stream, with increment.</header>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga961463310b111dd21b8f4523c23d33b9" prot="public" static="no">
        <name>UINT16_TO_BE_BSTREAM</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>{*(p)++ = (uint8_t)((n) &gt;&gt; 8); *(p)++ = (uint8_t)(n);}</initializer>
        <briefdescription>
<para>convert uint16_t to big endian byte stream, incrementing one byte. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="186" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga741cb9623d5293f93b24fe6e65367472" prot="public" static="no">
        <name>UINT32_TO_BE_BSTREAM</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>                                      {*(p)++ = (uint8_t)((n) &gt;&gt; 24); *(p)++ = (uint8_t)((n) &gt;&gt; 16);\
                                      *(p)++ = (uint8_t)((n) &gt;&gt; 8); *(p)++ = (uint8_t)(n);}</initializer>
        <briefdescription>
<para>convert uint32_t to big endian byte stream, incrementing one byte. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="188" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Macros for converting integers to a little endian byte stream, without increment.</header>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga96ac898007262d15d525b1435736aa47" prot="public" static="no">
        <name>UINT16_TO_BUF</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>{(p)[0] = (uint8_t)(n); (p)[1] = (uint8_t)((n) &gt;&gt; 8);}</initializer>
        <briefdescription>
<para>convert uint16_t to little endian byte stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="197" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gaaeae0d48d351a92a373d61a34cb1cf8d" prot="public" static="no">
        <name>UINT24_TO_BUF</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>                                  {(p)[0] = (uint8_t)(n); (p)[1] = (uint8_t)((n) &gt;&gt; 8); \
                                  (p)[2] = (uint8_t)((n) &gt;&gt; 16);}</initializer>
        <briefdescription>
<para>convert uint24_t to little endian byte stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="199" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga051a16f596cd24e46b9deed028a026d3" prot="public" static="no">
        <name>UINT32_TO_BUF</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>                                  {(p)[0] = (uint8_t)(n); (p)[1] = (uint8_t)((n) &gt;&gt; 8); \
                                  (p)[2] = (uint8_t)((n) &gt;&gt; 16); (p)[3] = (uint8_t)((n) &gt;&gt; 24);}</initializer>
        <briefdescription>
<para>convert uint32_t to little endian byte stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="202" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gac24861dcc89112345ce54e7c29993338" prot="public" static="no">
        <name>UINT40_TO_BUF</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>                                  {(p)[0] = (uint8_t)(n); (p)[1] = (uint8_t)((n) &gt;&gt; 8); \
                                  (p)[2] = (uint8_t)((n) &gt;&gt; 16); (p)[3] = (uint8_t)((n) &gt;&gt; 24);\
                                  (p)[4] = (uint8_t)((n) &gt;&gt; 32);}</initializer>
        <briefdescription>
<para>convert uint40_t to little endian byte stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="205" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Macros for converting integers to a big endian byte stream, without increment.</header>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga4976c3c37223b71a4c1e410302a4e9f0" prot="public" static="no">
        <name>UINT16_TO_BE_BUF</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>{(p)[0] = (uint8_t)((n) &gt;&gt; 8); (p)[1] = (uint8_t)(n);}</initializer>
        <briefdescription>
<para>convert uint16_t to big endian byte stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="215" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga96767fcc70365e429c60ecbf356aff85" prot="public" static="no">
        <name>UINT24_TO_BE_BUF</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>                                  {(p)[0] = (uint8_t)((n) &gt;&gt; 16); (p)[1] = (uint8_t)((n) &gt;&gt; 8); \
                                  (p)[2] = (uint8_t)(n);}</initializer>
        <briefdescription>
<para>convert 24-bit uint32_t (MSB 0) to big endian byte stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="217" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga358074f40d1140f6f38d2a9338d8e394" prot="public" static="no">
        <name>UINT32_TO_BE_BUF</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>                                  {(p)[0] = (uint8_t)((n) &gt;&gt; 24); (p)[1] = (uint8_t)((n) &gt;&gt; 16); \
                                  (p)[2] = (uint8_t)((n) &gt;&gt; 8); (p)[3] = (uint8_t)(n);}</initializer>
        <briefdescription>
<para>convert uint32_t to big endian byte stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="220" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Macros for comparing a little endian byte buffer to integers.</header>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gae3a252f1a6523929224b876e4e714906" prot="public" static="no">
        <name>BYTES_UINT16_CMP</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>((p)[1] == <ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga97792131d8ceff1b1e6f936ead55a6c7" kindref="member">UINT16_TO_BYTE1</ref>(n) &amp;&amp; (p)[0] == <ref refid="group___w_s_f___u_t_i_l___a_p_i_1gafbcf22810085ef4763bcfafecaa8b13a" kindref="member">UINT16_TO_BYTE0</ref>(n))</initializer>
        <briefdescription>
<para>compare 2 byte little endian buffer with a uint16_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="229" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga3b50e4138e579323fc756b22d704a4cc" prot="public" static="no">
        <name>BYTES_UINT32_CMP</name>
        <param><defname>p</defname></param>
        <param><defname>n</defname></param>
        <initializer>                                   ((p)[3] == <ref refid="group___w_s_f___u_t_i_l___a_p_i_1gad489fe5f488b5e22160f62a617ecd66b" kindref="member">UINT32_TO_BYTE3</ref>(n) &amp;&amp; (p)[2] == <ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga7566ae8a0f7cad170eec741a26623db9" kindref="member">UINT32_TO_BYTE2</ref>(n) &amp;&amp; \
                                   (p)[1] == <ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga36f5e0de24c69fd5424ccb23e65dbca5" kindref="member">UINT32_TO_BYTE1</ref>(n) &amp;&amp; (p)[0] == <ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga4860736477154c8d3167e846813de7ca" kindref="member">UINT32_TO_BYTE0</ref>(n))</initializer>
        <briefdescription>
<para>compare 4 byte little endian buffer with a uint32_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="231" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Macros for IEEE FLOAT type:  exponent = byte 3, mantissa = bytes 2-0</header>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gad49043194fd09bae3235ad403175bb06" prot="public" static="no">
        <name>FLT_TO_UINT32</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <initializer>((m) | ((int32_t)(e) * 16777216))</initializer>
        <briefdescription>
<para>Convert float to uint32. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="240" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga1ba66ecabd51a2133259400f20e41d20" prot="public" static="no">
        <name>UINT32_TO_FLT</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <param><defname>n</defname></param>
        <initializer>{m = <ref refid="group___w_s_f___u_t_i_l___a_p_i_1gad0ca5b4e9caa64119a652fca8f9be667" kindref="member">UINT32_TO_FLT_M</ref>(n); e = <ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga92941b961dfd450efe2cda09b74c7acf" kindref="member">UINT32_TO_FLT_E</ref>(n);}</initializer>
        <briefdescription>
<para>Convert uint32_t to float. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="242" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gad0ca5b4e9caa64119a652fca8f9be667" prot="public" static="no">
        <name>UINT32_TO_FLT_M</name>
        <param><defname>n</defname></param>
        <initializer>                                   ((((n) &amp; 0x00FFFFFF) &gt;= 0x00800000) ? \
                                   ((int32_t)(((n) | 0xFF000000))) : ((int32_t)((n) &amp; 0x00FFFFFF)))</initializer>
        <briefdescription>
<para>Convert uint32_t to float mantissa component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="244" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga92941b961dfd450efe2cda09b74c7acf" prot="public" static="no">
        <name>UINT32_TO_FLT_E</name>
        <param><defname>n</defname></param>
        <initializer>((int8_t)(n &gt;&gt; 24))</initializer>
        <briefdescription>
<para>Convert uint32_t to float exponent component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="247" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Macros for IEEE SFLOAT type:  exponent = bits 15-12, mantissa = bits 11-0</header>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga2ca9a75c7e557b0505c45d78bf358a27" prot="public" static="no">
        <name>SFLT_TO_UINT16</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <initializer>((m) | (0xF000 &amp; ((int16_t)(e) * 4096)))</initializer>
        <briefdescription>
<para>Convert sfloat to uint16_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="255" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gadd81d65d57583c16c42d89e7c6e3c851" prot="public" static="no">
        <name>UINT16_TO_SFLT</name>
        <param><defname>m</defname></param>
        <param><defname>e</defname></param>
        <param><defname>n</defname></param>
        <initializer>{m = <ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga7e61907ccb7f164e01196d7bf39e0ccc" kindref="member">UINT16_TO_SFLT_M</ref>(n); e = <ref refid="group___w_s_f___u_t_i_l___a_p_i_1gae4940bd90323001ebaf6c7b98bb0b3c7" kindref="member">UINT16_TO_SFLT_E</ref>(n);}</initializer>
        <briefdescription>
<para>Convert uint16_t to sfloat. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="257" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1ga7e61907ccb7f164e01196d7bf39e0ccc" prot="public" static="no">
        <name>UINT16_TO_SFLT_M</name>
        <param><defname>n</defname></param>
        <initializer>                                   ((((n) &amp; 0x0FFF) &gt;= 0x0800) ? \
                                   ((int16_t)(((n) | 0xF000))) : ((int16_t)((n) &amp; 0x0FFF)))</initializer>
        <briefdescription>
<para>Convert uint16_T to sfloat mantissa component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="259" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_s_f___u_t_i_l___a_p_i_1gae4940bd90323001ebaf6c7b98bb0b3c7" prot="public" static="no">
        <name>UINT16_TO_SFLT_E</name>
        <param><defname>n</defname></param>
        <initializer>                                   (((n &gt;&gt; 12) &gt;= 0x0008) ? \
                                   ((int8_t)(((n &gt;&gt; 12) | 0xF0))) : ((int8_t)(n &gt;&gt; 12)))</initializer>
        <briefdescription>
<para>Convert uint16_T to sfloat exponent component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="262" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___w_s_f___u_t_i_l___a_p_i_1ga4d4bafef08a51956c3674ff5e3c67bfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t BstreamToBda64</definition>
        <argsstring>(const uint8_t *p)</argsstring>
        <name>BstreamToBda64</name>
        <param>
          <type>const uint8_t *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Convert bstream to BDA64. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Bstream pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Resulting BDA64 number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="279" column="10" declfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" declline="279" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group___w_s_f___u_t_i_l___a_p_i_1gadcbc56dbd2a12edbe54925fa6e0fb848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t BstreamToUint64</definition>
        <argsstring>(const uint8_t *p)</argsstring>
        <name>BstreamToUint64</name>
        <param>
          <type>const uint8_t *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Convert bstream to uint64_t. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Bstream pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Resulting uint64_t number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="290" column="10" declfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" declline="290" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group___w_s_f___u_t_i_l___a_p_i_1ga116fe6347026b166e030630671231a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bda64ToBstream</definition>
        <argsstring>(uint8_t *p, uint64_t bda)</argsstring>
        <name>Bda64ToBstream</name>
        <param>
          <type>uint8_t *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>bda</declname>
        </param>
        <briefdescription>
<para>Convert BDA64 to bstream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Bstream pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bda</parametername>
</parameternamelist>
<parameterdescription>
<para>uint64_t BDA. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="300" column="6" declfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" declline="300" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___w_s_f___u_t_i_l___a_p_i_1ga88e008572bce7fefbc93b50d7183f9c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Uint64ToBstream</definition>
        <argsstring>(uint8_t *p, uint64_t n)</argsstring>
        <name>Uint64ToBstream</name>
        <param>
          <type>uint8_t *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Convert uint64_t to bstream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Bstream pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>uint64_t number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" line="310" column="6" declfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h" declline="310" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Byte stream to integer conversion macros. </para>
    </briefdescription>
    <detaileddescription>
<para>Copyright (c) 2009-2018 Arm Ltd. All Rights Reserved.</para>
<para>Copyright (c) 2019-2024 Packetcraft, Inc. All rights reserved. Packetcraft, Inc. confidential and proprietary.</para>
<para>IMPORTANT. Your use of this file is governed by a Software License Agreement (&quot;Agreement&quot;) that must be accepted in order to download or otherwise receive a copy of this file. You may not use or copy this file for any purpose other than as described in the Agreement. If you do not agree to all of the terms of the Agreement do not use this file and delete all copies in your possession or control; if you do not have a copy of the Agreement, you must contact Packetcraft, Inc. prior to any use, copying or further distribution of this software. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BSTREAM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BSTREAM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bda_8h" kindref="compound">util/bda.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/**************************************************************************************************</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/>Macros</highlight></codeline>
<codeline lineno="35"><highlight class="comment">**************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BYTES_TO_INT16(n,<sp/>p)<sp/><sp/><sp/><sp/><sp/><sp/>{(n)<sp/>=<sp/>((int16_t)(p)[0]<sp/>+<sp/>((int16_t)(p)[1]<sp/>&lt;&lt;<sp/>8));}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BYTES_TO_UINT16(n,<sp/>p)<sp/><sp/><sp/><sp/><sp/>{(n)<sp/>=<sp/>((uint16_t)(p)[0]<sp/>+<sp/>((uint16_t)(p)[1]<sp/>&lt;&lt;<sp/>8));}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BYTES_TO_UINT24(n,<sp/>p)<sp/><sp/><sp/><sp/><sp/>{(n)<sp/>=<sp/>((uint16_t)(p)[0]<sp/>+<sp/>((uint16_t)(p)[1]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)(p)[2]<sp/>&lt;&lt;<sp/>16));}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BYTES_TO_UINT32(n,<sp/>p)<sp/><sp/><sp/><sp/><sp/>{(n)<sp/>=<sp/>((uint32_t)(p)[0]<sp/>+<sp/>((uint32_t)(p)[1]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)(p)[2]<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>((uint32_t)(p)[3]<sp/>&lt;&lt;<sp/>24));}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BYTES_TO_UINT40(n,<sp/>p)<sp/><sp/><sp/><sp/><sp/>{(n)<sp/>=<sp/>((uint64_t)(p)[0]<sp/>+<sp/>((uint64_t)(p)[1]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint64_t)(p)[2]<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>((uint64_t)(p)[3]<sp/>&lt;&lt;<sp/>24)<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint64_t)(p)[4]<sp/>&lt;&lt;<sp/>32));}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BYTES_TO_UINT64(n,<sp/>p)<sp/><sp/><sp/><sp/><sp/>{(n)<sp/>=<sp/>((uint64_t)(p)[0]<sp/>+<sp/>((uint64_t)(p)[1]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint64_t)(p)[2]<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>((uint64_t)(p)[3]<sp/>&lt;&lt;<sp/>24)<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint64_t)(p)[4]<sp/>&lt;&lt;<sp/>32)<sp/>+<sp/>((uint64_t)(p)[5]<sp/>&lt;&lt;<sp/>40)<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint64_t)(p)[6]<sp/>&lt;&lt;<sp/>48)<sp/>+<sp/>((uint64_t)(p)[7]<sp/>&lt;&lt;<sp/>56));}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BYTES_BE_TO_UINT16(n,<sp/>p)<sp/><sp/><sp/><sp/><sp/>{(n)<sp/>=<sp/>((uint16_t)(p)[1]<sp/>+<sp/>((uint16_t)(p)[0]<sp/>&lt;&lt;<sp/>8));}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BYTES_BE_TO_UINT24(n,<sp/>p)<sp/><sp/><sp/><sp/><sp/>{(n)<sp/>=<sp/>((uint16_t)(p)[2]<sp/>+<sp/>((uint16_t)(p)[1]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)(p)[0]<sp/>&lt;&lt;<sp/>16));}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BYTES_BE_TO_UINT32(n,<sp/>p)<sp/><sp/><sp/><sp/><sp/>{(n)<sp/>=<sp/>((uint32_t)(p)[3]<sp/>+<sp/>((uint32_t)(p)[2]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)(p)[1]<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>((uint32_t)(p)[0]<sp/>&lt;&lt;<sp/>24));}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT16_TO_BYTES(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)<sp/>(n)),<sp/>((uint8_t)((n)<sp/>&gt;&gt;<sp/>8))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT24_TO_BYTES(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)<sp/>(n)),<sp/>((uint8_t)((n)<sp/>&gt;&gt;<sp/>8)),<sp/>((uint8_t)((n)<sp/>&gt;&gt;<sp/>16))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_TO_BYTES(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)<sp/>(n)),<sp/>((uint8_t)((n)<sp/>&gt;&gt;<sp/>8)),<sp/>((uint8_t)((n)<sp/>&gt;&gt;<sp/>16)),<sp/>((uint8_t)((n)<sp/>&gt;&gt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT16_TO_BE_BYTES(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)((n)<sp/>&gt;&gt;<sp/>8)),<sp/>((uint8_t)<sp/>(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT24_TO_BE_BYTES(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)((n)<sp/>&gt;&gt;<sp/>16)),<sp/>((uint8_t)((n)<sp/>&gt;&gt;<sp/>8)),<sp/>((uint8_t)<sp/>(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_TO_BE_BYTES(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)((n)<sp/>&gt;&gt;<sp/>24)),<sp/>((uint8_t)((n)<sp/>&gt;&gt;<sp/>16)),<sp/>((uint8_t)((n)<sp/>&gt;&gt;<sp/>8)),<sp/>((uint8_t)<sp/>(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT16_TO_BYTE0(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)<sp/>(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT16_TO_BYTE1(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)<sp/>((n)<sp/>&gt;&gt;<sp/>8))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_TO_BYTE0(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)<sp/>(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_TO_BYTE1(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)<sp/>((n)<sp/>&gt;&gt;<sp/>8))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_TO_BYTE2(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)<sp/>((n)<sp/>&gt;&gt;<sp/>16))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_TO_BYTE3(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint8_t)<sp/>((n)<sp/>&gt;&gt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BSTREAM_TO_INT8(n,<sp/>p)<sp/><sp/><sp/><sp/><sp/>{(n)<sp/>=<sp/>(int8_t)(*(p)++);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BSTREAM_TO_UINT8(n,<sp/>p)<sp/><sp/><sp/><sp/>{(n)<sp/>=<sp/>(uint8_t)(*(p)++);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BSTREAM_TO_INT16(n,<sp/>p)<sp/><sp/><sp/><sp/>{BYTES_TO_INT16(n,<sp/>p);<sp/>p<sp/>+=<sp/>2;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BSTREAM_TO_UINT16(n,<sp/>p)<sp/><sp/><sp/>{BYTES_TO_UINT16(n,<sp/>p);<sp/>p<sp/>+=<sp/>2;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BSTREAM_TO_UINT24(n,<sp/>p)<sp/><sp/><sp/>{BYTES_TO_UINT24(n,<sp/>p);<sp/>p<sp/>+=<sp/>3;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BSTREAM_TO_UINT32(n,<sp/>p)<sp/><sp/><sp/>{BYTES_TO_UINT32(n,<sp/>p);<sp/>p<sp/>+=<sp/>4;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BSTREAM_TO_UINT40(n,<sp/>p)<sp/><sp/><sp/>{BYTES_TO_UINT40(n,<sp/>p);<sp/>p<sp/>+=<sp/>5;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BSTREAM_TO_UINT64(n,<sp/>p)<sp/><sp/><sp/>{(n)<sp/>=<sp/>BstreamToUint64(p);<sp/>p<sp/>+=<sp/>8;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BSTREAM_TO_BDA(bda,<sp/>p)<sp/><sp/><sp/><sp/>{BdaCpy(bda,<sp/>p);<sp/>p<sp/>+=<sp/>BDA_ADDR_LEN;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BSTREAM_TO_BDA64(bda,<sp/>p)<sp/><sp/>{(bda)<sp/>=<sp/>BstreamToBda64(p);<sp/>p<sp/>+=<sp/>BDA_ADDR_LEN;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BSTREAM_BE_TO_UINT16(n,<sp/>p)<sp/><sp/><sp/>{BYTES_BE_TO_UINT16(n,<sp/>p);<sp/>p<sp/>+=<sp/>2;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BSTREAM_BE_TO_UINT24(n,<sp/>p)<sp/><sp/><sp/>{BYTES_BE_TO_UINT24(n,<sp/>p);<sp/>p<sp/>+=<sp/>3;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT8_TO_BSTREAM(p,<sp/>n)<sp/><sp/><sp/><sp/>{*(p)++<sp/>=<sp/>(uint8_t)(n);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT16_TO_BSTREAM(p,<sp/>n)<sp/><sp/><sp/>{*(p)++<sp/>=<sp/>(uint8_t)(n);<sp/>*(p)++<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>8);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT24_TO_BSTREAM(p,<sp/>n)<sp/><sp/><sp/>{*(p)++<sp/>=<sp/>(uint8_t)(n);<sp/>*(p)++<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>8);<sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(p)++<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>16);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_TO_BSTREAM(p,<sp/>n)<sp/><sp/><sp/>{*(p)++<sp/>=<sp/>(uint8_t)(n);<sp/>*(p)++<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>8);<sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(p)++<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>16);<sp/>*(p)++<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>24);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT40_TO_BSTREAM(p,<sp/>n)<sp/><sp/><sp/>{*(p)++<sp/>=<sp/>(uint8_t)(n);<sp/>*(p)++<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>8);<sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(p)++<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>16);<sp/>*(p)++<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>24);<sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(p)++<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>32);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT64_TO_BSTREAM(p,<sp/>n)<sp/><sp/><sp/>{Uint64ToBstream(p,<sp/>n);<sp/>p<sp/>+=<sp/>sizeof(uint64_t);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BDA_TO_BSTREAM(p,<sp/>bda)<sp/><sp/><sp/><sp/>{BdaCpy(p,<sp/>bda);<sp/>p<sp/>+=<sp/>BDA_ADDR_LEN;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BDA64_TO_BSTREAM(p,<sp/>bda)<sp/><sp/>{Bda64ToBstream(p,<sp/>bda);<sp/>p<sp/>+=<sp/>BDA_ADDR_LEN;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT16_TO_BE_BSTREAM(p,<sp/>n)<sp/><sp/><sp/>{*(p)++<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>8);<sp/>*(p)++<sp/>=<sp/>(uint8_t)(n);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_TO_BE_BSTREAM(p,<sp/>n)<sp/><sp/><sp/>{*(p)++<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>24);<sp/>*(p)++<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>16);\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(p)++<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>8);<sp/>*(p)++<sp/>=<sp/>(uint8_t)(n);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT16_TO_BUF(p,<sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{(p)[0]<sp/>=<sp/>(uint8_t)(n);<sp/>(p)[1]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>8);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT24_TO_BUF(p,<sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{(p)[0]<sp/>=<sp/>(uint8_t)(n);<sp/>(p)[1]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>8);<sp/>\</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)[2]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>16);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_TO_BUF(p,<sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{(p)[0]<sp/>=<sp/>(uint8_t)(n);<sp/>(p)[1]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>8);<sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)[2]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>16);<sp/>(p)[3]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>24);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT40_TO_BUF(p,<sp/>n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{(p)[0]<sp/>=<sp/>(uint8_t)(n);<sp/>(p)[1]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>8);<sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)[2]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>16);<sp/>(p)[3]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>24);\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)[4]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>32);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT16_TO_BE_BUF(p,<sp/>n)<sp/><sp/><sp/><sp/>{(p)[0]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>8);<sp/>(p)[1]<sp/>=<sp/>(uint8_t)(n);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT24_TO_BE_BUF(p,<sp/>n)<sp/><sp/><sp/><sp/>{(p)[0]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>16);<sp/>(p)[1]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>8);<sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)[2]<sp/>=<sp/>(uint8_t)(n);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_TO_BE_BUF(p,<sp/>n)<sp/><sp/><sp/><sp/>{(p)[0]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>24);<sp/>(p)[1]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>16);<sp/>\</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)[2]<sp/>=<sp/>(uint8_t)((n)<sp/>&gt;&gt;<sp/>8);<sp/>(p)[3]<sp/>=<sp/>(uint8_t)(n);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BYTES_UINT16_CMP(p,<sp/>n)<sp/><sp/><sp/><sp/>((p)[1]<sp/>==<sp/>UINT16_TO_BYTE1(n)<sp/>&amp;&amp;<sp/>(p)[0]<sp/>==<sp/>UINT16_TO_BYTE0(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BYTES_UINT32_CMP(p,<sp/>n)<sp/><sp/><sp/><sp/>((p)[3]<sp/>==<sp/>UINT32_TO_BYTE3(n)<sp/>&amp;&amp;<sp/>(p)[2]<sp/>==<sp/>UINT32_TO_BYTE2(n)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)[1]<sp/>==<sp/>UINT32_TO_BYTE1(n)<sp/>&amp;&amp;<sp/>(p)[0]<sp/>==<sp/>UINT32_TO_BYTE0(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLT_TO_UINT32(m,<sp/>e)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((m)<sp/>|<sp/>((int32_t)(e)<sp/>*<sp/>16777216))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_TO_FLT(m,<sp/>e,<sp/>n)<sp/><sp/><sp/><sp/>{m<sp/>=<sp/>UINT32_TO_FLT_M(n);<sp/>e<sp/>=<sp/>UINT32_TO_FLT_E(n);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_TO_FLT_M(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((n)<sp/>&amp;<sp/>0x00FFFFFF)<sp/>&gt;=<sp/>0x00800000)<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int32_t)(((n)<sp/>|<sp/>0xFF000000)))<sp/>:<sp/>((int32_t)((n)<sp/>&amp;<sp/>0x00FFFFFF)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT32_TO_FLT_E(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int8_t)(n<sp/>&gt;&gt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SFLT_TO_UINT16(m,<sp/>e)<sp/><sp/><sp/><sp/><sp/><sp/>((m)<sp/>|<sp/>(0xF000<sp/>&amp;<sp/>((int16_t)(e)<sp/>*<sp/>4096)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT16_TO_SFLT(m,<sp/>e,<sp/>n)<sp/><sp/><sp/>{m<sp/>=<sp/>UINT16_TO_SFLT_M(n);<sp/>e<sp/>=<sp/>UINT16_TO_SFLT_E(n);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT16_TO_SFLT_M(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((n)<sp/>&amp;<sp/>0x0FFF)<sp/>&gt;=<sp/>0x0800)<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int16_t)(((n)<sp/>|<sp/>0xF000)))<sp/>:<sp/>((int16_t)((n)<sp/>&amp;<sp/>0x0FFF)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT16_TO_SFLT_E(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((n<sp/>&gt;&gt;<sp/>12)<sp/>&gt;=<sp/>0x0008)<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int8_t)(((n<sp/>&gt;&gt;<sp/>12)<sp/>|<sp/>0xF0)))<sp/>:<sp/>((int8_t)(n<sp/>&gt;&gt;<sp/>12)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">/**************************************************************************************************</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/>Function<sp/>Declarations</highlight></codeline>
<codeline lineno="268"><highlight class="comment">**************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal">uint64_t<sp/><ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga4d4bafef08a51956c3674ff5e3c67bfd" kindref="member">BstreamToBda64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">uint64_t<sp/><ref refid="group___w_s_f___u_t_i_l___a_p_i_1gadcbc56dbd2a12edbe54925fa6e0fb848" kindref="member">BstreamToUint64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga116fe6347026b166e030630671231a1b" kindref="member">Bda64ToBstream</ref>(uint8_t<sp/>*p,<sp/>uint64_t<sp/>bda);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_s_f___u_t_i_l___a_p_i_1ga88e008572bce7fefbc93b50d7183f9c6" kindref="member">Uint64ToBstream</ref>(uint8_t<sp/>*p,<sp/>uint64_t<sp/>n);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>WSF_UTIL_API<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal">};</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BSTREAM_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/wsf/include/util/bstream.h"/>
  </compounddef>
</doxygen>
