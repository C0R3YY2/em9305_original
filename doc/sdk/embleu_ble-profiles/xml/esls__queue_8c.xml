<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="esls__queue_8c" kind="file" language="C++">
    <compoundname>esls_queue.c</compoundname>
    <includes refid="esls__main_8h" local="yes">esls_main.h</includes>
    <includes refid="esls__queue_8h" local="yes">esls_queue.h</includes>
    <includes local="yes">wsf_trace.h</includes>
    <includes local="yes">wsf_types.h</includes>
    <includes local="yes">wsf_buf.h</includes>
    <includes local="yes">wsf_assert.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c</label>
        <link refid="esls__queue_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>wsf_assert.h</label>
      </node>
      <node id="4">
        <label>wsf_buf.h</label>
      </node>
      <node id="2">
        <label>wsf_trace.h</label>
      </node>
      <node id="3">
        <label>wsf_types.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="esls__queue_8c_1a613fc4ff6722d07b00a8716e78b52736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eslsInitQueue</definition>
        <argsstring>(eslsOpQueue_t *queue)</argsstring>
        <name>eslsInitQueue</name>
        <param>
          <type><ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref> *</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
<para>Initialize the operation queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the operation queue. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" line="21" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="esls__queue_8c_1afbd1e283189552cf21ae9cb516f5912e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eslsEnqueue</definition>
        <argsstring>(eslsOpQueue_t *queue, eslsOp_t op)</argsstring>
        <name>eslsEnqueue</name>
        <param>
          <type><ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref> *</type>
          <declname>queue</declname>
        </param>
        <param>
          <type><ref refid="structesls_op__t" kindref="compound">eslsOp_t</ref></type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Enqueue an operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the operation queue. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation to enqueue.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" line="36" column="5" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" bodystart="36" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="esls__queue_8c_1a9ca12fb815fc872c74b08d631191c4d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eslsDequeue</definition>
        <argsstring>(eslsOpQueue_t *queue, eslsOp_t *op)</argsstring>
        <name>eslsDequeue</name>
        <param>
          <type><ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref> *</type>
          <declname>queue</declname>
        </param>
        <param>
          <type><ref refid="structesls_op__t" kindref="compound">eslsOp_t</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Dequeue an operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the operation queue. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the operation to dequeue.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" line="68" column="5" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" bodystart="68" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="esls__queue_8c_1acc2a249e2ce6e5f047ab9f0d2d5b07ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eslsInitTimedQueue</definition>
        <argsstring>(eslsOpQueue_t *queue)</argsstring>
        <name>eslsInitTimedQueue</name>
        <param>
          <type><ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref> *</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
<para>Initialize the timed operation queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the timed operation queue. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" line="92" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="esls__queue_8c_1a6abd6d1ce393b5a2dab17d4e35a3c763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eslsEnqueueTimed</definition>
        <argsstring>(eslsOpQueue_t *queue, eslsOp_t op)</argsstring>
        <name>eslsEnqueueTimed</name>
        <param>
          <type><ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref> *</type>
          <declname>queue</declname>
        </param>
        <param>
          <type><ref refid="structesls_op__t" kindref="compound">eslsOp_t</ref></type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Enqueue a timed operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the timed operation queue. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>Timed operation to enqueue.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" line="107" column="5" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" bodystart="107" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="esls__queue_8c_1a4ae0e290bff2f4a29fd2f26acbc23899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eslsDequeueTimed</definition>
        <argsstring>(eslsOpQueue_t *queue, eslsOp_t *op)</argsstring>
        <name>eslsDequeueTimed</name>
        <param>
          <type><ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref> *</type>
          <declname>queue</declname>
        </param>
        <param>
          <type><ref refid="structesls_op__t" kindref="compound">eslsOp_t</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Dequeue a timed operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the timed operation queue. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the timed operation to dequeue.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" line="138" column="5" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" bodystart="138" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="esls__queue_8c_1ab64d6e328327c3e8e1ec2150dec7774f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eslsResetQueue</definition>
        <argsstring>(eslsOpQueue_t *queue)</argsstring>
        <name>eslsResetQueue</name>
        <param>
          <type><ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref> *</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
<para>Iterate through the queue and free all nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the queue. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" line="162" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" bodystart="162" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="esls__queue_8c_1ae7e52d5590000ee629e4187ad7575007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eslsPrintQueue</definition>
        <argsstring>(eslsOpQueue_t *queue)</argsstring>
        <name>eslsPrintQueue</name>
        <param>
          <type><ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref> *</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
<para>Print the contents of a queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the queue. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" line="182" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c" bodystart="182" bodyend="197"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;esls_main.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esls_queue.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wsf_trace.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wsf_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wsf_buf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wsf_assert.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/**************************************************************************************************</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>Function<sp/>Definitions</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eslsInitQueue(<ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref><sp/>*queue)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;front<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;rear<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eslsEnqueue(<ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref><sp/>*queue,<sp/><ref refid="structesls_op__t" kindref="compound">eslsOp_t</ref><sp/>op)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structesls_op_queue_node" kindref="compound">eslsOpQueueNode_t</ref><sp/>*newNode<sp/>=<sp/>(<ref refid="structesls_op_queue_node" kindref="compound">eslsOpQueueNode_t</ref><sp/>*)WsfBufAlloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structesls_op_queue_node" kindref="compound">eslsOpQueueNode_t</ref>));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newNode)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>memory<sp/>allocation<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_ERR0(</highlight><highlight class="stringliteral">&quot;Memory<sp/>allocation<sp/>failed<sp/>in<sp/>enqueue\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>error<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>newNode-&gt;op<sp/>=<sp/>op;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>newNode-&gt;next<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue-&gt;rear<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>queue<sp/>is<sp/>empty,<sp/>both<sp/>front<sp/>and<sp/>rear<sp/>will<sp/>point<sp/>to<sp/>the<sp/>new<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;front<sp/>=<sp/>newNode;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;rear<sp/>=<sp/>newNode;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>new<sp/>node<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>queue<sp/>and<sp/>update<sp/>the<sp/>rear<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;rear-&gt;next<sp/>=<sp/>newNode;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;rear<sp/>=<sp/>newNode;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>success<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eslsDequeue(<ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref><sp/>*queue,<sp/><ref refid="structesls_op__t" kindref="compound">eslsOp_t</ref><sp/>*op)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue-&gt;front<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>empty<sp/>queue<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_ERR0(</highlight><highlight class="stringliteral">&quot;Queue<sp/>is<sp/>empty,<sp/>cannot<sp/>dequeue\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>error<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structesls_op_queue_node" kindref="compound">eslsOpQueueNode_t</ref><sp/>*temp<sp/>=<sp/>queue-&gt;front;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>*op<sp/>=<sp/>temp-&gt;op;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;front<sp/>=<sp/>queue-&gt;front-&gt;next;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue-&gt;front<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>queue<sp/>is<sp/>now<sp/>empty,<sp/>set<sp/>rear<sp/>to<sp/>NULL<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;rear<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>WsfBufFree(temp);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>success<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eslsInitTimedQueue(<ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref><sp/>*queue)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;front<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;rear<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eslsEnqueueTimed(<ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref><sp/>*queue,<sp/><ref refid="structesls_op__t" kindref="compound">eslsOp_t</ref><sp/>op)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structesls_op_queue_node" kindref="compound">eslsOpQueueNode_t</ref><sp/>*newNode<sp/>=<sp/>(<ref refid="structesls_op_queue_node" kindref="compound">eslsOpQueueNode_t</ref><sp/>*)WsfBufAlloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structesls_op_queue_node" kindref="compound">eslsOpQueueNode_t</ref>));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newNode)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>memory<sp/>allocation<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_ERR0(</highlight><highlight class="stringliteral">&quot;Memory<sp/>allocation<sp/>failed<sp/>in<sp/>eslsEnqueueTimed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>error<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>newNode-&gt;op<sp/>=<sp/>op;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>newNode-&gt;next<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue-&gt;rear<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>queue<sp/>is<sp/>empty,<sp/>both<sp/>front<sp/>and<sp/>rear<sp/>will<sp/>point<sp/>to<sp/>the<sp/>new<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;front<sp/>=<sp/>newNode;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;rear<sp/>=<sp/>newNode;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>new<sp/>node<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>queue<sp/>and<sp/>update<sp/>the<sp/>rear<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;rear-&gt;next<sp/>=<sp/>newNode;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;rear<sp/>=<sp/>newNode;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>success<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eslsDequeueTimed(<ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref><sp/>*queue,<sp/><ref refid="structesls_op__t" kindref="compound">eslsOp_t</ref><sp/>*op)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue-&gt;front<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>empty<sp/>queue<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_ERR0(</highlight><highlight class="stringliteral">&quot;Timed<sp/>queue<sp/>is<sp/>empty,<sp/>cannot<sp/>eslsDequeueTimed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>error<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structesls_op_queue_node" kindref="compound">eslsOpQueueNode_t</ref><sp/>*temp<sp/>=<sp/>queue-&gt;front;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>*op<sp/>=<sp/>temp-&gt;op;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;front<sp/>=<sp/>queue-&gt;front-&gt;next;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue-&gt;front<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>queue<sp/>is<sp/>now<sp/>empty,<sp/>set<sp/>rear<sp/>to<sp/>NULL<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;rear<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>WsfBufFree(temp);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>success<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eslsResetQueue(<ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref><sp/>*queue)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>WSF_ASSERT(queue<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="structesls_op_queue_node" kindref="compound">eslsOpQueueNode_t</ref><sp/>*current<sp/>=<sp/>queue-&gt;front;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structesls_op_queue_node" kindref="compound">eslsOpQueueNode_t</ref><sp/>*temp<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>current-&gt;next;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WsfBufFree(temp);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>queue-&gt;front<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>queue-&gt;rear<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eslsPrintQueue(<ref refid="structesls_op_queue__t" kindref="compound">eslsOpQueue_t</ref><sp/>*queue)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structesls_op_queue_node" kindref="compound">eslsOpQueueNode_t</ref><sp/>*current<sp/>=<sp/>queue-&gt;front;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structesls_op__t" kindref="compound">eslsOp_t</ref><sp/>op<sp/>=<sp/>current-&gt;op;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_ERR1(</highlight><highlight class="stringliteral">&quot;Operation<sp/>Code:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>op.<ref refid="structesls_op__t_1a092b7f397f9aa31c973b6e4b5d7d2065" kindref="member">opCode</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op.<ref refid="structesls_op__t_1a092b7f397f9aa31c973b6e4b5d7d2065" kindref="member">opCode</ref><sp/>==<sp/><ref refid="group___e_l_e_c_t_r_o_n_i_c___s_h_e_l_f___l_a_b_e_l___s_e_r_v_e_r_1gga9a57822b583376f4707957725f928c4ea3597a43e676ebba833032ab109b5ae8c" kindref="member">ESL_OPCODE_DISPLAY_TIMED_IMAGE</ref>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_INFO1(</highlight><highlight class="stringliteral">&quot;Execution<sp/>Time:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>op.<ref refid="structesls_op__t_1af4796a546f22b1a3e8ddc2a193f41bcc" kindref="member">opParams</ref>.<ref refid="unionop_params__t_1a1c7bdf74ca78097e7f9a455771e89196" kindref="member">displayTimedImage</ref>.<ref refid="structesls_display_timed_image_op_params__t_1a73b91187897c38d69129f97cdfee3af0" kindref="member">absTime</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op.<ref refid="structesls_op__t_1a092b7f397f9aa31c973b6e4b5d7d2065" kindref="member">opCode</ref><sp/>==<sp/><ref refid="group___e_l_e_c_t_r_o_n_i_c___s_h_e_l_f___l_a_b_e_l___s_e_r_v_e_r_1gga9a57822b583376f4707957725f928c4ea3e8f5006f03d75d8bb1d9f0b9866ef5d" kindref="member">ESL_OPCODE_LED_TIMED_CONTROL</ref>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_INFO1(</highlight><highlight class="stringliteral">&quot;Execution<sp/>Time:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>op.<ref refid="structesls_op__t_1af4796a546f22b1a3e8ddc2a193f41bcc" kindref="member">opParams</ref>.<ref refid="unionop_params__t_1a41555d497f5d95988a30526a8c12651f" kindref="member">ledTimedControl</ref>.<ref refid="structesls_led_timed_control_op_params__t_1adf063d39f5bb7a9a7427a6599f77153a" kindref="member">absTime</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>current-&gt;next;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/esls/esls_queue.c"/>
  </compounddef>
</doxygen>
