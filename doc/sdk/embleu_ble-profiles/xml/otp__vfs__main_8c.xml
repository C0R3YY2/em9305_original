<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="otp__vfs__main_8c" kind="file" language="C++">
    <compoundname>otp_vfs_main.c</compoundname>
    <includes refid="otp__vfs__main_8h" local="yes">otp/otp_vfs_main.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="yes">att_api.h</includes>
    <includes local="yes">att_defs.h</includes>
    <includes local="yes">l2c_api.h</includes>
    <includes refid="otp__transport_8h" local="yes">otp/otp_transport.h</includes>
    <includes refid="otp__vfs__api_8h" local="yes">otp/otp_vfs_api.h</includes>
    <includes refid="ots__ui_8h" local="yes">ots/ots_ui.h</includes>
    <includes refid="svc__otps_8h" local="yes">svc_otps.h</includes>
    <includes local="yes">util/bstream.h</includes>
    <includes local="yes">wsf_buf.h</includes>
    <includes local="yes">wsf_efs.h</includes>
    <includes local="yes">wsf_trace.h</includes>
    <includes local="yes">wsf_types.h</includes>
    <incdepgraph>
      <node id="12">
        <label>otp/otp_vfs_api.h</label>
        <link refid="otp__vfs__api_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c</label>
        <link refid="otp__vfs__main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>otp/otp_vfs_main.h</label>
        <link refid="otp__vfs__main_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ots/ots_ui.h</label>
        <link refid="ots__ui_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>svc_otps.h</label>
        <link refid="svc__otps_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>att_api.h</label>
      </node>
      <node id="7">
        <label>att_defs.h</label>
      </node>
      <node id="14">
        <label>dm_api.h</label>
      </node>
      <node id="11">
        <label>l2c_api.h</label>
      </node>
      <node id="6">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="9">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="17">
        <label>util/bstream.h</label>
      </node>
      <node id="18">
        <label>wsf_buf.h</label>
      </node>
      <node id="19">
        <label>wsf_efs.h</label>
      </node>
      <node id="16">
        <label>wsf_os.h</label>
      </node>
      <node id="20">
        <label>wsf_trace.h</label>
      </node>
      <node id="8">
        <label>wsf_types.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="otp__vfs__main_8c_1a4f397ab134a06fcb270b011365947eb7" prot="public" static="yes" mutable="no">
        <type><ref refid="otp__vfs__main_8h_1a8c21208fc3375eeb5564e3f469911f6d" kindref="member">OtpVFSContext</ref></type>
        <definition>OtpVFSContext OtpVFSCtx</definition>
        <argsstring></argsstring>
        <name>OtpVFSCtx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="42" column="22" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="otp__vfs__main_8c_1ac135b23fb42aa76d465331b34be94f0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isUUIDBlacklisted</definition>
        <argsstring>(uint8_t cid, uint8_t *uuid, bool is128bitUUID)</argsstring>
        <name>isUUIDBlacklisted</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>uuid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is128bitUUID</declname>
        </param>
        <briefdescription>
<para>Check if a UUID is blacklisted for a specific connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Object Transfer Channel ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the UUID to check. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is128bitUUID</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating if the UUID is 128 bits long.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the UUID is blacklisted, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="55" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="55" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a64e11e60118cb99724f8af571f3a46a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool addToBlacklist</definition>
        <argsstring>(uint8_t cid, uint8_t *uuid, bool is128bitUUID)</argsstring>
        <name>addToBlacklist</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>uuid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is128bitUUID</declname>
        </param>
        <briefdescription>
<para>Add a new UUID to the blacklist for a specific connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Object Transfer Channel ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the UUID to add to the blacklist. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is128bitUUID</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating if the UUID is 128 bits long.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the UUID is successfully added to the blacklist, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="89" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="89" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a392af0d44203026d0ff3514a847872ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool removeFromBlacklist</definition>
        <argsstring>(uint8_t cid, uint8_t *uuid, bool is128bitUUID)</argsstring>
        <name>removeFromBlacklist</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>uuid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is128bitUUID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="121" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="121" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a8d6f0a899eaa9b56bcf15e70c4b039c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t OtpsVFSUtilityGetObjectRecordLength</definition>
        <argsstring>(OtpVFSMetaData *pMetaData)</argsstring>
        <name>OtpsVFSUtilityGetObjectRecordLength</name>
        <param>
          <type><ref refid="otp__vfs__main_8h_1a695a871634597c4ad46620041fe738d5" kindref="member">OtpVFSMetaData</ref> *</type>
          <declname>pMetaData</declname>
        </param>
        <briefdescription>
<para>Calculate the length of an Object Record based on its metadata. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pMetaData</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the metadata of the Object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated length of the Object Record. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="164" column="17" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="164" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a0484fea40252d6afeed1f123b648f2d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="otp__vfs__main_8h_1afe3f00a2ba2f13d76c3b982e557ec901" kindref="member">OtpVFSList</ref> *</type>
        <definition>static OtpVFSList * OtpVFSFindObjectByName</definition>
        <argsstring>(uint8_t cid, uint8_t *name, uint8_t len)</argsstring>
        <name>OtpVFSFindObjectByName</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Find an object in the object list based on its name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Object Transfer Channel ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the name to search for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>A pointer to the object if found.</para>
</listitem><listitem><para>NULL if no matching object is found. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="186" column="19" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="186" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1aa338a0d1d02401da03bb728b066d6496" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t OtpVFSGetCheckSum</definition>
        <argsstring>(uint8_t objId[6], uint8_t cid, uint32_t offset, uint32_t length)</argsstring>
        <name>OtpVFSGetCheckSum</name>
        <param>
          <type>uint8_t</type>
          <declname>objId</declname>
          <array>[6]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Calculate the CRC checksum for a specified range of data within an object. </para>
        </briefdescription>
        <detaileddescription>
<para>This function calculates the CRC (Cyclic Redundancy Check) checksum for a given range of data within an object identified by its handler.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset within the object&apos;s data where CRC calculation should start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data range for CRC calculation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated CRC checksum if successful, or an error code if the operation failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="225" column="17" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="225" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a28a1283fef847e9cb7566e7f4351d83e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool arePropertiesValid</definition>
        <argsstring>(uint32_t properties)</argsstring>
        <name>arePropertiesValid</name>
        <param>
          <type>uint32_t</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
<para>Check if the properties from an array of 4 bytes are valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">properties</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an array of 4 bytes representing properties.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if only bits 0-7 are set (valid), false if any bit from 8-31 is set (invalid) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="278" column="13" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="278" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1af3c366042902548c5ff9eac5cbf6be05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool isSortOrderValid</definition>
        <argsstring>(uint8_t order)</argsstring>
        <name>isSortOrderValid</name>
        <param>
          <type>uint8_t</type>
          <declname>order</declname>
        </param>
        <briefdescription>
<para>Check if the sort order is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">order</parametername>
</parameternamelist>
<parameterdescription>
<para>Sort order value to be checked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the sort order is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="299" column="13" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="299" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1ad6b0f06bc1822783b31870815300e903" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>static int8_t OtpVFSBinaryCompareVarLen</definition>
        <argsstring>(uint8_t *a, uint8_t *b, uint8_t lengthA, uint8_t lengthB)</argsstring>
        <name>OtpVFSBinaryCompareVarLen</name>
        <param>
          <type>uint8_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>lengthA</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>lengthB</declname>
        </param>
        <briefdescription>
<para>Compare two binary arrays of variable length. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the first binary array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the second binary array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lengthA</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the first array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lengthB</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the second array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 if array &apos;a&apos; is lexicographically less than array &apos;b&apos;, 1 if array &apos;a&apos; is lexicographically greater than array &apos;b&apos;, 0 if both arrays are equal. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="323" column="15" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="323" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a87578de833926d2e9e2172f48d32a9bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>static int8_t OtpVFSBinaryCompare</definition>
        <argsstring>(uint8_t *a, uint8_t *b, uint16_t length)</argsstring>
        <name>OtpVFSBinaryCompare</name>
        <param>
          <type>uint8_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Compare two binary arrays of fixed length. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the first binary array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the second binary array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the arrays.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 if array &apos;a&apos; is lexicographically less than array &apos;b&apos;, 1 if array &apos;a&apos; is lexicographically greater than array &apos;b&apos;, 0 if both arrays are equal. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="378" column="15" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="378" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a7f707ea7b8b78c0caa7e5aec582a327b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t setChannelStatus</definition>
        <argsstring>(uint8_t cid, bool channelAvailability)</argsstring>
        <name>setChannelStatus</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>channelAvailability</declname>
        </param>
        <briefdescription>
<para>Set the availability status of a specified channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channelAvailability</parametername>
</parameternamelist>
<parameterdescription>
<para>true to set the channel as available, false to set as unavailable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0 if the operation is successful.</para>
</listitem><listitem><para>1 if the parameters are invalid. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="408" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="408" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a27e93f706139d018c23d57c1129d1830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t getChannelStatus</definition>
        <argsstring>(uint8_t cid, bool *channelAvailability)</argsstring>
        <name>getChannelStatus</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>channelAvailability</declname>
        </param>
        <briefdescription>
<para>Get the availability status of a specified channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">channelAvailability</parametername>
</parameternamelist>
<parameterdescription>
<para>true if the channel is available, false if it is unavailable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0 if the operation is successful.</para>
</listitem><listitem><para>1 if the parameter is invalid. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="437" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="437" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1aa846ceadc965cf3b5b423cc04308b5f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OtpVFSUtilListInit</definition>
        <argsstring>(OtpVFSList *node)</argsstring>
        <name>OtpVFSUtilListInit</name>
        <param>
          <type><ref refid="otp__vfs__main_8h_1afe3f00a2ba2f13d76c3b982e557ec901" kindref="member">OtpVFSList</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Initialize a linked list node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the node to be initialized. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="462" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="462" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a4546778c7ec1b0709ae1bd5c8abfcd55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OtpVFSUtilListInsert</definition>
        <argsstring>(OtpVFSList *head, OtpVFSList *node)</argsstring>
        <name>OtpVFSUtilListInsert</name>
        <param>
          <type><ref refid="otp__vfs__main_8h_1afe3f00a2ba2f13d76c3b982e557ec901" kindref="member">OtpVFSList</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type><ref refid="otp__vfs__main_8h_1afe3f00a2ba2f13d76c3b982e557ec901" kindref="member">OtpVFSList</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Insert a node into the linked list after the head. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">head</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the head of the linked list. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the node to be inserted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="480" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="480" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1adb88f2eb7f49da847b169d8035c4ccdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OtpVFSUtilListRemove</definition>
        <argsstring>(OtpVFSList *node)</argsstring>
        <name>OtpVFSUtilListRemove</name>
        <param>
          <type><ref refid="otp__vfs__main_8h_1afe3f00a2ba2f13d76c3b982e557ec901" kindref="member">OtpVFSList</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Remove a node from the linked list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the node to be removed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="499" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="499" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a629334f1933be24ec428bfe747d38626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="otp__vfs__main_8h_1afe3f00a2ba2f13d76c3b982e557ec901" kindref="member">OtpVFSList</ref> *</type>
        <definition>OtpVFSList * OtpVFSUtilListAllocate</definition>
        <argsstring>(OtpVFSList *phead)</argsstring>
        <name>OtpVFSUtilListAllocate</name>
        <param>
          <type><ref refid="otp__vfs__main_8h_1afe3f00a2ba2f13d76c3b982e557ec901" kindref="member">OtpVFSList</ref> *</type>
          <declname>phead</declname>
        </param>
        <briefdescription>
<para>Allocate a node from the linked list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">phead</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the head of the linked list.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the allocated node, or NULL if the list is empty. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="520" column="12" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="520" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a28c3549b0ad53c1ff799610ae728298d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="otp__vfs__main_8h_1afe3f00a2ba2f13d76c3b982e557ec901" kindref="member">OtpVFSList</ref> *</type>
        <definition>OtpVFSList * OtpVFSUtilFindObjectById</definition>
        <argsstring>(uint8_t cid, uint8_t *id)</argsstring>
        <name>OtpVFSUtilFindObjectById</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Find an object in the linked list by ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ID to search for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the found object if successful, or NULL if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="551" column="12" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="551" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a63c64fc18820b80e65c27b2f1bf369f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OtpVFSInitialize</definition>
        <argsstring>(void)</argsstring>
        <name>OtpVFSInitialize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the Object Transfer Protocol Service (OTPS). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="586" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="586" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a3a86a275b01e6125e3dee2fc38e929f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t isFilterValid</definition>
        <argsstring>(OtpsFilter *filter, uint8_t filterId)</argsstring>
        <name>isFilterValid</name>
        <param>
          <type><ref refid="otp__vfs__main_8h_1a3d47a4f5b44651d17a14bd7e5bbb08f1" kindref="member">OtpsFilter</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>filterId</declname>
        </param>
        <briefdescription>
<para>Check if the filter is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the filter structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filterId</parametername>
</parameternamelist>
<parameterdescription>
<para>Filter ID to check.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the filter is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="617" column="16" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="617" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1acd4873e0682b4f0c24a2832f2b441397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSCreateRequest</definition>
        <argsstring>(uint8_t cid, uint32_t *size, uint8_t *type, bool isTypeLong)</argsstring>
        <name>OtpVFSCreateRequest</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isTypeLong</declname>
        </param>
        <briefdescription>
<para>Create a request to create an object in the Object Transfer Protocol Service (OTPS). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the desired object size. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the object type UUID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">isTypeLong</parametername>
</parameternamelist>
<parameterdescription>
<para>true if the type is 128 bits long, false if 16 bits long.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OTP_VFS_OACP_ERR_SUCCESS if the request is successful, or an error code if the operation failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="673" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="673" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a918abe3f0f76d14141f1037d5dacfa26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSDeleteRequest</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>OtpVFSDeleteRequest</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Create a request to delete an object in the Object Transfer Protocol Service (OTPS). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OTP_VFS_OACP_ERR_SUCCESS if the request is successful, or an error code if the operation failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="755" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="755" bodyend="801"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a38af7b09a8eb3e23af3f49698077b168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSCalcChecksumRequest</definition>
        <argsstring>(uint8_t cid, uint32_t *offset, uint32_t *length)</argsstring>
        <name>OtpVFSCalcChecksumRequest</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Create a request to calculate the CRC checksum for a specified range of data within an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset within the object&apos;s data where CRC calculation should start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data range for CRC calculation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OTP_VFS_OACP_ERR_SUCCESS if the request is successful, or an error code if the operation failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="816" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="816" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a759fa11017c28b8246faf4d82e7dd388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSCalcChecksumRequestUi</definition>
        <argsstring>(uint8_t cid, uint8_t objId[6], uint32_t *length, uint32_t *offset)</argsstring>
        <name>OtpVFSCalcChecksumRequestUi</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>objId</declname>
          <array>[6]</array>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Create a request to calculate the CRC checksum for a specified range of data within an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset within the object&apos;s data where CRC calculation should start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data range for CRC calculation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OTP_VFS_OACP_ERR_SUCCESS if the request is successful, or an error code if the operation failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="871" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="871" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1ab9d8c38f40ec3afe87f141e1179cc585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSExecuteRequest</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>OtpVFSExecuteRequest</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Perform the checks for an execution request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OTP_VFS_OACP_ERR_SUCCESS if the request is successful, or an error code if the operation failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="944" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="944" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a75002cb6a2e9189eb8d4c9c037925cda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSReadRequest</definition>
        <argsstring>(uint8_t cid, uint32_t *offset, uint32_t *length)</argsstring>
        <name>OtpVFSReadRequest</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Create a read request to retrieve data from a specified range within an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset within the object&apos;s data where the read operation should start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data range to be read.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OTP_VFS_OACP_ERR_SUCCESS if the request is successful, or an error code if the operation failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="985" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="985" bodyend="1052"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a5f2972360606b6f788aacd047b3540a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSReadData</definition>
        <argsstring>(uint8_t cid, uint8_t *pBuff)</argsstring>
        <name>OtpVFSReadData</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pBuff</declname>
        </param>
        <briefdescription>
<para>Read data from the object based on the read request attributes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pBuff</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer to store the read data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OTP_VFS_OACP_ERR_SUCCESS if the read operation is successful, or an error code if the operation failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="1065" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="1065" bodyend="1090"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a394aafc06c84aa1234a2b1b14b3b6408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSReadDataUi</definition>
        <argsstring>(uint8_t cid, uint8_t objId[6], uint32_t length, uint32_t offset, uint8_t *pBuff)</argsstring>
        <name>OtpVFSReadDataUi</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>objId</declname>
          <array>[6]</array>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pBuff</declname>
        </param>
        <briefdescription>
<para>Read data from the selected object in the OTP VFS. </para>
        </briefdescription>
        <detaileddescription>
<para>Write data to the selected object in the OTP VFS.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">objId</parametername>
</parameternamelist>
<parameterdescription>
<para>Object Id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data to be read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset at which to start reading the data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pBuff</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the read data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, or an error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="1105" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="1105" bodyend="1162"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a77afe7345ce0d1ae2b8538ca4c372642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSWriteData</definition>
        <argsstring>(uint8_t cid, uint32_t length, uint32_t offset, uint8_t *pBuff)</argsstring>
        <name>OtpVFSWriteData</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pBuff</declname>
        </param>
        <briefdescription>
<para>Write data to the current object in the OTP VFS. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data to be written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset at which to start writing the data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pBuff</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be written.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, or an error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="1176" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="1176" bodyend="1185"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a6eadec1e33ae7721da5aec5f9e929d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSWriteDataUi</definition>
        <argsstring>(uint8_t cid, uint8_t objId[6], uint32_t length, uint32_t offset, uint8_t *pBuff)</argsstring>
        <name>OtpVFSWriteDataUi</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>objId</declname>
          <array>[6]</array>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pBuff</declname>
        </param>
        <briefdescription>
<para>Write data to the selected object in the OTP VFS. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>objId</parametername>
</parameternamelist>
<parameterdescription>
<para>Object Id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data to be written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset at which to start writing the data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pBuff</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be written.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, or an error code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="1200" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="1200" bodyend="1263"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1ad410da8d9fa34bb0e814b387b0540325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSWriteRequest</definition>
        <argsstring>(uint8_t cid, uint32_t *offset, uint32_t *length, uint8_t mode)</argsstring>
        <name>OtpVFSWriteRequest</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Initiate a write operation request for the current object in the Object List Control Point (OLCP). </para>
        </briefdescription>
        <detaileddescription>
<para>This function initiates a write operation request for the current object in the OLCP, subject to several conditions defined by the OTP Service specification - 3.3.2.6 Write Procedure</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset within the object&apos;s data where the write operation should start. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Write operation mode.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OTP_VFS_OACP_ERR_SUCCESS if the write operation request is successfully initiated, or an error code if the operation cannot be initiated. Possible error codes include:<itemizedlist>
<listitem><para>OTP_VFS_OACP_ERR_NOT_SUPPORTED when the write feature is not supported.</para>
</listitem><listitem><para>OTP_VFS_OACP_ERR_INVALID_OBJECT when the current object is invalid.</para>
</listitem><listitem><para>OTP_VFS_OACP_ERR_PROC_NOT_PERMITTED when write operations are not permitted.</para>
</listitem><listitem><para>OTP_VFS_OACP_ERR_INVALID_PARAMETER when parameters are invalid.</para>
</listitem><listitem><para>OTP_VFS_OACP_ERR_INSUFFICIENT_RESOURCES when resources are insufficient.</para>
</listitem><listitem><para>OTP_VFS_OACP_ERR_OBJECT_LOCKED when the object is locked.</para>
</listitem><listitem><para>OTP_VFS_OACP_ERR_OPERATION_FAILED when an operation is already in progress. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="1288" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="1288" bodyend="1413"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a2d097728ac1c476f75b6e5026c0d1bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSAbortRequest</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>OtpVFSAbortRequest</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Initiate an abort operation request for the current OACP Read operation in progress. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OTP_VFS_OACP_ERR_SUCCESS if the abort operation request is successfully initiated, or an error code if the operation cannot be initiated. Possible error codes include:<itemizedlist>
<listitem><para>OTP_VFS_OACP_ERR_NOT_SUPPORTED when the abort feature is not supported.</para>
</listitem><listitem><para>OTP_VFS_OACP_ERR_OPERATION_FAILED when an operation is not in progress or cannot be aborted. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="1429" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="1429" bodyend="1450"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1ac8693c65199d3046dd1850f7a42126f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSL2CWrite</definition>
        <argsstring>(uint8_t cid, uint32_t length, uint8_t *pBuff, bool *isOperationFinished)</argsstring>
        <name>OtpVFSL2CWrite</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pBuff</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>isOperationFinished</declname>
        </param>
        <briefdescription>
<para>Initiates a write operation request for the current object in the Object Access Control Point (OACP) over L2CAP. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pBuff</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data buffer to be written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">isOperationFinished</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a boolean indicating whether the write operation is finished.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OTP_VFS_OACP_ERR_SUCCESS if the write operation request is successfully initiated. OTP_VFS_OACP_ERR_OPERATION_FAILED when an operation is already in progress or if there is an invalid handle. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="1468" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="1468" bodyend="1511"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a186dbc7a1520c5e42acbfd4328abacd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSL2CRead</definition>
        <argsstring>(uint8_t cid, uint16_t l2cCid, bool *isOperationFinished)</argsstring>
        <name>OtpVFSL2CRead</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>l2cCid</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>isOperationFinished</declname>
        </param>
        <briefdescription>
<para>Initiates a read operation request from the current object in the Object Access Control Point (OACP) over L2CAP. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">l2cCid</parametername>
</parameternamelist>
<parameterdescription>
<para>L2CAP Connection ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">isOperationFinished</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a boolean indicating whether the read operation is finished.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OTP_VFS_OACP_ERR_SUCCESS if the read operation request is successfully initiated, or an error code if the operation cannot be initiated. Possible error codes include:<itemizedlist>
<listitem><para>OTP_VFS_OACP_ERR_OPERATION_FAILED when the operation fails.</para>
</listitem><listitem><para>OTP_VFS_OACP_ERR_SUCCESS when the operation is successful. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="1529" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="1529" bodyend="1578"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a125bc77e0bfb07587aa964d233db9bb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSGetAttribute</definition>
        <argsstring>(uint8_t cid, uint8_t attrType, uint8_t *pAttribute, uint16_t *pLen)</argsstring>
        <name>OtpVFSGetAttribute</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>attrType</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pAttribute</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>pLen</declname>
        </param>
        <briefdescription>
<para>Get a pointer to a specific attribute of the current object in the Object List. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attrType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of attribute to retrieve (e.g., size, type, property, etc.). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pAttribute</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the attribute data if found.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the current object is valid and the attribute exists, or an error code if the current object is invalid or the attribute does not exist. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="1592" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="1592" bodyend="1678"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a04a0c24393146657609cb6c3035f1892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSSetAttribute</definition>
        <argsstring>(uint8_t cid, uint8_t attrType, uint8_t *attr)</argsstring>
        <name>OtpVFSSetAttribute</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>attrType</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Set an attribute of the current object in the Object List. </para>
        </briefdescription>
        <detaileddescription>
<para>Get a pointer to a specific attribute of the current object in the Object List.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attrType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of attribute to set (e.g., size, type, property, etc.). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the attribute data to set for the current object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OTP_VFS_OACP_ERR_SUCCESS if the attribute is set successfully. OTP_VFS_OACP_ERR_INVALID_OBJECT when the current object in the OLCP is invalid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="1692" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="1692" bodyend="1762"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a0470c98cb9dc63db7988a8f827241f56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSSetAttributeUi</definition>
        <argsstring>(uint8_t cid, uint8_t objId[OTP_VFS_OBJECT_ID_LEN], uint8_t attType, uint8_t *att, uint8_t attLen)</argsstring>
        <name>OtpVFSSetAttributeUi</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>objId</declname>
          <array>[OTP_VFS_OBJECT_ID_LEN]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>attType</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>att</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>attLen</declname>
        </param>
        <briefdescription>
<para>Sets the specified attribute for the selected object in the Object Server. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the specified attribute for the selected object in the Object Server based on the attribute type and the provided data. It performs validation checks and updates the object&apos;s metadata accordingly.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">objId</parametername>
</parameternamelist>
<parameterdescription>
<para>Object ID of the selected object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attType</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute type to be set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">att</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the attribute data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attLen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the attribute data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the attribute setting operation. Possible return values include:<itemizedlist>
<listitem><para>ATT_SUCCESS if the attribute is successfully set.</para>
</listitem><listitem><para>ATT_OTP_ERR_WRITE_REQ_REJ if the write request is rejected.</para>
</listitem><listitem><para>ATT_OTP_ERR_OBJ_NOT_SELECTED if the object is not selected.</para>
</listitem><listitem><para>ATT_OTP_ERR_NAME_ALREADY_EXISTS if the name already exists.</para>
</listitem><listitem><para>ATT_OTP_ERR_WRITE_REQ_REJ for other invalid write requests. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="1786" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="1786" bodyend="1898"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1aaae139756470c5ab0048656be0ea3ebc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSDeleteObjectUi</definition>
        <argsstring>(uint8_t cid, uint8_t objId[OTP_VFS_OBJECT_ID_LEN])</argsstring>
        <name>OtpVFSDeleteObjectUi</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>objId</declname>
          <array>[OTP_VFS_OBJECT_ID_LEN]</array>
        </param>
        <briefdescription>
<para>Deletes an object in the Object Server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">objId</parametername>
</parameternamelist>
<parameterdescription>
<para>Object ID of the selected object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the attribute setting operation. Possible return values include:<itemizedlist>
<listitem><para>ATT_SUCCESS if the attribute is successfully set.</para>
</listitem><listitem><para>ATT_OTP_ERR_WRITE_REQ_REJ if the write request is rejected.</para>
</listitem><listitem><para>ATT_OTP_ERR_OBJ_NOT_SELECTED if the object is not selected.</para>
</listitem><listitem><para>ATT_OTP_ERR_WRITE_REQ_REJ for other invalid write requests. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="1914" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="1914" bodyend="1970"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1add88c8499d8053d75f47f157026919d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSSetName</definition>
        <argsstring>(uint8_t cid, uint8_t *pValue, uint8_t len)</argsstring>
        <name>OtpVFSSetName</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pValue</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Sets the name attribute for the currently selected object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the name data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the name data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the name setting operation. Possible return values include:<itemizedlist>
<listitem><para>ATT_SUCCESS if the name is successfully set.</para>
</listitem><listitem><para>ATT_OTP_ERR_WRITE_REQ_REJ if the write request is rejected.</para>
</listitem><listitem><para>ATT_OTP_ERR_OBJ_NOT_SELECTED if the object is not selected.</para>
</listitem><listitem><para>ATT_OTP_ERR_NAME_ALREADY_EXISTS if the name already exists. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="1987" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="1987" bodyend="2021"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a8863319d5072581b63e83ac1e7588fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSGetName</definition>
        <argsstring>(uint8_t cid, uint8_t *pValue, uint16_t *pLen)</argsstring>
        <name>OtpVFSGetName</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pValue</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>pLen</declname>
        </param>
        <briefdescription>
<para>Retrieves the name attribute for the currently selected object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer to store the name data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pLen</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable to store the length of the name data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the name retrieval operation. Possible return values include:<itemizedlist>
<listitem><para>ATT_SUCCESS if the name is successfully retrieved.</para>
</listitem><listitem><para>ATT_OTP_ERR_WRITE_REQ_REJ if the write request is rejected.</para>
</listitem><listitem><para>ATT_OTP_ERR_OBJ_NOT_SELECTED if the object is not selected. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="2037" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="2037" bodyend="2061"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a635a0be286c3ded69b24e6858bd6ca34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSSetFilter</definition>
        <argsstring>(uint8_t cid, uint8_t filterId, uint8_t *pValue, uint16_t len)</argsstring>
        <name>OtpVFSSetFilter</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>filterId</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pValue</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Sets a filter condition for the specified filter ID in the Object Transfer Service. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets a filter condition for the specified filter ID in the Object Transfer Service. The filter condition is used to filter objects during an object listing operation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filterId</parametername>
</parameternamelist>
<parameterdescription>
<para>Filter ID to set the condition for (1 to 3). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer containing the filter condition data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the filter condition data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the filter condition setting operation. Possible return values include:<itemizedlist>
<listitem><para>ATT_SUCCESS if the filter condition is successfully set.</para>
</listitem><listitem><para>ATT_OTP_ERR_WRITE_REQ_REJ if the write request is rejected. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="2080" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="2080" bodyend="2123"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1af550a9a616ace5b37f062da4baa4d552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSGetFilter</definition>
        <argsstring>(uint8_t cid, uint8_t filterId, uint8_t *pValue, uint16_t *pLen)</argsstring>
        <name>OtpVFSGetFilter</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>filterId</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pValue</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>pLen</declname>
        </param>
        <briefdescription>
<para>Retrieves the filter condition for the specified filter ID in the Object Transfer Service. </para>
        </briefdescription>
        <detaileddescription>
<para>This function retrieves the filter condition for the specified filter ID in Object Transfer Service. The filter condition is used to filter objects during an object listing operation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filterId</parametername>
</parameternamelist>
<parameterdescription>
<para>Filter ID to retrieve the condition for (1 to 3). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer to store the retrieved filter condition data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pLen</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable to store the length of the retrieved filter condition data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the filter condition retrieval operation. Possible return values include:<itemizedlist>
<listitem><para>ATT_SUCCESS if the filter condition is successfully retrieved.</para>
</listitem><listitem><para>ATT_OTP_ERR_WRITE_REQ_REJ if the write request is rejected. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="2144" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="2144" bodyend="2173"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a1cdbaa5227971dfe3250c20a220bb5ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t OtpVFSGetTotalObjectNumber</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>OtpVFSGetTotalObjectNumber</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Retrieves the total number of filtered objects for the current connection in the Object Transfer Protocol (OTP) Service. </para>
        </briefdescription>
        <detaileddescription>
<para>This function retrieves the total number of filtered objects for the current connection in the OTP Service.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The total number of filtered objects for the current connection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="2188" column="10" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="2188" bodyend="2195"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a10c79523f124d46e24efa1692b428682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSOlcpOpObject</definition>
        <argsstring>(uint8_t cid, uint8_t *pValue, uint8_t *operationResponse)</argsstring>
        <name>OtpVFSOlcpOpObject</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pValue</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>operationResponse</declname>
        </param>
        <briefdescription>
<para>Performs an Object List Control Point (OLCP) operation. </para>
        </briefdescription>
        <detaileddescription>
<para>This function performs an OLCP operation on objects based on the provided operation code.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer containing the OLCP operation data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">operationResponse</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable to store the OLCP operation response.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the OLCP operation. Possible return values include:<itemizedlist>
<listitem><para>ATT_SUCCESS if the OLCP operation is successfully executed.</para>
</listitem><listitem><para>ATT_OTP_ERR_WRITE_REQ_REJ if the write request is rejected. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="2212" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="2212" bodyend="2317"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a63855dd1bf1d88bd8170dd13f3096dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpVFSOacpOpObject</definition>
        <argsstring>(uint8_t cid, uint16_t len, uint8_t *pValue, uint8_t *operationResponse)</argsstring>
        <name>OtpVFSOacpOpObject</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pValue</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>operationResponse</declname>
        </param>
        <briefdescription>
<para>Performs an Object Access Control Point (OACP) operation on objects in the Object Transfer Protocol (OTP) Service. </para>
        </briefdescription>
        <detaileddescription>
<para>This function performs an OACP operation on objects in the OTP Service based on the provided operation code.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the OACP operation data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer containing the OACP operation data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">operationResponse</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable to store the OACP operation response.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the OACP operation. Possible return values include:<itemizedlist>
<listitem><para>ATT_SUCCESS if the OACP operation is successfully executed.</para>
</listitem><listitem><para>ATT_OTP_ERR_WRITE_REQ_REJ if the write request is rejected. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="2337" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="2337" bodyend="2426"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a1022d99e4feef47e0f7a1839d5fd3622" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void OtpsVFSUtilityGetObjectRecordData</definition>
        <argsstring>(uint8_t cid, uint8_t *pBuf, uint16_t offset, size_t length, uint64_t id, OtpVFSMetaData *pMetaData)</argsstring>
        <name>OtpsVFSUtilityGetObjectRecordData</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pBuf</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="otp__vfs__main_8h_1a695a871634597c4ad46620041fe738d5" kindref="member">OtpVFSMetaData</ref> *</type>
          <declname>pMetaData</declname>
        </param>
        <briefdescription>
<para>Gets the object record data for the specified Object Transfer Service (OTS) connection. </para>
        </briefdescription>
        <detaileddescription>
<para>This function retrieves the object record data for the specified Object Transfer Service (OTS) connection, including information such as object ID, name, type, and current size.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current OTS connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pBuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer to store the object record data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset within the buffer to start storing the data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Object ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pMetaData</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the metadata of the object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="2443" column="13" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="2443" bodyend="2493"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a579946281015aa203caa05a52919a97b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t OtpVFSGetFolderRecord</definition>
        <argsstring>(uint8_t cid, uint8_t *pBuf, uint32_t offset, uint32_t length)</argsstring>
        <name>OtpVFSGetFolderRecord</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pBuf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Retrieves folder record data for the specified Object Transfer Service (OTS) connection. </para>
        </briefdescription>
        <detaileddescription>
<para>This function retrieves folder record data for the specified OTS connection, including information about objects within the specified offset and length range.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current OTS connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pBuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer to store the folder record data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset within the buffer to start storing the data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the folder record data retrieved, or 0xFFFFFFFF if an error occurs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="2510" column="10" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="2510" bodyend="2606"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1af86b252feafd919709537596109c7be0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t OtpVFSTypeCompare</definition>
        <argsstring>(uint8_t *number1, uint16_t isType1Long, uint8_t *number2, uint16_t isType2Long)</argsstring>
        <name>OtpVFSTypeCompare</name>
        <param>
          <type>uint8_t *</type>
          <declname>number1</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>isType1Long</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>number2</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>isType2Long</declname>
        </param>
        <briefdescription>
<para>Compares two numbers in Object Transfer Service (OTS) for type-specific comparison. </para>
        </briefdescription>
        <detaileddescription>
<para>This function compares two numbers in OTS for type-specific comparison. It returns 1 if the first number is greater, -1 if the second number is greater, and 0 if the numbers are equal.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">number1</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the first number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">isType1Long</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether the first number is long (128-bit) or short (16-bit).</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">number2</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the second number.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">isType2Long</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether the second number is long (128-bit) or short (16-bit).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the first number is greater, -1 if the second number is greater, 0 if the numbers are equal. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="2624" column="8" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="2624" bodyend="2654"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a650427bdd59034f7d16b2d8bf6073b60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>static int8_t OtpVFSNameCompare</definition>
        <argsstring>(uint8_t *a, uint8_t *b, uint8_t sizeA, uint8_t sizeB, int mode)</argsstring>
        <name>OtpVFSNameCompare</name>
        <param>
          <type>uint8_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>sizeA</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>sizeB</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Compare two byte arrays <computeroutput>a</computeroutput> and <computeroutput>b</computeroutput> with specified sizes and a comparison mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the first byte array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the second byte array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sizeA</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the first byte array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sizeB</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the second byte array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Comparison mode:<itemizedlist>
<listitem><para>0: Compare entire arrays from the beginning.</para>
</listitem><listitem><para>1: Compare entire arrays from the end.</para>
</listitem><listitem><para>2: Compare <computeroutput>b</computeroutput> against all possible alignments in <computeroutput>a</computeroutput>.</para>
</listitem><listitem><para>3: Compare only if sizes match.</para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>A negative value if <computeroutput>a</computeroutput> is less than <computeroutput>b</computeroutput>.</para>
</listitem><listitem><para>0 if <computeroutput>a</computeroutput> is equal to <computeroutput>b</computeroutput>.</para>
</listitem><listitem><para>A positive value if <computeroutput>a</computeroutput> is greater than <computeroutput>b</computeroutput>.</para>
</listitem><listitem><para>-2 if <computeroutput>a</computeroutput> or <computeroutput>b</computeroutput> is NULL.</para>
</listitem><listitem><para>-1 for an invalid mode. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="2678" column="15" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="2678" bodyend="2763"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1ad85e8be86f15722b6b7a63af6455859a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>static int8_t OTPVFSUpdateObjectListUtility</definition>
        <argsstring>(OtpVFSId *pObj, uint8_t condNumber, OtpsFilter *pCond)</argsstring>
        <name>OTPVFSUpdateObjectListUtility</name>
        <param>
          <type><ref refid="otp__vfs__main_8h_1af07c21850b2f169d1ad35a3ac9747edf" kindref="member">OtpVFSId</ref> *</type>
          <declname>pObj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>condNumber</declname>
        </param>
        <param>
          <type><ref refid="otp__vfs__main_8h_1a3d47a4f5b44651d17a14bd7e5bbb08f1" kindref="member">OtpsFilter</ref> *</type>
          <declname>pCond</declname>
        </param>
        <briefdescription>
<para>Update the object list based on specified conditions. </para>
        </briefdescription>
        <detaileddescription>
<para>This function checks each condition in the provided filter and determines if the given object should be accepted or rejected.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pObj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the object to be checked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">condNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of conditions in the filter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCond</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the filter containing conditions.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>1 if the object is accepted.</para>
</listitem><listitem><para>0 if the object is rejected. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="2782" column="15" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="2782" bodyend="2916"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a6b49c234eb7bb5955388f54e7692b00b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OTPVFSUpdateObjectList</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>OTPVFSUpdateObjectList</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Update the object list based on filters for a specific connection ID. </para>
        </briefdescription>
        <detaileddescription>
<para>This function moves the old filtered objects to the usedId list and filters them again based on the specified conditions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="2928" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="2928" bodyend="2975"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a05ea2731b70a24972d1106e9e051c4ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OtpVFSCleanup</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>OtpVFSCleanup</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Cleanup the OTP VFS list by removing objects with a name length of 0. </para>
        </briefdescription>
        <detaileddescription>
<para>This function removes objects with a name length of 0 from the filteredIdHead list and moves them to the freeIdHead list. It also updates the total number of objects.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="2987" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="2987" bodyend="3019"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1ae6b213d6904a68b93c92ea7f8ab58e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OtpVFSClearAllMarkObject</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>OtpVFSClearAllMarkObject</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Clear the &quot;mark&quot; attribute for all objects in both filtered and used lists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="3028" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="3028" bodyend="3038"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1ac6e17f13690958576625f46a7f40fdcf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int OtpVFSComparsion</definition>
        <argsstring>(uint8_t sortType, OtpVFSMetaData *a, OtpVFSMetaData *b)</argsstring>
        <name>OtpVFSComparsion</name>
        <param>
          <type>uint8_t</type>
          <declname>sortType</declname>
        </param>
        <param>
          <type><ref refid="otp__vfs__main_8h_1a695a871634597c4ad46620041fe738d5" kindref="member">OtpVFSMetaData</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="otp__vfs__main_8h_1a695a871634597c4ad46620041fe738d5" kindref="member">OtpVFSMetaData</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Compare function for sorting OTP VFS metadata based on the specified sort type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sortType</parametername>
</parameternamelist>
<parameterdescription>
<para>Sort type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>First metadata to compare. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>Second metadata to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>1 if <computeroutput>a</computeroutput> is greater than <computeroutput>b</computeroutput>.</para>
</listitem><listitem><para>0 if <computeroutput>a</computeroutput> is less than or equal to <computeroutput>b</computeroutput>. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="3052" column="12" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="3052" bodyend="3109"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a3da020dfb774fbc5c5a7fcc18b663afa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OtpVFSSortObject</definition>
        <argsstring>(uint8_t cid, uint8_t sortType)</argsstring>
        <name>OtpVFSSortObject</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>sortType</declname>
        </param>
        <briefdescription>
<para>Sort the objects in the OTP VFS list based on the specified sort type. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sorts the objects in the filteredIdHead list of the given connection based on the specified sort type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sortType</parametername>
</parameternamelist>
<parameterdescription>
<para>Sort type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="3122" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="3122" bodyend="3174"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1ad34f3d179de32b3069c350bbbbcd2c7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t OtpVFSReadCheckSum</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>OtpVFSReadCheckSum</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Get the checksum of the currently selected object in the OTP VFS list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Checksum of the currently selected object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="3184" column="10" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="3184" bodyend="3187"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a5f2fa5a3af37a7b423dfdb87950c4b1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t OtpVFSReadCheckSumUi</definition>
        <argsstring>(uint8_t objId[6], uint8_t cid)</argsstring>
        <name>OtpVFSReadCheckSumUi</name>
        <param>
          <type>uint8_t</type>
          <declname>objId</declname>
          <array>[6]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Get the checksum of the currently selected object in the OTP VFS list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Checksum of the currently selected object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="3197" column="10" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="3197" bodyend="3231"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a0541c462f0199ff1a7749a51dd806b49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OtpSetCccIdx</definition>
        <argsstring>(uint8_t oacpCccIdx, uint8_t olcpCccIdx, uint8_t objChangedCccIdx)</argsstring>
        <name>OtpSetCccIdx</name>
        <param>
          <type>uint8_t</type>
          <declname>oacpCccIdx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>olcpCccIdx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>objChangedCccIdx</declname>
        </param>
        <briefdescription>
<para>Set the CCCD indices used by the application for OTPS service characteristics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oacpCccIdx</parametername>
</parameternamelist>
<parameterdescription>
<para>Object Action Control Point CCCD index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>olcpCccIdx</parametername>
</parameternamelist>
<parameterdescription>
<para>Object List Control Point CCCD index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>objChangedCccIdx</parametername>
</parameternamelist>
<parameterdescription>
<para>Object Changed CCCD index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="3243" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="3243" bodyend="3251"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1ab974e3fcb347a103bd4da6feab42c62b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OtpSetFeatures</definition>
        <argsstring>(uint8_t cid, uint64_t featuresField)</argsstring>
        <name>OtpSetFeatures</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>featuresField</declname>
        </param>
        <briefdescription>
<para>Set the features field for the OTPS service for a given connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">featuresField</parametername>
</parameternamelist>
<parameterdescription>
<para>Features field value to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="3261" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="3261" bodyend="3268"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a849031fc6eb5307bb4dbca6d37293333" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OtpSetMtu</definition>
        <argsstring>(uint8_t cid, uint16_t mtuLen)</argsstring>
        <name>OtpSetMtu</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>mtuLen</declname>
        </param>
        <briefdescription>
<para>Set the MTU length for the L2Cap Communication for a given connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mtuLen</parametername>
</parameternamelist>
<parameterdescription>
<para>MTU Length for the current connection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="3278" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="3278" bodyend="3292"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a7ef662d9998bdbbc5ab7c46984b1358f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OtpGetFeatures</definition>
        <argsstring>(uint8_t cid, uint64_t *featuresField)</argsstring>
        <name>OtpGetFeatures</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>featuresField</declname>
        </param>
        <briefdescription>
<para>Get the features field for the OTPS service for a given connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">featuresField</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the retrieved features field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="3302" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="3302" bodyend="3309"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a3046042620f1a6966f85935758bc19a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t OtpGetCccIdx</definition>
        <argsstring>(uint8_t cid, uint8_t type, uint8_t *idx)</argsstring>
        <name>OtpGetCccIdx</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Get the CCCD index used by the application for OTPS service characteristics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Current cid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of index requested. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Output index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, 1 if there is an error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="3322" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="3322" bodyend="3348"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1a026dde3f586a903ef20ecbfba44a07dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t OtpGetCurrId</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>OtpGetCurrId</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Retrieve the current ID for the OTPS service associated with a given channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel ID for the current connection.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The channel ID if valid, or 0 if not valid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="3358" column="10" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="3358" bodyend="3374"/>
      </memberdef>
      <memberdef kind="function" id="otp__vfs__main_8c_1aec5c2c982f676526af18b971b53bafb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void printObjList</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>printObjList</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Print information about objects in the OTP VFS for the specified connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID for the current connection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" line="3383" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c" bodystart="3383" bodyend="3440"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Handlers for OTS Requests. </para>
    </briefdescription>
    <detaileddescription>
<para>Copyright (c) 2012-2019 Arm Ltd. All Rights Reserved.</para>
<para>Copyright (c) 2019-2024 Packetcraft, Inc. All rights reserved. Packetcraft, Inc. confidential and proprietary.</para>
<para>IMPORTANT. Your use of this file is governed by a Software License Agreement (&quot;Agreement&quot;) that must be accepted in order to download or otherwise receive a copy of this file. You may not use or copy this file for any purpose other than as described in the Agreement. If you do not agree to all of the terms of the Agreement do not use this file and delete all copies in your possession or control; if you do not have a copy of the Agreement, you must contact Packetcraft, Inc. prior to any use, copying or further distribution of this software. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="otp__vfs__main_8h" kindref="compound">otp/otp_vfs_main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;att_api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;att_defs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;l2c_api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;otp/otp_transport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="otp__vfs__api_8h" kindref="compound">otp/otp_vfs_api.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="otp__vfs__api_8h" kindref="compound">otp_vfs_api.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ots__ui_8h" kindref="compound">ots/ots_ui.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="svc__otps_8h" kindref="compound">svc_otps.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;util/bstream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wsf_buf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wsf_efs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wsf_trace.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wsf_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct___otp_v_f_s_context" kindref="compound">OtpVFSContext</ref><sp/>OtpVFSCtx;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="otp__vfs__main_8c_1ac135b23fb42aa76d465331b34be94f0f" kindref="member">isUUIDBlacklisted</ref>(uint8_t<sp/>cid,<sp/>uint8_t*<sp/>uuid,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is128bitUUID)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>uuid<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uuid<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OtpVFSCtx.conn[cid].numBlacklistedUUIDs;<sp/>i++)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>is128bitUUID<sp/>flag<sp/>and<sp/>the<sp/>lengths<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is128bitUUID<sp/>==<sp/>OtpVFSCtx.conn[cid].blacklist[i].is128bitUUID)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>the<sp/>UUID<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(uuid,<sp/>OtpVFSCtx.conn[cid].blacklist[i].uuid,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].blacklist[i].length)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>UUID<sp/>is<sp/>blacklisted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>UUID<sp/>is<sp/>not<sp/>blacklisted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="otp__vfs__main_8c_1a64e11e60118cb99724f8af571f3a46a1" kindref="member">addToBlacklist</ref>(uint8_t<sp/>cid,<sp/>uint8_t*<sp/>uuid,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is128bitUUID)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>uuid<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uuid<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>length<sp/>based<sp/>on<sp/>the<sp/>is128bitUUID<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/><sp/>=<sp/>is128bitUUID<sp/>?<sp/>16<sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>uint32_t<sp/>idCount<sp/>=<sp/>OtpVFSCtx.conn[cid].numBlacklistedUUIDs;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>UUID<sp/>and<sp/>its<sp/>properties<sp/>to<sp/>the<sp/>new<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>OtpVFSCtx.conn[cid].blacklist[idCount].is128bitUUID<sp/>=<sp/>is128bitUUID;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>OtpVFSCtx.conn[cid].blacklist[idCount].length<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>OtpVFSCtx.conn[cid].blacklist[idCount].uuid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>malloc(length);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].blacklist[idCount].uuid<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Failed<sp/>to<sp/>allocate<sp/>memory<sp/>for<sp/>the<sp/>UUID<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].blacklist[idCount].is128bitUUID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].blacklist[idCount].length<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>memcpy(OtpVFSCtx.conn[cid].blacklist[idCount].uuid,<sp/>uuid,<sp/>length);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>blacklist<sp/>and<sp/>the<sp/>count<sp/>of<sp/>blacklisted<sp/>UUIDs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>OtpVFSCtx.conn[cid].numBlacklistedUUIDs++;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>remove<sp/>a<sp/>UUID<sp/>from<sp/>the<sp/>blacklist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeFromBlacklist(uint8_t<sp/>cid,<sp/>uint8_t*<sp/>uuid,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is128bitUUID)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>uuid<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uuid<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OtpVFSCtx.conn[cid].numBlacklistedUUIDs;<sp/>i++)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>is128bitUUID<sp/>flag<sp/>and<sp/>the<sp/>lengths<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is128bitUUID<sp/>==<sp/>OtpVFSCtx.conn[cid].blacklist[i].is128bitUUID)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>the<sp/>UUID<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(uuid,<sp/>OtpVFSCtx.conn[cid].blacklist[i].uuid,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].blacklist[i].length)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found<sp/>the<sp/>matching<sp/>UUID,<sp/>remove<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(OtpVFSCtx.conn[cid].blacklist[i].uuid);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>remaining<sp/>entries<sp/>to<sp/>fill<sp/>the<sp/>gap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i;<sp/>j<sp/>&lt;<sp/>OtpVFSCtx.conn[cid].numBlacklistedUUIDs<sp/>-<sp/>1;<sp/>j++)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].blacklist[j]<sp/>=<sp/>OtpVFSCtx.conn[cid].blacklist[j<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decrease<sp/>the<sp/>count<sp/>of<sp/>blacklisted<sp/>UUIDs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].numBlacklistedUUIDs--;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].blacklist[i].is128bitUUID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].blacklist[i].length<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>UUID<sp/>was<sp/>not<sp/>found<sp/>in<sp/>the<sp/>blacklist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>OtpsVFSUtilityGetObjectRecordLength(<ref refid="struct___otp_v_f_s_meta_data" kindref="compound">OtpVFSMetaData</ref>*<sp/>pMetaData)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>uint16_t<sp/>ret<sp/>=<sp/>pMetaData-&gt;name_len<sp/>+</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(OTP_OBJECT_RECORD_LENGTH_SIZE<sp/>+<sp/>OTP_OBJECT_RECORD_OBJ_ID_SIZE<sp/>+</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_OBJECT_RECORD_OBJ_NAME_LEN_SIZE<sp/>+<sp/>OTP_OBJECT_RECORD_FLAG_SIZE<sp/>+</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_OBJECT_RECORD_OBJ_TYPE_SIZE<sp/>+<sp/>OTP_OBJECT_RECORD_OBJ_CURRENT_SIZE_SIZE);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>OtpVFSFindObjectByName(uint8_t<sp/>cid,<sp/>uint8_t*<sp/>name,<sp/>uint8_t<sp/>len)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pObj<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>pObj<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pHead-&gt;pNext;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>pointer<sp/>parameter<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>each<sp/>object&apos;s<sp/>name<sp/>and<sp/>compare<sp/>it<sp/>with<sp/>the<sp/>input<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pObj<sp/>!=<sp/>pHead)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;metaData.name,<sp/>name,<sp/>len)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pObj;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>pObj-&gt;pNext;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>NULL<sp/>if<sp/>no<sp/>matching<sp/>object<sp/>is<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>OtpVFSGetCheckSum(uint8_t<sp/>objId[6],<sp/>uint8_t<sp/>cid,<sp/>uint32_t<sp/>offset,<sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>uint32_t<sp/>retCRC;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>filtered<sp/>ID<sp/>list<sp/>head<sp/>for<sp/>the<sp/>given<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>iObj<sp/><sp/>=<sp/>pHead;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/><sp/><sp/>pObj<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/>idBuf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>pointer<sp/>parameter<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objId<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>object<sp/>ID<sp/>to<sp/>a<sp/>64-bit<sp/>buffer<sp/>for<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>memcpy(&amp;idBuf,<sp/>objId,<sp/>OTP_VFS_OBJECT_ID_LEN);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>object<sp/>with<sp/>the<sp/>specified<sp/>object<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)iObj)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>idBuf)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iObj<sp/>=<sp/>iObj-&gt;pNext;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)iObj;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iObj<sp/>!=<sp/>pHead);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>selected<sp/>object<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObj<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>pObj<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>CRC<sp/>checksum<sp/>for<sp/>the<sp/>specified<sp/>data<sp/>range<sp/>within<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>retCRC<sp/>=<sp/><ref refid="otp__vfs__api_8h_1ad64f05491517440e0c7fd200d18c98b5" kindref="member">OtpVFSCoreCRCRead</ref>(pObj-&gt;handler,<sp/>offset,<sp/>length);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>calculated<sp/>CRC<sp/>checksum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retCRC;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arePropertiesValid(uint32_t<sp/>properties)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>a<sp/>mask<sp/>to<sp/>check<sp/>bits<sp/>from<sp/>8-31</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>uint32_t<sp/>mask<sp/>=<sp/>0xFFFFFF00;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>any<sp/>bit<sp/>from<sp/>8-31<sp/>is<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties<sp/>&amp;<sp/>mask)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>false<sp/>if<sp/>any<sp/>of<sp/>these<sp/>bits<sp/>is<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>only<sp/>bits<sp/>0-7<sp/>are<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSortOrderValid(uint8_t<sp/>order)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((order<sp/>&gt;<sp/>0x0)<sp/>&amp;&amp;<sp/>(order<sp/>&lt;<sp/>0x6))<sp/>||<sp/>((order<sp/>&gt;<sp/>0x10)<sp/>&amp;&amp;<sp/>(order<sp/>&lt;<sp/>0x16)))</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>OtpVFSBinaryCompareVarLen(uint8_t*<sp/>a,<sp/>uint8_t*<sp/>b,<sp/>uint8_t<sp/>lengthA,<sp/>uint8_t<sp/>lengthB)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>uint8_t<sp/>len;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthA<sp/>&gt;=<sp/>lengthB)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>lengthB;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>lengthA;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a[i]<sp/>&lt;<sp/>b[i])</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a[i]<sp/>&gt;<sp/>b[i])</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Define<sp/>Length<sp/>the<sp/>same:<sp/>return<sp/>0,</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Length<sp/>A<sp/>&gt;<sp/>B,<sp/>example<sp/>A<sp/>=<sp/>abcd<sp/>B<sp/>=<sp/>abc<sp/>-&gt;<sp/>then<sp/>B<sp/>is<sp/>larger,<sp/>return<sp/>-1;</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Otherwise<sp/>return<sp/>1</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthA<sp/>&lt;<sp/>lengthB)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lengthA<sp/>&gt;<sp/>lengthB)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>OtpVFSBinaryCompare(uint8_t*<sp/>a,<sp/>uint8_t*<sp/>b,<sp/>uint16_t<sp/>length)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a[i]<sp/>&lt;<sp/>b[i])</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a[i]<sp/>&gt;<sp/>b[i])</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a7f707ea7b8b78c0caa7e5aec582a327b" kindref="member">setChannelStatus</ref>(uint8_t<sp/>cid,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>channelAvailability)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>&gt;=<sp/>OTP_VFS_MAX_NO)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channelAvailability<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].oacp.op<sp/>=<sp/>OTP_VFS_OACP_OPERATION_NONE;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].isChannelAvailable<sp/>=<sp/>channelAvailability;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a27e93f706139d018c23d57c1129d1830" kindref="member">getChannelStatus</ref>(uint8_t<sp/>cid,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>channelAvailability)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>pointer<sp/>parameter<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channelAvailability<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>&gt;=<sp/>OTP_VFS_MAX_NO)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>*channelAvailability<sp/>=<sp/>OtpVFSCtx.conn[cid].isChannelAvailable;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="otp__vfs__main_8c_1aa846ceadc965cf3b5b423cc04308b5f8" kindref="member">OtpVFSUtilListInit</ref>(<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>node)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>node-&gt;pPrev<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>node-&gt;pNext<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="otp__vfs__main_8c_1a4546778c7ec1b0709ae1bd5c8abfcd55" kindref="member">OtpVFSUtilListInsert</ref>(<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>head,<sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>node)</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>NULL<sp/>||<sp/>head<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>head-&gt;pPrev-&gt;pNext<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>node-&gt;pPrev<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>head-&gt;pPrev;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>node-&gt;pNext<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>head-&gt;pPrev<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="otp__vfs__main_8c_1adb88f2eb7f49da847b169d8035c4ccdc" kindref="member">OtpVFSUtilListRemove</ref>(<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>node)</highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>node-&gt;pNext-&gt;pPrev<sp/>=<sp/>node-&gt;pPrev;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>node-&gt;pPrev-&gt;pNext<sp/>=<sp/>node-&gt;pNext;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>node-&gt;pNext<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>node-&gt;pPrev<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/><ref refid="otp__vfs__main_8c_1a629334f1933be24ec428bfe747d38626" kindref="member">OtpVFSUtilListAllocate</ref>(<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>phead)</highlight></codeline>
<codeline lineno="521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phead<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>node;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>node<sp/>=<sp/>phead-&gt;pNext;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phead<sp/>==<sp/>node)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>node-&gt;pNext-&gt;pPrev<sp/>=<sp/>node-&gt;pPrev;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>node-&gt;pPrev-&gt;pNext<sp/>=<sp/>node-&gt;pNext;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>node-&gt;pNext<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>node-&gt;pPrev<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/>obj<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)node;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>memset((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;obj-&gt;metaData,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct___otp_v_f_s_meta_data" kindref="compound">OtpVFSMetaData</ref>));</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/><ref refid="otp__vfs__main_8c_1a28c3549b0ad53c1ff799610ae728298d" kindref="member">OtpVFSUtilFindObjectById</ref>(uint8_t<sp/>cid,<sp/>uint8_t*<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pObj<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>pObj<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pHead-&gt;pNext;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pObj<sp/>!=<sp/>pHead)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;metaData.isTypeLong)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((memcmp(&amp;((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ATT_128_UUID_LEN)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pObj;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((memcmp(&amp;((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ATT_16_UUID_LEN)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pObj;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>pObj-&gt;pNext;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pObj;</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="otp__vfs__main_8c_1a63c64fc18820b80e65c27b2f1bf369f1" kindref="member">OtpVFSInitialize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>memset(&amp;OtpVFSCtx,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct___otp_v_f_s_context" kindref="compound">OtpVFSContext</ref>));</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><ref refid="otp__vfs__main_8c_1aa846ceadc965cf3b5b423cc04308b5f8" kindref="member">OtpVFSUtilListInit</ref>(&amp;OtpVFSCtx.freeIdHead);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OTP_VFS_MAX_NO;<sp/>i++)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1aa846ceadc965cf3b5b423cc04308b5f8" kindref="member">OtpVFSUtilListInit</ref>(&amp;OtpVFSCtx.conn[i].filteredIdHead);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1aa846ceadc965cf3b5b423cc04308b5f8" kindref="member">OtpVFSUtilListInit</ref>(&amp;OtpVFSCtx.conn[i].usedIdHead);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OTP_VFS_MAX_SUPPORTED_FILE_NO;<sp/>i++)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/>idList<sp/>=<sp/>&amp;OtpVFSCtx.idTable[i];</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>idList-&gt;id<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>((uint64_t)(i)<sp/>+<sp/>1)<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1aa846ceadc965cf3b5b423cc04308b5f8" kindref="member">OtpVFSUtilListInit</ref>((<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*)idList);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1a4546778c7ec1b0709ae1bd5c8abfcd55" kindref="member">OtpVFSUtilListInsert</ref>(&amp;OtpVFSCtx.freeIdHead,<sp/>(<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*)idList);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><ref refid="otp__vfs__api_8h_1a0ecfaab463b9ab7e11c11fe7e849b7e1" kindref="member">OtpVFSCoreInitialize</ref>();</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>isFilterValid(<ref refid="struct___otps_filter" kindref="compound">OtpsFilter</ref>*<sp/>filter,<sp/>uint8_t<sp/>filterId)</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>uint8_t*<sp/>timeStamp1;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>uint8_t*<sp/>timeStamp2;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>uint32_t<sp/>size1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>uint32_t<sp/>size2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(filter-&gt;opCode[filterId])</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_NO_FILTER:</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_NAME_START_WITH:</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_NAME_END_WITH:</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_NAME_CONTAINS:</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_NAME_IS_EXACTLY:</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_OBJECT_TYPE:</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_CREATED_BETWEEN:</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_MODIFIED_BETWEEN:</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeStamp1<sp/>=<sp/>&amp;filter-&gt;pCond[filterId][0];</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeStamp2<sp/>=<sp/>&amp;filter-&gt;pCond[filterId][OTP_VFS_TIMESTAMP_SIZE];</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSBinaryCompare(timeStamp1,<sp/>timeStamp2,<sp/>OTP_VFS_TIMESTAMP_SIZE)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_CURRENT_SIZE_BETWEEN:</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_ALLOC_SIZE_BETWEEN:</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;size1,<sp/>&amp;filter-&gt;pCond[filterId][0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;size2,<sp/>&amp;filter-&gt;pCond[filterId][</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t)],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size1<sp/>&gt;<sp/>size2)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_MARKED_OBJ:</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1acd4873e0682b4f0c24a2832f2b441397" kindref="member">OtpVFSCreateRequest</ref>(uint8_t<sp/>cid,<sp/>uint32_t*<sp/>size,<sp/>uint8_t*<sp/>type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTypeLong)</highlight></codeline>
<codeline lineno="674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/>node;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>hdl;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>NULL<sp/>pointer<sp/>errors<sp/>and<sp/>valid<sp/>connection<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>NULL<sp/>||<sp/>type<sp/>==<sp/>NULL<sp/>||<sp/>cid<sp/>&gt;=<sp/>OTP_VFS_MAX_NO)</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>create<sp/>feature<sp/>is<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(OtpVFSCtx.conn[cid].otsFeatures<sp/>&amp;<sp/>OTP_VFS_OACP_CREATE_FEATURE_BIT))</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>size<sp/>exceeds<sp/>maximum<sp/>file<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*size<sp/>&gt;=<sp/>OTP_VFS_MAX_FILE_SIZE)</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INSUFFICIENT_RESOURCES;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>UUID<sp/>is<sp/>blacklisted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="otp__vfs__main_8c_1ac135b23fb42aa76d465331b34be94f0f" kindref="member">isUUIDBlacklisted</ref>(cid,<sp/>type,<sp/>isTypeLong))</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_UNSUPPORTED_TYPE;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>a<sp/>new<sp/>ID<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((node<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)<ref refid="otp__vfs__main_8c_1a629334f1933be24ec428bfe747d38626" kindref="member">OtpVFSUtilListAllocate</ref>(&amp;OtpVFSCtx.freeIdHead))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>the<sp/>node<sp/>into<sp/>the<sp/>filtered<sp/>ID<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1a4546778c7ec1b0709ae1bd5c8abfcd55" kindref="member">OtpVFSUtilListInsert</ref>(&amp;OtpVFSCtx.conn[cid].filteredIdHead,<sp/>(<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*)node);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].olcp.currObj<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*)node;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;node-&gt;metaData,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(node-&gt;metaData));</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;metaData.allocSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*size;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;metaData.currSize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;metaData.property<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>OTP_VFS_PROPERTY_WRITE_BIT;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>UUID<sp/>and<sp/>set<sp/>the<sp/>type<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isTypeLong)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(node-&gt;metaData.type,<sp/>type,<sp/>ATT_128_UUID_LEN);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;metaData.isTypeLong<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(node-&gt;metaData.type,<sp/>type,<sp/>ATT_16_UUID_LEN);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;metaData.isTypeLong<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;node-&gt;metaData.name,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(node-&gt;metaData.name));</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;node-&gt;metaData.name,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(node-&gt;metaData.name));</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;metaData.name_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>hdl<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="otp__vfs__api_8h_1a9ac4fd14b06211592aa8f2ac0b13f0f3" kindref="member">OtpVFSCoreCreate</ref>(*size);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>total<sp/>number<sp/>of<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].olcp.totalNoOfObj++;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>core<sp/>creation<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hdl<sp/>==<sp/>OTP_VFS_CORE_INVALID_HANDLE)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>node<sp/>from<sp/>the<sp/>filtered<sp/>ID<sp/>list<sp/>and<sp/>insert<sp/>it<sp/>back<sp/>into<sp/>the<sp/>free<sp/>ID<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;handler<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(uint16_t)hdl;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].olcp.currObj-&gt;pPrev<sp/>=<sp/>OtpVFSCtx.conn[cid].olcp.currObj;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1adb88f2eb7f49da847b169d8035c4ccdc" kindref="member">OtpVFSUtilListRemove</ref>((<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*)node);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1a4546778c7ec1b0709ae1bd5c8abfcd55" kindref="member">OtpVFSUtilListInsert</ref>(&amp;OtpVFSCtx.freeIdHead,<sp/>(<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*)node);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].olcp.totalNoOfObj--;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INSUFFICIENT_RESOURCES;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a918abe3f0f76d14141f1037d5dacfa26" kindref="member">OtpVFSDeleteRequest</ref>(uint8_t<sp/>cid)</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/><sp/>=<sp/>OTP_VFS_OACP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>delete<sp/>feature<sp/>is<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(OtpVFSCtx.conn[cid].otsFeatures<sp/>&amp;<sp/>OTP_VFS_OACP_DELETE_FEATURE_BIT))</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>current<sp/>object<sp/>is<sp/>valid<sp/>and<sp/>not<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.isCurrObjValid<sp/>!=</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_OLCP_VALID_OBJ)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_OBJECT;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>delete<sp/>property<sp/>is<sp/>set<sp/>for<sp/>the<sp/>current<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.property<sp/>&amp;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_PROPERTY_DELETE_BIT))</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_PROC_NOT_PERMITTED;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>object<sp/>is<sp/>locked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].olcp.isCurrObjLocked)</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OBJECT_LOCKED;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/>pObj<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].olcp.currObj<sp/>=<sp/>OtpVFSCtx.conn[cid].olcp.currObj-&gt;pNext;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.isCurrObjValid<sp/>=</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_OLCP_INVALID_OBJ;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>object<sp/>from<sp/>the<sp/>core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__api_8h_1aa7cfa910c1c66488953b6685a425a523" kindref="member">OtpVFSCoreDelete</ref>(pObj-&gt;handler);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>object<sp/>from<sp/>the<sp/>filtered<sp/>ID<sp/>list<sp/>and<sp/>insert<sp/>it<sp/>back<sp/>into<sp/>the<sp/>free<sp/>ID<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1adb88f2eb7f49da847b169d8035c4ccdc" kindref="member">OtpVFSUtilListRemove</ref>((<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*)pObj);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1a4546778c7ec1b0709ae1bd5c8abfcd55" kindref="member">OtpVFSUtilListInsert</ref>(&amp;OtpVFSCtx.freeIdHead,<sp/>(<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*)pObj);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;pObj-&gt;metaData,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct___otp_v_f_s_meta_data" kindref="compound">OtpVFSMetaData</ref>));</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].olcp.totalNoOfObj--;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a38af7b09a8eb3e23af3f49698077b168" kindref="member">OtpVFSCalcChecksumRequest</ref>(uint8_t<sp/>cid,<sp/>uint32_t*<sp/>offset,<sp/>uint32_t*<sp/>length)</highlight></codeline>
<codeline lineno="817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>==<sp/>NULL<sp/>||<sp/>length<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>CRC<sp/>calculation<sp/>feature<sp/>is<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(OtpVFSCtx.conn[cid].otsFeatures<sp/>&amp;<sp/>OTP_VFS_OTP_OACP_CALC_CHECKSUM_FEATURE_BIT))</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>current<sp/>object<sp/>is<sp/>valid<sp/>and<sp/>not<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].olcp.currObj<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.isCurrObjValid<sp/>!=</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_OLCP_VALID_OBJ)</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_OBJECT;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>specified<sp/>data<sp/>range<sp/>is<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>object&apos;s<sp/>current<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*length<sp/>+<sp/>*offset)<sp/>&gt;<sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.currSize)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>object<sp/>is<sp/>locked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].olcp.isCurrObjLocked)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OBJECT_LOCKED;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>and<sp/>store<sp/>the<sp/>CRC<sp/>checksum<sp/>for<sp/>the<sp/>specified<sp/>data<sp/>range<sp/>within<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.checksum<sp/>=</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSGetCheckSum((uint8_t<sp/>*)&amp;((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;id,<sp/>cid,<sp/>*offset,<sp/>*length);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>CRC<sp/>calculation<sp/>was<sp/>successful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.checksum<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a759fa11017c28b8246faf4d82e7dd388" kindref="member">OtpVFSCalcChecksumRequestUi</ref>(</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>cid,<sp/>uint8_t<sp/>objId[6],<sp/>uint32_t*<sp/>length,<sp/>uint32_t*<sp/>offset)</highlight></codeline>
<codeline lineno="873"><highlight class="normal">{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>iObj<sp/><sp/>=<sp/>pHead;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/><sp/><sp/>pObj<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/>idBuf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/>=<sp/>OTP_VFS_OACP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objId<sp/>==<sp/>NULL<sp/>||<sp/>length<sp/>==<sp/>NULL<sp/>||<sp/>offset<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>object<sp/>ID<sp/>to<sp/>a<sp/>64-bit<sp/>buffer<sp/>for<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>memcpy(&amp;idBuf,<sp/>objId,<sp/>OTP_VFS_OBJECT_ID_LEN);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>object<sp/>with<sp/>the<sp/>specified<sp/>object<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)iObj)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>idBuf)</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iObj<sp/>=<sp/>iObj-&gt;pNext;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)iObj;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iObj<sp/>!=<sp/>pHead);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>selected<sp/>object<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObj<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>CRC<sp/>calculation<sp/>feature<sp/>is<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(OtpVFSCtx.conn[cid].otsFeatures<sp/>&amp;<sp/>OTP_VFS_OTP_OACP_CALC_CHECKSUM_FEATURE_BIT))</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>current<sp/>object<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObj-&gt;metaData.isCurrObjValid<sp/>!=<sp/>OTP_VFS_OLCP_VALID_OBJ)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_OBJECT;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>specified<sp/>data<sp/>range<sp/>is<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>object&apos;s<sp/>current<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*length<sp/>+<sp/>*offset)<sp/>&gt;<sp/>(pObj-&gt;metaData.currSize))</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>and<sp/>store<sp/>the<sp/>CRC<sp/>checksum<sp/>for<sp/>the<sp/>specified<sp/>data<sp/>range<sp/>within<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj-&gt;metaData.checksum<sp/>=</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSGetCheckSum((uint8_t<sp/>*)&amp;pObj-&gt;id,<sp/>cid,<sp/>*offset,<sp/>*length);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>CRC<sp/>calculation<sp/>was<sp/>successful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObj-&gt;metaData.checksum<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1ab9d8c38f40ec3afe87f141e1179cc585" kindref="member">OtpVFSExecuteRequest</ref>(uint8_t<sp/>cid)</highlight></codeline>
<codeline lineno="945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>read<sp/>feature<sp/>is<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(OtpVFSCtx.conn[cid].otsFeatures<sp/>&amp;<sp/>OTP_VFS_OACP_EXECUTE_FEATURE_BIT))</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>current<sp/>object<sp/>is<sp/>valid<sp/>and<sp/>not<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].olcp.currObj<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.isCurrObjValid<sp/>!=</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_OLCP_VALID_OBJ)</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_OBJECT;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>read<sp/>operation<sp/>is<sp/>permitted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.property<sp/>&amp;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_PROPERTY_EXECUTE_BIT))</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_PROC_NOT_PERMITTED;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a75002cb6a2e9189eb8d4c9c037925cda" kindref="member">OtpVFSReadRequest</ref>(uint8_t<sp/>cid,<sp/>uint32_t*<sp/>offset,<sp/>uint32_t*<sp/>length)</highlight></codeline>
<codeline lineno="986"><highlight class="normal">{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/>=<sp/>OTP_VFS_OACP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>==<sp/>NULL<sp/>||<sp/>length<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>read<sp/>feature<sp/>is<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(OtpVFSCtx.conn[cid].otsFeatures<sp/>&amp;<sp/>OTP_VFS_OACP_READ_FEATURE_BIT))</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>current<sp/>object<sp/>is<sp/>valid<sp/>and<sp/>not<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((OtpVFSCtx.conn[cid].olcp.currObj<sp/>==<sp/>NULL)<sp/>||</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.isCurrObjValid<sp/>!=</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_OLCP_VALID_OBJ)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_OBJECT;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>read<sp/>operation<sp/>is<sp/>permitted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.property<sp/>&amp;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_PROPERTY_READ_BIT))</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_PROC_NOT_PERMITTED;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>an<sp/>Object<sp/>Transfer<sp/>Channel<sp/>is<sp/>available<sp/>for<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!OtpVFSCtx.conn[cid].isChannelAvailable)</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_CHANNEL_NOT_AVAILABLE;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>specified<sp/>offset<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*offset<sp/>&gt;<sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.currSize)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>specified<sp/>offset<sp/>and<sp/>length<sp/>are<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>object&apos;s<sp/>current<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*offset<sp/>+<sp/>*length)<sp/>&gt;<sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.currSize)</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>value<sp/>of<sp/>the<sp/>Length<sp/>parameter<sp/>exceeds<sp/>the<sp/>number<sp/>of<sp/>octets<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>Server<sp/>has<sp/>the<sp/>capacity<sp/>to<sp/>read<sp/>from<sp/>the<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*length<sp/>&gt;<sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.currSize)</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INSUFFICIENT_RESOURCES;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>object<sp/>is<sp/>locked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].olcp.isCurrObjLocked)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OBJECT_LOCKED;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>transfer<sp/>in<sp/>progress</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pHead<sp/>==<sp/>OtpVFSCtx.conn[cid].olcp.currObj)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>attributes<sp/>for<sp/>the<sp/>read<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].oacp.attLength<sp/>=<sp/>*length;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].oacp.attOffset<sp/>=<sp/>*offset;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].oacp.currOpSize<sp/>=<sp/>*offset;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>OTP_VFS_OACP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a5f2972360606b6f788aacd047b3540a1" kindref="member">OtpVFSReadData</ref>(uint8_t<sp/>cid,<sp/>uint8_t*<sp/>pBuff)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/>pObj;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>len<sp/><sp/><sp/><sp/>=<sp/>OTP_VFS_CORE_INVALID_HANDLE;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>reqLen<sp/>=<sp/>OtpVFSCtx.conn[cid].oacp.attLength;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>offset<sp/>=<sp/>OtpVFSCtx.conn[cid].oacp.attOffset;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/>pObj<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/>if<sp/>(pBuff<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>the<sp/>read<sp/>operation<sp/>on<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="otp__vfs__api_8h_1af8ea8e25c8f7a0058549a25ccb70e327" kindref="member">OtpVFSCoreRead</ref>(pObj-&gt;handler,<sp/>offset,<sp/>pBuff,<sp/>reqLen);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>read<sp/>operation<sp/>is<sp/>successful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>!=<sp/>OTP_VFS_CORE_INVALID_HANDLE)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a394aafc06c84aa1234a2b1b14b3b6408" kindref="member">OtpVFSReadDataUi</ref>(</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>cid,<sp/>uint8_t<sp/>objId[6],<sp/>uint32_t<sp/>length,<sp/>uint32_t<sp/>offset,<sp/>uint8_t*<sp/>pBuff)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>iObj<sp/><sp/>=<sp/>pHead;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/><sp/><sp/>pObj<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/>idBuf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/>=<sp/>OTP_VFS_OACP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objId<sp/>==<sp/>NULL<sp/>||<sp/>pBuff<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>object<sp/>ID<sp/>to<sp/>a<sp/>64-bit<sp/>buffer<sp/>for<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>memcpy(&amp;idBuf,<sp/>objId,<sp/>OTP_VFS_OBJECT_ID_LEN);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>object<sp/>with<sp/>the<sp/>specified<sp/>object<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)iObj)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>idBuf)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iObj<sp/>=<sp/>iObj-&gt;pNext;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)iObj;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iObj<sp/>!=<sp/>pHead);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>selected<sp/>object<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObj<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>read<sp/>property<sp/>is<sp/>set<sp/>for<sp/>the<sp/>current<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pObj-&gt;metaData.property<sp/>&amp;<sp/>OTP_VFS_PROPERTY_READ_BIT))</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_PROC_NOT_PERMITTED;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>object<sp/>is<sp/>locked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].olcp.isCurrObjLocked)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OBJECT_LOCKED;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>len<sp/>=<sp/><ref refid="otp__vfs__api_8h_1af8ea8e25c8f7a0058549a25ccb70e327" kindref="member">OtpVFSCoreRead</ref>(pObj-&gt;handler,<sp/>offset,<sp/>pBuff,<sp/>length);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>read<sp/>operation<sp/>is<sp/>successful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>!=<sp/>OTP_VFS_CORE_INVALID_HANDLE)</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a77afe7345ce0d1ae2b8538ca4c372642" kindref="member">OtpVFSWriteData</ref>(uint8_t<sp/>cid,<sp/>uint32_t<sp/>length,<sp/>uint32_t<sp/>offset,<sp/>uint8_t*<sp/>pBuff)</highlight></codeline>
<codeline lineno="1177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBuff<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/>pObj<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><ref refid="otp__vfs__core_8c_1a41a00167903597ddc6afdb72b8b1369c" kindref="member">OtpVFSCoreWrite</ref>(pObj-&gt;handler,<sp/>offset,<sp/>pBuff,<sp/>length);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a6eadec1e33ae7721da5aec5f9e929d19" kindref="member">OtpVFSWriteDataUi</ref>(</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>cid,<sp/>uint8_t<sp/>objId[6],<sp/>uint32_t<sp/>length,<sp/>uint32_t<sp/>offset,<sp/>uint8_t*<sp/>pBuff)</highlight></codeline>
<codeline lineno="1202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>len;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>iObj<sp/><sp/>=<sp/>pHead;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/><sp/><sp/>pObj<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/>idBuf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objId<sp/>==<sp/>NULL<sp/>||<sp/>pBuff<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>object<sp/>ID<sp/>to<sp/>a<sp/>64-bit<sp/>buffer<sp/>for<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/>memcpy(&amp;idBuf,<sp/>objId,<sp/>OTP_VFS_OBJECT_ID_LEN);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>object<sp/>with<sp/>the<sp/>specified<sp/>object<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)iObj)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>idBuf)</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iObj<sp/>=<sp/>iObj-&gt;pNext;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)iObj;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iObj<sp/>!=<sp/>pHead);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>selected<sp/>object<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObj<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>delete<sp/>property<sp/>is<sp/>set<sp/>for<sp/>the<sp/>current<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pObj-&gt;metaData.property<sp/>&amp;<sp/>OTP_VFS_PROPERTY_WRITE_BIT))</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_PROC_NOT_PERMITTED;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>object<sp/>is<sp/>locked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].olcp.isCurrObjLocked)</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OBJECT_LOCKED;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="otp__vfs__core_8c_1a41a00167903597ddc6afdb72b8b1369c" kindref="member">OtpVFSCoreWrite</ref>(pObj-&gt;handler,<sp/>offset,<sp/>pBuff,<sp/>length);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>a<sp/>failed<sp/>write<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>OTP_VFS_CORE_INVALID_HANDLE)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;metaData.currSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>current<sp/>size<sp/>of<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj-&gt;metaData.currSize<sp/>=<sp/>len<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1ad410da8d9fa34bb0e814b387b0540325" kindref="member">OtpVFSWriteRequest</ref>(uint8_t<sp/>cid,<sp/>uint32_t*<sp/>offset,<sp/>uint32_t*<sp/>length,<sp/>uint8_t<sp/>mode)</highlight></codeline>
<codeline lineno="1289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>filtered<sp/>ID<sp/>list<sp/>head<sp/>for<sp/>the<sp/>given<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>error<sp/>code<sp/>to<sp/>indicate<sp/>a<sp/>failed<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>write<sp/>feature<sp/>is<sp/>supported<sp/>based<sp/>on<sp/>OTPS<sp/>service<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(OtpVFSCtx.conn[cid].otsFeatures<sp/>&amp;<sp/>OTP_VFS_OACP_WRITE_FEATURE_BIT))</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>object<sp/>in<sp/>the<sp/>OLCP<sp/>is<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.isCurrObjValid<sp/>!=</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_OLCP_VALID_OBJ<sp/>||</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(OtpVFSCtx.conn[cid].olcp.currObj<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_OBJECT;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>write<sp/>operations<sp/>are<sp/>permitted<sp/>on<sp/>the<sp/>current<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.property<sp/>&amp;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_PROPERTY_WRITE_BIT))</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_PROC_NOT_PERMITTED;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>patching<sp/>was<sp/>attempted<sp/>but<sp/>patching<sp/>is<sp/>not<sp/>supported<sp/>by<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!(OtpVFSCtx.conn[cid].otsFeatures<sp/>&amp;<sp/>OTP_VFS_PATCHING_OF_OBJ_FEATURE_BIT)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*offset<sp/>&lt;=<sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.currSize)))</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_PROC_NOT_PERMITTED;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>patching<sp/>was<sp/>attempted<sp/>but<sp/>it<sp/>is<sp/>not<sp/>supported<sp/>by<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.property)<sp/>&amp;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_OBJ_PATCH_PROPERTY)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*offset<sp/>&lt;<sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.currSize))</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_PROC_NOT_PERMITTED;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>truncation<sp/>was<sp/>attempted<sp/>but<sp/>patching<sp/>is<sp/>not<sp/>supported<sp/>by<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(OtpVFSCtx.conn[cid].otsFeatures<sp/>&amp;<sp/>OTP_VFS_TRUNCATION_OF_OBJ_FEATURE_BIT)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mode<sp/>&amp;<sp/>OACP_WRITE_MODE_TRUNCATE_BIT))</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_PROC_NOT_PERMITTED;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>truncation<sp/>was<sp/>attempted<sp/>but<sp/>it<sp/>is<sp/>not<sp/>supported<sp/>by<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.property)<sp/>&amp;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_OBJ_TRUNCATE_PROPERTY)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mode<sp/>&amp;<sp/>OACP_WRITE_MODE_TRUNCATE_BIT))</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_PROC_NOT_PERMITTED;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>an<sp/>Object<sp/>Transfer<sp/>Channel<sp/>is<sp/>available<sp/>for<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!OtpVFSCtx.conn[cid].isChannelAvailable)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_CHANNEL_NOT_AVAILABLE;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>mode<sp/>parameter<sp/>contains<sp/>an<sp/>RFU<sp/>Value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>&amp;<sp/>~OACP_WRITE_MODE_TRUNCATE_BIT)</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>offset<sp/>is<sp/>within<sp/>valid<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*offset<sp/>&gt;<sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.currSize)</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>total<sp/>length<sp/>exceeds<sp/>the<sp/>allocation<sp/>size<sp/>and<sp/>the<sp/>feature<sp/>is<sp/>not<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((*offset<sp/>+<sp/>*length)<sp/>&gt;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.allocSize)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(OtpVFSCtx.conn[cid].otsFeatures<sp/>&amp;<sp/>ATT_OTP_ADD_DATA_TO_OBJ_FEATURE_BIT))</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>length<sp/>exceeds<sp/>server&apos;s<sp/>capacity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*length<sp/>+<sp/>*offset)<sp/>&gt;<sp/>OTP_VFS_MAX_FILE_SIZE)</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_INSUFFICIENT_RESOURCES;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>object<sp/>is<sp/>locked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].olcp.isCurrObjLocked)</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OBJECT_LOCKED;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>appending<sp/>is<sp/>attempted<sp/>it<sp/>is<sp/>not<sp/>supported<sp/>by<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.property)<sp/>&amp;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_OBJ_APPEND_PROPERTY)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((*offset<sp/>+<sp/>*length)<sp/>&gt;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.allocSize))</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_PROC_NOT_PERMITTED;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>there<sp/>is<sp/>a<sp/>valid<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pHead<sp/>==<sp/>OtpVFSCtx.conn[cid].olcp.currObj)</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>all<sp/>conditions<sp/>are<sp/>met,<sp/>set<sp/>the<sp/>operation<sp/>parameters<sp/>and<sp/>initiate<sp/>the<sp/>write<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].oacp.attLength<sp/>=<sp/>*length;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].oacp.attOffset<sp/>=<sp/>*offset;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].oacp.mode<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].oacp.currOpSize<sp/>=<sp/>*offset;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>OTP_VFS_OACP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mode<sp/>&amp;<sp/>OACP_WRITE_MODE_TRUNCATE_BIT)<sp/>&amp;&amp;<sp/>((((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.allocSize)<sp/>&gt;<sp/>(*offset<sp/>+<sp/>*length)))</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.allocSize<sp/>=<sp/>*offset<sp/>+<sp/>*length;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mode<sp/>&amp;<sp/>OACP_WRITE_MODE_TRUNCATE_BIT)<sp/>&amp;&amp;<sp/>((((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.currSize)<sp/>&gt;<sp/>(*offset<sp/>+<sp/>*length)))</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.currSize<sp/>=<sp/>*offset<sp/>+<sp/>*length;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.allocSize)<sp/>&lt;<sp/>(*offset<sp/>+<sp/>*length))</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.allocSize<sp/>=<sp/>*offset<sp/>+<sp/>*length;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.currSize)<sp/>&lt;<sp/>(*offset<sp/>+<sp/>*length))</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.currSize<sp/>=<sp/>*offset<sp/>+<sp/>*length;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>appropriate<sp/>error<sp/>code<sp/>or<sp/>success<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a2d097728ac1c476f75b6e5026c0d1bdf" kindref="member">OtpVFSAbortRequest</ref>(uint8_t<sp/>cid)</highlight></codeline>
<codeline lineno="1430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>error<sp/>code<sp/>to<sp/>indicate<sp/>a<sp/>failed<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>abort<sp/>feature<sp/>is<sp/>supported<sp/>based<sp/>on<sp/>OTPS<sp/>service<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(OtpVFSCtx.conn[cid].otsFeatures<sp/>&amp;<sp/>OTP_VFS_OACP_ABORT_FEATURE_BIT))</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>an<sp/>operation<sp/>is<sp/>in<sp/>progress<sp/>and<sp/>it&apos;s<sp/>a<sp/>read<sp/>operation<sp/>that<sp/>can<sp/>be<sp/>aborted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].oacp.op<sp/>!=<sp/>OTP_VFS_OACP_OPERATION_READ)</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1ac8693c65199d3046dd1850f7a42126f3" kindref="member">OtpVFSL2CWrite</ref>(uint8_t<sp/>cid,<sp/>uint32_t<sp/>length,<sp/>uint8_t*<sp/>pBuff,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>isOperationFinished)</highlight></codeline>
<codeline lineno="1469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>error<sp/>code<sp/>to<sp/>indicate<sp/>a<sp/>failed<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/>pObj;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>the<sp/>connection<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/>pObj<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>the<sp/>core<sp/>write<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/><ref refid="otp__vfs__core_8c_1a41a00167903597ddc6afdb72b8b1369c" kindref="member">OtpVFSCoreWrite</ref>(pObj-&gt;handler,<sp/>OtpVFSCtx.conn[cid].oacp.currOpSize,<sp/>pBuff,<sp/>length);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>a<sp/>failed<sp/>write<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>OTP_VFS_CORE_INVALID_HANDLE)</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj-&gt;metaData.currSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>current<sp/>size<sp/>of<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/>OtpVFSCtx.conn[cid].oacp.currOpSize<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>write<sp/>operation<sp/>is<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].oacp.currOpSize<sp/>==<sp/>(OtpVFSCtx.conn[cid].oacp.attLength<sp/>+<sp/>OtpVFSCtx.conn[cid].oacp.attOffset))</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/>*isOperationFinished<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].isChannelAvailable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((OtpVFSCtx.conn[cid].oacp.mode<sp/>&amp;<sp/>OACP_WRITE_MODE_TRUNCATE_BIT)<sp/>&amp;&amp;<sp/>(OtpVFSCtx.conn[cid].oacp.currOpSize<sp/>&lt;<sp/>pObj-&gt;metaData.currSize))</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;metaData.currSize<sp/>=<sp/>OtpVFSCtx.conn[cid].oacp.currOpSize;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].oacp.currOpSize<sp/>&gt;<sp/>pObj-&gt;metaData.currSize)</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;metaData.currSize<sp/>=<sp/>OtpVFSCtx.conn[cid].oacp.currOpSize;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>success<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a186dbc7a1520c5e42acbfd4328abacd8" kindref="member">OtpVFSL2CRead</ref>(uint8_t<sp/>cid,<sp/>uint16_t<sp/>l2cCid,<sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>isOperationFinished)</highlight></codeline>
<codeline lineno="1530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>error<sp/>code<sp/>to<sp/>indicate<sp/>a<sp/>failed<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/>uint8_t*<sp/>readBuf;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/>uint32_t<sp/>len<sp/>=<sp/>OtpVFSCtx.conn[cid].oacp.attLength;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((OtpVFSCtx.conn[cid].oacp.attLength<sp/>+<sp/>OtpVFSCtx.conn[cid].oacp.attOffset)<sp/>&lt;<sp/>(OtpVFSCtx.conn[cid].oacp.currOpSize<sp/>+<sp/>OtpVFSCtx.conn[cid].oacp.mtuLen))</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].oacp.mtuLen<sp/>=<sp/>(OtpVFSCtx.conn[cid].oacp.attLength<sp/>+<sp/>OtpVFSCtx.conn[cid].oacp.attOffset)<sp/>-<sp/>OtpVFSCtx.conn[cid].oacp.currOpSize;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory<sp/>for<sp/>the<sp/>read<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((readBuf<sp/>=<sp/>WsfBufAlloc(len))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>data<sp/>from<sp/>the<sp/>current<sp/>object<sp/>to<sp/>a<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="otp__vfs__main_8c_1a5f2972360606b6f788aacd047b3540a1" kindref="member">OtpVFSReadData</ref>(cid,<sp/>readBuf);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>data<sp/>read<sp/>was<sp/>successful,<sp/>perform<sp/>an<sp/>L2C<sp/>COC<sp/>Data<sp/>Indication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>==<sp/>OTP_VFS_OACP_ERR_SUCCESS)</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>L2cCocDataReq(l2cCid,<sp/>OtpVFSCtx.conn[cid].oacp.mtuLen,<sp/>readBuf);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].oacp.currOpSize<sp/>+=<sp/>OtpVFSCtx.conn[cid].oacp.mtuLen;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].oacp.currOpSize<sp/>&gt;=<sp/>OtpVFSCtx.conn[cid].oacp.attLength)</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*isOperationFinished<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].oacp.op<sp/>=<sp/>OTP_VFS_OACP_OPERATION_READ;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_ERR0(</highlight><highlight class="stringliteral">&quot;OtpVFSReadData<sp/>Failed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>allocated<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>WsfBufFree(readBuf);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/>APP_TRACE_ERR1(</highlight><highlight class="stringliteral">&quot;Memory<sp/>Allocation<sp/>for<sp/>L2CAP<sp/>Read<sp/>Operation<sp/>Failed!\nlen:0x%02x&quot;</highlight><highlight class="normal">,<sp/>len);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>a<sp/>failed<sp/>read<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>OTP_VFS_CORE_INVALID_HANDLE)</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>success<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OTP_VFS_OACP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a125bc77e0bfb07587aa964d233db9bb9" kindref="member">OtpVFSGetAttribute</ref>(uint8_t<sp/>cid,<sp/>uint8_t<sp/>attrType,<sp/>uint8_t*<sp/>pAttribute,<sp/>uint16_t*<sp/>pLen)</highlight></codeline>
<codeline lineno="1593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>object<sp/>in<sp/>the<sp/>OLCP<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>an<sp/>error<sp/>code<sp/>when<sp/>the<sp/>current<sp/>object<sp/>is<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>object<sp/>in<sp/>the<sp/>OLCP<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.isCurrObjValid<sp/>!=</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_OLCP_VALID_OBJ)</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>an<sp/>error<sp/>code<sp/>when<sp/>the<sp/>current<sp/>object<sp/>is<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/>pObj<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>specified<sp/>attribute<sp/>based<sp/>on<sp/>the<sp/>attrType<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/>switch<sp/>(attrType)</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_FULL_SIZE:</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;metaData.sizeAttr<sp/>=</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)pObj-&gt;metaData.allocSize<sp/>&lt;&lt;<sp/>32<sp/>|<sp/>pObj-&gt;metaData.currSize;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(pAttribute,<sp/>&amp;pObj-&gt;metaData.sizeAttr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint64_t));</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pLen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint64_t);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_ALLOCATE_SIZE:</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(pAttribute,<sp/>&amp;pObj-&gt;metaData.allocSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pLen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_CURRENT_SIZE:</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(pAttribute,<sp/>&amp;pObj-&gt;metaData.currSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pLen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_TYPE:</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pObj-&gt;metaData.isTypeLong)</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(pAttribute,<sp/>pObj-&gt;metaData.type,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t));</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pLen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(pAttribute,<sp/>pObj-&gt;metaData.type,<sp/>ATT_128_UUID_LEN);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pLen<sp/>=<sp/>ATT_128_UUID_LEN;</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_PROPERTY:</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(pAttribute,<sp/>&amp;pObj-&gt;metaData.property,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pLen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_CREATE_TIME:</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(pAttribute,<sp/>pObj-&gt;metaData.createTime,<sp/>OTP_VFS_TIMESTAMP_SIZE);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pLen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(OTP_VFS_TIMESTAMP_SIZE);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_MODIFY_TIME:</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(pAttribute,<sp/>pObj-&gt;metaData.modifyTime,<sp/>OTP_VFS_TIMESTAMP_SIZE);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pLen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(OTP_VFS_TIMESTAMP_SIZE);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_SERVER_FEATURES:</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(pAttribute,<sp/>&amp;(OtpVFSCtx.conn[cid].otsFeatures),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint64_t));</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pLen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint64_t);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_ID:</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(pAttribute,<sp/>&amp;pObj-&gt;id,<sp/>OTP_VFS_OBJECT_ID_LEN);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pLen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>OTP_VFS_OBJECT_ID_LEN;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_NAME:</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(pAttribute,<sp/>pObj-&gt;metaData.name,<sp/>pObj-&gt;metaData.name_len);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*pLen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.name_len;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>an<sp/>error<sp/>code<sp/>when<sp/>the<sp/>specified<sp/>attribute<sp/>does<sp/>not<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>attribute<sp/>pointer<sp/>is<sp/>still<sp/>NULL<sp/>(attribute<sp/>not<sp/>found)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pAttribute<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>an<sp/>error<sp/>code<sp/>indicating<sp/>that<sp/>the<sp/>attribute<sp/>does<sp/>not<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>success<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a04a0c24393146657609cb6c3035f1892" kindref="member">OtpVFSSetAttribute</ref>(uint8_t<sp/>cid,<sp/>uint8_t<sp/>attrType,<sp/>uint8_t*<sp/>attr)</highlight></codeline>
<codeline lineno="1693"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/>val<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/>uint32_t<sp/>propBuf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>object<sp/>in<sp/>the<sp/>OLCP<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>an<sp/>error<sp/>code<sp/>when<sp/>the<sp/>current<sp/>object<sp/>is<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>object<sp/>in<sp/>the<sp/>OLCP<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.isCurrObjValid<sp/>!=</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_OLCP_VALID_OBJ)</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>specified<sp/>attribute<sp/>based<sp/>on<sp/>the<sp/>attrType<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(attrType)</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_ALLOCATE_SIZE:</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.allocSize),<sp/>attr,</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_CURRENT_SIZE:</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.currSize),<sp/>attr,</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_TYPE:</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.isTypeLong)</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.type),<sp/>attr,</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t));</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.type),<sp/>attr,</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ATT_128_UUID_LEN);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_PROPERTY:</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;propBuf,<sp/>attr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arePropertiesValid(propBuf))</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.property),<sp/>attr,</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_CREATE_TIME:</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.createTime),<sp/>attr,</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_TIMESTAMP_SIZE);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_MODIFY_TIME:</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.modifyTime),<sp/>attr,</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_TIMESTAMP_SIZE);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a0470c98cb9dc63db7988a8f827241f56" kindref="member">OtpVFSSetAttributeUi</ref>(uint8_t<sp/>cid,<sp/>uint8_t<sp/>objId[OTP_VFS_OBJECT_ID_LEN],<sp/>uint8_t<sp/>attType,</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>att,<sp/>uint8_t<sp/>attLen)</highlight></codeline>
<codeline lineno="1788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/><sp/><sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>iObj<sp/><sp/><sp/><sp/>=<sp/>pHead;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/><sp/><sp/>pObj<sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/>idBuf<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>propBuf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objId<sp/>==<sp/>NULL<sp/>||<sp/>att<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>object<sp/>ID<sp/>to<sp/>a<sp/>64-bit<sp/>buffer<sp/>for<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/>memcpy(&amp;idBuf,<sp/>objId,<sp/>OTP_VFS_OBJECT_ID_LEN);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>object<sp/>with<sp/>the<sp/>specified<sp/>object<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)iObj)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>idBuf)</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iObj<sp/>=<sp/>iObj-&gt;pNext;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)iObj;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iObj<sp/>!=<sp/>pHead);</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>selected<sp/>object<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObj<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>specified<sp/>attribute<sp/>based<sp/>on<sp/>the<sp/>attrType<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(attType)</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_NAME:</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>an<sp/>invalid<sp/>length<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attLen<sp/>&gt;<sp/>OTP_VFS_MAX_FILE_NAME)</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>name<sp/>already<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSFindObjectByName(cid,<sp/>att,<sp/>attLen))</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1gafcb3da37567c8584d71b19bd552f541f" kindref="member">ATT_OTP_ERR_NAME_ALREADY_EXISTS</ref>;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>object&apos;s<sp/>name<sp/>and<sp/>name<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;pObj-&gt;metaData.name,<sp/>att,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t)<sp/>*<sp/>attLen);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;metaData.name_len<sp/>=<sp/>attLen;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_PROPERTY:</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>property<sp/>data<sp/>to<sp/>a<sp/>32-bit<sp/>buffer<sp/>for<sp/>validation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;propBuf,<sp/>att,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>attribute<sp/>length<sp/>is<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attLen<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t))</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>properties<sp/>are<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arePropertiesValid(propBuf))</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>object&apos;s<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;pObj-&gt;metaData.property,<sp/>att,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_CREATE_TIME:</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>attribute<sp/>length<sp/>is<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attLen<sp/>!=<sp/>OTP_VFS_TIMESTAMP_SIZE)</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>object&apos;s<sp/>create<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;pObj-&gt;metaData.createTime,<sp/>att,<sp/>OTP_VFS_TIMESTAMP_SIZE);</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_ATTRIBUTE_MODIFY_TIME:</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>attribute<sp/>length<sp/>is<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attLen<sp/>!=<sp/>OTP_VFS_TIMESTAMP_SIZE)</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>object&apos;s<sp/>modify<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;pObj-&gt;metaData.modifyTime,<sp/>att,<sp/>OTP_VFS_TIMESTAMP_SIZE);</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1aaae139756470c5ab0048656be0ea3ebc" kindref="member">OtpVFSDeleteObjectUi</ref>(uint8_t<sp/>cid,<sp/>uint8_t<sp/>objId[OTP_VFS_OBJECT_ID_LEN])</highlight></codeline>
<codeline lineno="1915"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>iObj<sp/><sp/>=<sp/>pHead;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/><sp/><sp/>pObj<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/>idBuf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>object<sp/>ID<sp/>to<sp/>a<sp/>64-bit<sp/>buffer<sp/>for<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/>memcpy(&amp;idBuf,<sp/>objId,<sp/>OTP_VFS_OBJECT_ID_LEN);</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>object<sp/>with<sp/>the<sp/>specified<sp/>object<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)iObj)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>idBuf)</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iObj<sp/>=<sp/>iObj-&gt;pNext;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)iObj;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iObj<sp/>!=<sp/>pHead);</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>selected<sp/>object<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObj<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>delete<sp/>property<sp/>is<sp/>set<sp/>for<sp/>the<sp/>current<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pObj-&gt;metaData.property<sp/>&amp;<sp/>OTP_VFS_PROPERTY_DELETE_BIT))</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_PROC_NOT_PERMITTED;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>object<sp/>is<sp/>locked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].olcp.isCurrObjLocked)</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_OBJECT_LOCKED;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj-&gt;metaData.isCurrObjValid<sp/>=<sp/>OTP_VFS_OLCP_INVALID_OBJ;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>object<sp/>from<sp/>the<sp/>core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__api_8h_1aa7cfa910c1c66488953b6685a425a523" kindref="member">OtpVFSCoreDelete</ref>(pObj-&gt;handler);</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>object<sp/>from<sp/>the<sp/>filtered<sp/>ID<sp/>list<sp/>and<sp/>insert<sp/>it<sp/>back<sp/>into<sp/>the<sp/>free<sp/>ID<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1adb88f2eb7f49da847b169d8035c4ccdc" kindref="member">OtpVFSUtilListRemove</ref>((<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*)pObj);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1a4546778c7ec1b0709ae1bd5c8abfcd55" kindref="member">OtpVFSUtilListInsert</ref>(&amp;OtpVFSCtx.freeIdHead,<sp/>(<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*)pObj);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;pObj-&gt;metaData,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct___otp_v_f_s_meta_data" kindref="compound">OtpVFSMetaData</ref>));</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].olcp.totalNoOfObj--;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>OTP_VFS_OACP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1add88c8499d8053d75f47f157026919d7" kindref="member">OtpVFSSetName</ref>(uint8_t<sp/>cid,<sp/>uint8_t*<sp/>pValue,<sp/>uint8_t<sp/>len)</highlight></codeline>
<codeline lineno="1988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/>uint8_t<sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>null<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>selected<sp/>object<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.isCurrObjValid<sp/>!=</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_OLCP_VALID_OBJ)</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>an<sp/>invalid<sp/>length<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>OTP_VFS_MAX_FILE_NAME)</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>name<sp/>already<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSFindObjectByName(cid,<sp/>pValue,<sp/>len))</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1gafcb3da37567c8584d71b19bd552f541f" kindref="member">ATT_OTP_ERR_NAME_ALREADY_EXISTS</ref>;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>object&apos;s<sp/>name<sp/>and<sp/>name<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.name),<sp/>pValue,</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t)<sp/>*<sp/>len);</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.name_len<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a8863319d5072581b63e83ac1e7588fdf" kindref="member">OtpVFSGetName</ref>(uint8_t<sp/>cid,<sp/>uint8_t*<sp/>pValue,<sp/>uint16_t*<sp/>pLen)</highlight></codeline>
<codeline lineno="2038"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/>uint8_t<sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>null<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>selected<sp/>object<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.isCurrObjValid<sp/>!=</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_OLCP_VALID_OBJ)</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>object&apos;s<sp/>name<sp/>and<sp/>name<sp/>length<sp/>to<sp/>the<sp/>provided<sp/>buffer<sp/>and<sp/>length<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(pValue,<sp/>&amp;(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.name),</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t)<sp/>*<sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.name_len);</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/>*pLen<sp/>=<sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.name_len;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a635a0be286c3ded69b24e6858bd6ca34" kindref="member">OtpVFSSetFilter</ref>(uint8_t<sp/>cid,<sp/>uint8_t<sp/>filterId,<sp/>uint8_t*<sp/>pValue,<sp/>uint16_t<sp/>len)</highlight></codeline>
<codeline lineno="2081"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><ref refid="struct___otps_filter" kindref="compound">OtpsFilter</ref>*<sp/>pFilters<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].listFilters;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>null<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pValue<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>length<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len-1)<sp/>&gt;<sp/>OTP_VFS_MAX_FILE_NAME)</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>filter<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filterId<sp/>&gt;<sp/>3<sp/>||<sp/>filterId<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/>filterId<sp/>-=<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>filter<sp/>ID<sp/>to<sp/>array<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>filter<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;pFilters-&gt;opCode[filterId],<sp/>pValue,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t));</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>filter<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;pFilters-&gt;pCond[filterId],<sp/>(pValue<sp/>+<sp/>1),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t)<sp/>*<sp/>(len-1));</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/>pFilters-&gt;pCondLen[filterId]<sp/>=<sp/>len<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>filter<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isFilterValid(pFilters,<sp/>filterId))</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>filter<sp/>parameters<sp/>if<sp/>the<sp/>filter<sp/>is<sp/>not<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pFilters-&gt;opCode[filterId]<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pFilters-&gt;pCondLen[filterId]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;pFilters-&gt;pCond[filterId],<sp/>0x00,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t)<sp/>*<sp/>OTP_VFS_MAX_FILE_NAME);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="2123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1af550a9a616ace5b37f062da4baa4d552" kindref="member">OtpVFSGetFilter</ref>(uint8_t<sp/>cid,<sp/>uint8_t<sp/>filterId,<sp/>uint8_t*<sp/>pValue,<sp/>uint16_t*<sp/>pLen)</highlight></codeline>
<codeline lineno="2145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><ref refid="struct___otps_filter" kindref="compound">OtpsFilter</ref>*<sp/>pFilters<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].listFilters;</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>&gt;<sp/>OTP_VFS_MAX_NO)</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>null<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pValue<sp/>==<sp/>NULL<sp/>||<sp/>pLen<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>filter<sp/>ID<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filterId<sp/>&gt;<sp/>3<sp/>||<sp/>filterId<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/>filterId<sp/>-=<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>filter<sp/>ID<sp/>to<sp/>array<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>filter<sp/>opcode<sp/>and<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(pValue,<sp/>&amp;pFilters-&gt;opCode[filterId],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t));</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((pValue<sp/>+<sp/>1),<sp/>pFilters-&gt;pCond[filterId],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t)<sp/>*<sp/>pFilters-&gt;pCondLen[filterId]);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/>*pLen<sp/>=<sp/>(uint16_t)pFilters-&gt;pCondLen[filterId]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal">uint16_t<sp/><ref refid="otp__vfs__main_8c_1a1cdbaa5227971dfe3250c20a220bb5ab" kindref="member">OtpVFSGetTotalObjectNumber</ref>(uint8_t<sp/>cid)</highlight></codeline>
<codeline lineno="2189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cid<sp/>&gt;=<sp/>OTP_VFS_MAX_NO)</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].olcp.filteredNoOfObj);</highlight></codeline>
<codeline lineno="2195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a10c79523f124d46e24efa1692b428682" kindref="member">OtpVFSOlcpOpObject</ref>(uint8_t<sp/>cid,<sp/>uint8_t*<sp/>pValue,<sp/>uint8_t*<sp/>operationResponse)</highlight></codeline>
<codeline lineno="2213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pValue<sp/>==<sp/>NULL<sp/>||<sp/>operationResponse<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OTP_VFS_OLCP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pObj<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/>attResponse<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/>opCode<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pValue[0];</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/>*operationResponse<sp/>=<sp/>OTP_VFS_OLCP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((opCode<sp/>&lt;<sp/>OTP_VFS_OLCP_OPERATION_FIRST)<sp/>||<sp/>(opCode<sp/>&gt;<sp/>OTP_VFS_OLCP_OPERATION_CLEAR_MARK))</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/>OTP_VFS_OLCP_ERR_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/>attResponse<sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>Object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].olcp.totalNoOfObj<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/>OTP_VFS_OLCP_ERR_NO_OBJECT;</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/>attResponse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>OTP_VFS_OLCP_ERR_TOO_MANY_OBJECTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/>attResponse<sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(opCode)</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_OLCP_OPERATION_FIRST:</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pHead-&gt;pNext;</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].olcp.currObj<sp/>=<sp/>pObj;</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>OTP_VFS_OLCP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_OLCP_OPERATION_LAST:</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pHead-&gt;pPrev;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].olcp.currObj<sp/>=<sp/>pObj;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>OTP_VFS_OLCP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_OLCP_OPERATION_PREV:</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>OtpVFSCtx.conn[cid].olcp.currObj-&gt;pPrev;</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObj<sp/>==<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead)</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/>OTP_VFS_OLCP_ERR_OUT_OF_BOUNDS;</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].olcp.currObj<sp/>=<sp/>OtpVFSCtx.conn[cid].olcp.currObj-&gt;pPrev;</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>OTP_VFS_OLCP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_OLCP_OPERATION_NEXT:</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSCtx.conn[cid].olcp.currObj-&gt;pNext<sp/>==<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead)</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/>OTP_VFS_OLCP_ERR_OUT_OF_BOUNDS;</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].olcp.currObj<sp/>=<sp/>OtpVFSCtx.conn[cid].olcp.currObj-&gt;pNext;</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>OTP_VFS_OLCP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_OLCP_OPERATION_GOTO:</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;pValue[1],<sp/>OTP_VFS_OBJECT_ID_LEN);</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>pHead;</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>pObj-&gt;pNext;</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].olcp.currObj<sp/>=<sp/>pObj;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>OTP_VFS_OLCP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pObj<sp/>!=<sp/>pHead);</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*operationResponse<sp/>==<sp/>OTP_VFS_OLCP_ERR_SUCCESS)</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/>OTP_VFS_OLCP_ERR_OBJECT_ID_NOT_FOUND;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_OLCP_OPERATION_ORDER:</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSortOrderValid(pValue[1]))</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1a3da020dfb774fbc5c5a7fcc18b663afa" kindref="member">OtpVFSSortObject</ref>(cid,<sp/>pValue[1]);</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/>OTP_VFS_OLCP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_OLCP_OPERATION_REQ_NUM:</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/>OTP_VFS_OLCP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_OLCP_OPERATION_CLEAR_MARK:</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1ae6b213d6904a68b93c92ea7f8ab58e29" kindref="member">OtpVFSClearAllMarkObject</ref>(cid);</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/>OTP_VFS_OLCP_ERR_SUCCESS;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attResponse<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attResponse;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a63855dd1bf1d88bd8170dd13f3096dd6" kindref="member">OtpVFSOacpOpObject</ref>(uint8_t<sp/>cid,<sp/>uint16_t<sp/>len,<sp/>uint8_t*<sp/>pValue,<sp/>uint8_t*<sp/>operationResponse)</highlight></codeline>
<codeline lineno="2338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pValue<sp/>==<sp/>NULL<sp/>||<sp/>operationResponse<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OTP_VFS_OLCP_ERR_OPERATION_FAILED;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/>uint8_t<sp/>attResponse<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/>uint8_t<sp/>opCode<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pValue[0];</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((opCode<sp/>&lt;<sp/>OTP_VFS_OACP_OPERATION_CREATE)<sp/>||<sp/>(opCode<sp/>&gt;<sp/>OTP_VFS_OACP_OPERATION_ABORT))</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/>OTP_VFS_OACP_ERR_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/>attResponse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(opCode)</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_OACP_OPERATION_CREATE:</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>OACP_CREATE_LEN_UUID16)</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/><ref refid="otp__vfs__main_8c_1acd4873e0682b4f0c24a2832f2b441397" kindref="member">OtpVFSCreateRequest</ref>(cid,<sp/>(uint32_t*)&amp;pValue[1],<sp/>&amp;pValue[5],<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attResponse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>OACP_CREATE_LEN_UUID128)</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/><ref refid="otp__vfs__main_8c_1acd4873e0682b4f0c24a2832f2b441397" kindref="member">OtpVFSCreateRequest</ref>(cid,<sp/>(uint32_t*)&amp;pValue[1],<sp/>&amp;pValue[5],<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attResponse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/>OTP_VFS_OACP_ERR_INVALID_PARAMETER;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attResponse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_OACP_OPERATION_DELETE:</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/><ref refid="otp__vfs__main_8c_1a918abe3f0f76d14141f1037d5dacfa26" kindref="member">OtpVFSDeleteRequest</ref>(cid);</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attResponse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_OACP_OPERATION_CAL_CHECKSUM:</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1a38af7b09a8eb3e23af3f49698077b168" kindref="member">OtpVFSCalcChecksumRequest</ref>(cid,<sp/>(uint32_t*)&amp;pValue[1],<sp/>(uint32_t*)&amp;pValue[5]);</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*operationResponse<sp/>==<sp/>OTP_VFS_OACP_ERR_INVALID_OBJECT)</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attResponse<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attResponse<sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_OACP_OPERATION_EXECUTE:</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/><ref refid="otp__vfs__main_8c_1ab9d8c38f40ec3afe87f141e1179cc585" kindref="member">OtpVFSExecuteRequest</ref>(cid);</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attResponse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_OACP_OPERATION_READ:</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/><ref refid="otp__vfs__main_8c_1a75002cb6a2e9189eb8d4c9c037925cda" kindref="member">OtpVFSReadRequest</ref>(cid,<sp/>(uint32_t*)&amp;pValue[1],<sp/>(uint32_t*)&amp;pValue[5]);</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*operationResponse<sp/>==<sp/>OTP_VFS_OACP_ERR_INVALID_OBJECT)</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attResponse<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attResponse<sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_OACP_OPERATION_WRITE:</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1ad410da8d9fa34bb0e814b387b0540325" kindref="member">OtpVFSWriteRequest</ref>(cid,<sp/>(uint32_t*)&amp;pValue[1],<sp/>(uint32_t*)&amp;pValue[5],<sp/>pValue[9]);</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*operationResponse<sp/>==<sp/>OTP_VFS_OACP_ERR_INVALID_OBJECT)</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attResponse<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga5d96b67d4d19bb439ff5d98ce5909de1" kindref="member">ATT_OTP_ERR_OBJ_NOT_SELECTED</ref>;</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attResponse<sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTP_VFS_OACP_OPERATION_ABORT:</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*operationResponse<sp/>=<sp/><ref refid="otp__vfs__main_8c_1a2d097728ac1c476f75b6e5026c0d1bdf" kindref="member">OtpVFSAbortRequest</ref>(cid);</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attResponse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attResponse<sp/>=<sp/><ref refid="group___o_b_j_e_c_t___t_r_a_n_s_f_e_r___s_e_r_v_i_c_e_1ga7ed951889cff8f47517ef2be284af10b" kindref="member">ATT_OTP_ERR_WRITE_REQ_REJ</ref>;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attResponse;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OtpsVFSUtilityGetObjectRecordData(uint8_t<sp/>cid,<sp/>uint8_t*<sp/>pBuf,<sp/>uint16_t<sp/>offset,</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/>uint64_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="struct___otp_v_f_s_meta_data" kindref="compound">OtpVFSMetaData</ref>*<sp/>pMetaData)</highlight></codeline>
<codeline lineno="2445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/>temp[OTP_VFS_MAX_FILE_NAME<sp/>+<sp/>30]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/>currObjLen<sp/><sp/>=<sp/>OtpsVFSUtilityGetObjectRecordLength(pMetaData);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fieldOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>length<sp/>of<sp/>the<sp/>current<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/>temp[fieldOffset++]<sp/>=<sp/>(uint8_t)(currObjLen<sp/>&amp;<sp/>0x00FF);</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/>temp[fieldOffset++]<sp/>=<sp/>(uint8_t)((currObjLen<sp/>&amp;<sp/>0xFF00)<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>object<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/>memcpy(temp<sp/>+<sp/>fieldOffset,<sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>0x06);</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/>fieldOffset<sp/>+=<sp/>0x06;</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>name<sp/>and<sp/>its<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/>temp[fieldOffset++]<sp/>=<sp/>(uint8_t)pMetaData-&gt;name_len;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/>memcpy(temp<sp/>+<sp/>fieldOffset,<sp/>pMetaData-&gt;name,<sp/>pMetaData-&gt;name_len);</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/>fieldOffset<sp/>+=<sp/>pMetaData-&gt;name_len;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Indicator<sp/>for<sp/>the<sp/>type<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/>temp[fieldOffset++]<sp/>=<sp/>0x02;</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>type<sp/>is<sp/>not<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.isTypeLong)</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/>temp[fieldOffset++]<sp/>=<sp/>(uint8_t)(pMetaData-&gt;type[0]);</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/>temp[fieldOffset++]<sp/>=<sp/>(uint8_t)(pMetaData-&gt;type[1]);</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>long<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(temp<sp/>+<sp/>fieldOffset,<sp/>pMetaData-&gt;type,<sp/>ATT_128_UUID_LEN);</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/>fieldOffset<sp/>+=<sp/>ATT_128_UUID_LEN;</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>current<sp/>size<sp/>of<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/>temp[fieldOffset++]<sp/>=<sp/>(uint8_t)(pMetaData-&gt;currSize<sp/>&amp;<sp/>0x000000FF);</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/>temp[fieldOffset++]<sp/>=<sp/>(uint8_t)((pMetaData-&gt;currSize<sp/>&amp;<sp/>0x0000FF00)<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/>temp[fieldOffset++]<sp/>=<sp/>(uint8_t)((pMetaData-&gt;currSize<sp/>&amp;<sp/>0x00FF0000)<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/>temp[fieldOffset++]<sp/>=<sp/>(uint8_t)((pMetaData-&gt;currSize<sp/>&amp;<sp/>0xFF000000)<sp/>&gt;&gt;<sp/>24);</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>not<sp/>to<sp/>exceed<sp/>the<sp/>specified<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldOffset<sp/>&gt;=<sp/>length)</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/>fieldOffset<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>data<sp/>to<sp/>the<sp/>output<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/>memcpy(pBuf,<sp/>&amp;temp[offset],<sp/>fieldOffset);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2510"><highlight class="normal">uint32_t<sp/><ref refid="otp__vfs__main_8c_1a579946281015aa203caa05a52919a97b" kindref="member">OtpVFSGetFolderRecord</ref>(uint8_t<sp/>cid,<sp/>uint8_t*<sp/>pBuf,<sp/>uint32_t<sp/>offset,<sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="2511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pObj<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>resultLen<sp/><sp/><sp/><sp/>=<sp/>0xFFFFFFFF;</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/>expObjStart<sp/><sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/>expObjEnd<sp/><sp/><sp/><sp/>=<sp/>offset<sp/>+<sp/>length;</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/>currObjStart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/>currObjEnd<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/>copiedNumber<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/>currObjLen<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/><sp/><sp/>pTarget;</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/>pObj<sp/>=<sp/>pHead-&gt;pNext;</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pObj<sp/>!=<sp/>pHead<sp/>&amp;&amp;<sp/>(length<sp/>-<sp/>copiedNumber)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/>pTarget<sp/><sp/><sp/><sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/>currObjLen<sp/>=<sp/>OtpsVFSUtilityGetObjectRecordLength(&amp;pTarget-&gt;metaData);</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/>currObjEnd<sp/>=<sp/>currObjStart<sp/>+<sp/>currObjLen;</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>currObjStart,<sp/>currObjEnd<sp/>shall<sp/>fall<sp/>into<sp/>the<sp/>range<sp/>of<sp/>expObjStart<sp/>expObjend*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2532"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---------------------<sp/><sp/><sp/><sp/><sp/><sp/><sp/>currObjStart<sp/><sp/><sp/><sp/><sp/><sp/>currObjEnd,</highlight></codeline>
<codeline lineno="2533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expObjStart,<sp/><sp/><sp/><sp/><sp/>expObjEnd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------------------</highlight></codeline>
<codeline lineno="2534"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currObjStart<sp/>&gt;<sp/>expObjEnd)</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Already<sp/>go<sp/>to<sp/>the<sp/>last<sp/>case,<sp/>there<sp/>is<sp/>no<sp/>data<sp/>within<sp/>the<sp/>range<sp/>in<sp/>expObjStart<sp/>and</highlight></codeline>
<codeline lineno="2538"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expObjEnd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2541"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currObjStart<sp/><sp/><sp/><sp/><sp/><sp/>currObjEnd,<sp/><sp/><sp/><sp/>---------------------</highlight></codeline>
<codeline lineno="2542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---------------------<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expObjStart,<sp/><sp/><sp/><sp/><sp/>currObjEnd</highlight></codeline>
<codeline lineno="2543"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expObjStart<sp/>&gt;<sp/>currObjEnd)</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>continue<sp/>search<sp/>the<sp/>next<sp/>one<sp/>until<sp/>the<sp/>end<sp/>the<sp/>end<sp/>of<sp/>the<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2549"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currObjStart<sp/><sp/><sp/>XXXXXXXXXXXXXXXXXX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currObjEnd</highlight></codeline>
<codeline lineno="2550"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expObjStart,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expObjEnd</highlight></codeline>
<codeline lineno="2551"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currObjStart<sp/><sp/><sp/>XXXXXXXXXXXXXXXXXX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currObjEnd</highlight></codeline>
<codeline lineno="2552"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expObjStart,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expObjEnd</highlight></codeline>
<codeline lineno="2553"><highlight class="comment"></highlight></codeline>
<codeline lineno="2554"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currObjStart<sp/><sp/><sp/>XXXXXXXXXXXXXXXXXX<sp/><sp/><sp/><sp/>currObjEnd</highlight></codeline>
<codeline lineno="2555"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expObjStart,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expObjEnd</highlight></codeline>
<codeline lineno="2556"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currObjStart<sp/><sp/><sp/>XXXXXXXXXXXXXXXXXX<sp/><sp/>currObjEnd</highlight></codeline>
<codeline lineno="2557"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expObjStart,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expObjEnd</highlight></codeline>
<codeline lineno="2558"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>copyStart;</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>copyEnd;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>copyOffset;</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>copyNumber;</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currObjStart<sp/>&gt;=<sp/>expObjStart)</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyStart<sp/><sp/>=<sp/>currObjStart;</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyStart<sp/><sp/>=<sp/>expObjStart;</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyOffset<sp/>=<sp/>expObjStart<sp/>-<sp/>currObjStart;</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currObjEnd<sp/>&gt;=<sp/>expObjEnd)</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyEnd<sp/>=<sp/>expObjEnd;</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyEnd<sp/>=<sp/>currObjEnd;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((copyEnd<sp/>-<sp/>copyStart)<sp/>&gt;=<sp/>(uint16_t)(length<sp/>-<sp/>copiedNumber))</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyNumber<sp/>=<sp/>length<sp/>-<sp/>copiedNumber;<sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>necessary<sp/>to<sp/>copy<sp/>the<sp/>object<sp/>to<sp/>the<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyNumber<sp/>=<sp/>copyEnd<sp/>-<sp/>copyStart;<sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>object<sp/>until<sp/>the<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>get<sp/>the<sp/>data<sp/>content<sp/>from<sp/>the<sp/>current<sp/>obj<sp/>start<sp/>from<sp/>copyOffset<sp/>and<sp/>copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtpsVFSUtilityGetObjectRecordData(</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cid,<sp/>pBuf<sp/>+<sp/>copiedNumber,<sp/>copyOffset,<sp/>copyNumber,<sp/>pTarget-&gt;id,<sp/>&amp;pTarget-&gt;metaData);</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copiedNumber<sp/>+=<sp/>copyNumber;</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultLen<sp/>=<sp/>copiedNumber;</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/>currObjStart<sp/>+=<sp/>currObjLen;</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>pObj-&gt;pNext;</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resultLen;</highlight></codeline>
<codeline lineno="2606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal">int8_t<sp/><ref refid="otp__vfs__main_8c_1af86b252feafd919709537596109c7be0" kindref="member">OtpVFSTypeCompare</ref>(</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>number1,<sp/>uint16_t<sp/>isType1Long,<sp/>uint8_t*<sp/>number2,<sp/>uint16_t<sp/>isType2Long)</highlight></codeline>
<codeline lineno="2626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/>uint8_t<sp/>tempUuid1[16]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/>uint8_t<sp/>tempUuid2[16]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>integer<sp/>arrays<sp/>into<sp/>temporary<sp/>128-bit<sp/>representations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isType1Long)</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(tempUuid1,<sp/>number1,<sp/>16);</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;tempUuid1[14],<sp/>number1,<sp/>2);</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isType2Long)</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(tempUuid2,<sp/>number2,<sp/>16);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;tempUuid2[14],<sp/>number2,<sp/>2);</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>both<sp/>numbers<sp/>are<sp/>128-bit;<sp/>you<sp/>can<sp/>compare<sp/>them<sp/>as<sp/>128-bit<sp/>integers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tempUuid1[i]<sp/>&lt;<sp/>tempUuid2[i])</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>number1<sp/>is<sp/>less<sp/>than<sp/>number2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tempUuid1[i]<sp/>&gt;<sp/>tempUuid2[i])</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>number1<sp/>is<sp/>greater<sp/>than<sp/>number2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>Equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>OtpVFSNameCompare(uint8_t*<sp/>a,<sp/>uint8_t*<sp/>b,<sp/>uint8_t<sp/>sizeA,<sp/>uint8_t<sp/>sizeB,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)</highlight></codeline>
<codeline lineno="2679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/>uint8_t<sp/>len;</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>NULL<sp/>pointers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/>NULL<sp/>||<sp/>b<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>common<sp/>length<sp/>to<sp/>compare.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeA<sp/>&lt;<sp/>sizeB)</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>sizeA;</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>sizeB;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>0<sp/>||<sp/>mode<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>pointers<sp/>for<sp/>comparison<sp/>from<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>+=<sp/>(sizeA<sp/>-<sp/>len);</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>+=<sp/>(sizeB<sp/>-<sp/>len);</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/>sizeA<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/>sizeB<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>the<sp/>arrays<sp/>element<sp/>by<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a[i]<sp/>&lt;<sp/>b[i])</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a[i]<sp/>&gt;<sp/>b[i])</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>remaining<sp/>sizes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeA<sp/>&lt;<sp/>sizeB)</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeA<sp/>&gt;<sp/>sizeB)</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeA<sp/>&lt;<sp/>sizeB)</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>`b`<sp/>against<sp/>all<sp/>possible<sp/>alignments<sp/>in<sp/>`a`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>sizeA<sp/>-<sp/>sizeB;<sp/>i++)</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmp<sp/>=<sp/>memcmp(a<sp/>+<sp/>i,<sp/>b,<sp/>sizeB);</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>binary<sp/>comparison<sp/>if<sp/>sizes<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sizeA<sp/>!=<sp/>sizeB)</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(OtpVFSBinaryCompare(a,<sp/>b,<sp/>sizeA));</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"></highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2781"><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>OTPVFSUpdateObjectListUtility(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/>pObj,<sp/>uint8_t<sp/>condNumber,<sp/><ref refid="struct___otps_filter" kindref="compound">OtpsFilter</ref>*<sp/>pCond)</highlight></codeline>
<codeline lineno="2783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_meta_data" kindref="compound">OtpVFSMetaData</ref>*<sp/>pMeta<sp/>=<sp/>&amp;pObj-&gt;metaData;</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/>uint8_t*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uuidType;</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/>uint8_t*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeStamp1;</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/>uint8_t*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeStamp2;</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size1;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size2;</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>condNumber;<sp/>i++)</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pCond-&gt;opCode[i])</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_NO_FILTER:</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>nothing.<sp/>Just<sp/>accept<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_NAME_START_WITH:</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>pCond-&gt;pCondLen[i];</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_INFO2(</highlight><highlight class="stringliteral">&quot;Filter<sp/>start<sp/>with<sp/>len:%d,<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>len,<sp/>pCond-&gt;pCond[i]);</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>APP_TRACE_INFO2(&quot;L<sp/>OTPS_FILTER_TYPE_NAME_START_WITH<sp/>len:%d,<sp/>%s&quot;,<sp/>pMeta-&gt;name_len,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pMeta-&gt;name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((OtpVFSNameCompare(pMeta-&gt;name,<sp/>pCond-&gt;pCond[i],<sp/>pMeta-&gt;name_len,<sp/>len,<sp/>0))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_NAME_END_WITH:</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>pCond-&gt;pCondLen[i];</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_INFO2(</highlight><highlight class="stringliteral">&quot;OTPS_FILTER_TYPE_NAME_END_WITH<sp/>len:%d,<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>len,<sp/>pCond-&gt;pCond[i]);</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>APP_TRACE_INFO2(&quot;L<sp/>OTPS_FILTER_TYPE_NAME_END_WITH<sp/>len:%d,<sp/>%s&quot;,<sp/>pMeta-&gt;name_len,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pMeta-&gt;name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSNameCompare(pMeta-&gt;name,<sp/>pCond-&gt;pCond[i],<sp/>pMeta-&gt;name_len,<sp/>len,<sp/>1)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"></highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_NAME_CONTAINS:</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>pCond-&gt;pCondLen[i];</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_INFO2(</highlight><highlight class="stringliteral">&quot;OTPS_FILTER_TYPE_NAME_CONTAINS<sp/>len:%d,<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>len,<sp/>pCond-&gt;pCond[i]);</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>APP_TRACE_INFO2(&quot;L<sp/>OTPS_FILTER_TYPE_NAME_CONTAINS<sp/>len:%d,<sp/>%s&quot;,<sp/>pMeta-&gt;name_len,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pMeta-&gt;name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2826"><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSNameCompare(pMeta-&gt;name,<sp/>pCond-&gt;pCond[i],<sp/>pMeta-&gt;name_len,<sp/>len,<sp/>2)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_NAME_IS_EXACTLY:</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>pCond-&gt;pCondLen[i];</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_INFO2(</highlight><highlight class="stringliteral">&quot;OTPS_FILTER_TYPE_NAME_IS_EXACTLY<sp/>len:%d,<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>len,<sp/>pCond-&gt;pCond[i]);</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>APP_TRACE_INFO2(&quot;L<sp/>OTPS_FILTER_TYPE_NAME_IS_EXACTLY<sp/>len:%d,<sp/>%s&quot;,<sp/>pMeta-&gt;name_len,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pMeta-&gt;name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((OtpVFSNameCompare(pMeta-&gt;name,<sp/>pCond-&gt;pCond[i],<sp/>pMeta-&gt;name_len,<sp/>len,<sp/>3))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_OBJECT_TYPE:</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uuidType<sp/>=<sp/>(pCond-&gt;pCond[i]);</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCond-&gt;pCondLen[i]<sp/>==<sp/>(ATT_128_UUID_LEN)<sp/>&amp;&amp;<sp/>pMeta-&gt;isTypeLong)</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(uuidType,<sp/>pMeta-&gt;type,<sp/>ATT_128_UUID_LEN))</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCond-&gt;pCondLen[i]<sp/>==<sp/>(ATT_16_UUID_LEN)<sp/>&amp;&amp;<sp/>!pMeta-&gt;isTypeLong)</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(uuidType,<sp/>pMeta-&gt;type,<sp/>ATT_16_UUID_LEN))</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_CREATED_BETWEEN:</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeStamp1<sp/>=<sp/>&amp;pCond-&gt;pCond[i][0];</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeStamp2<sp/>=<sp/>&amp;pCond-&gt;pCond[i][OTP_VFS_TIMESTAMP_SIZE];</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSBinaryCompare(&amp;pMeta-&gt;createTime[0],<sp/>timeStamp1,<sp/>OTP_VFS_TIMESTAMP_SIZE)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSBinaryCompare(timeStamp2,<sp/>&amp;pMeta-&gt;createTime[0],<sp/>OTP_VFS_TIMESTAMP_SIZE)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_MODIFIED_BETWEEN:</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeStamp1<sp/>=<sp/>&amp;pCond-&gt;pCond[i][0];</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeStamp2<sp/>=<sp/>&amp;pCond-&gt;pCond[i][OTP_VFS_TIMESTAMP_SIZE];</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSBinaryCompare(&amp;pMeta-&gt;modifyTime[0],<sp/>timeStamp1,<sp/>OTP_VFS_TIMESTAMP_SIZE)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OtpVFSBinaryCompare(timeStamp2,<sp/>&amp;pMeta-&gt;modifyTime[0],<sp/>OTP_VFS_TIMESTAMP_SIZE)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_CURRENT_SIZE_BETWEEN:</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size1<sp/>=<sp/>*((uint32_t*)((pCond-&gt;pCond[i])));</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size2<sp/>=<sp/>*((uint32_t*)(pCond-&gt;pCond[i]<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t)));</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMeta-&gt;currSize<sp/>&lt;<sp/>size1<sp/>||<sp/>pMeta-&gt;currSize<sp/>&gt;<sp/>size2)</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_ALLOC_SIZE_BETWEEN:</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size1<sp/>=<sp/>*((uint32_t*)(pCond-&gt;pCond[i]));</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size2<sp/>=<sp/>*((uint32_t*)(pCond-&gt;pCond[i]<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t)));</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"></highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMeta-&gt;allocSize<sp/>&lt;<sp/>size1<sp/>||<sp/>pMeta-&gt;allocSize<sp/>&gt;<sp/>size2)</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTPS_FILTER_TYPE_MARKED_OBJ:</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(pMeta-&gt;property<sp/>&amp;<sp/>OTP_OBJ_MARK_PROPERTY))</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2927"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="otp__vfs__main_8c_1a6b49c234eb7bb5955388f54e7692b00b" kindref="member">OTPVFSUpdateObjectList</ref>(uint8_t<sp/>cid)</highlight></codeline>
<codeline lineno="2929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pObj<sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/><sp/><sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><ref refid="struct___otps_filter" kindref="compound">OtpsFilter</ref>*<sp/>pFilter<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].listFilters;</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/><sp/><sp/>pTarget;</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pNext;</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/>filters<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/>OtpVFSCtx.conn[cid].olcp.filteredNoOfObj<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/>pObj<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pHead-&gt;pNext;</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pObj<sp/>!=<sp/>pHead)</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/>pNext<sp/>=<sp/>pObj-&gt;pNext;</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>old<sp/>filtered<sp/>to<sp/>the<sp/>usedId<sp/>list<sp/>and<sp/>then<sp/>filter<sp/>them<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1adb88f2eb7f49da847b169d8035c4ccdc" kindref="member">OtpVFSUtilListRemove</ref>(pObj);</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1a4546778c7ec1b0709ae1bd5c8abfcd55" kindref="member">OtpVFSUtilListInsert</ref>(&amp;OtpVFSCtx.conn[cid].usedIdHead,<sp/>pObj);</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>pNext;</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"></highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/>pHead<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].usedIdHead;</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"></highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/>pObj<sp/>=<sp/>pHead-&gt;pNext;</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pObj<sp/>!=<sp/>pHead)</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/>pNext<sp/><sp/><sp/>=<sp/>pObj-&gt;pNext;</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/>pTarget<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj;</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filters<sp/>+=<sp/>pFilter-&gt;opCode[i];</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((filters<sp/>==<sp/>0)<sp/>||<sp/>(OTPVFSUpdateObjectListUtility(pTarget,<sp/>3,<sp/>pFilter)))</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].olcp.filteredNoOfObj++;</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1adb88f2eb7f49da847b169d8035c4ccdc" kindref="member">OtpVFSUtilListRemove</ref>(pObj);</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1a4546778c7ec1b0709ae1bd5c8abfcd55" kindref="member">OtpVFSUtilListInsert</ref>(&amp;OtpVFSCtx.conn[cid].filteredIdHead,<sp/>pObj);</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.isCurrObjValid<sp/>=</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_OLCP_VALID_OBJ;</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Need<sp/>to<sp/>handle<sp/>the<sp/>currObj<sp/>to<sp/>which<sp/>one?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.isCurrObjValid<sp/>=</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_OLCP_INVALID_OBJ;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>pNext;</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"></highlight></codeline>
<codeline lineno="2977"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="otp__vfs__main_8c_1a05ea2731b70a24972d1106e9e051c4ff" kindref="member">OtpVFSCleanup</ref>(uint8_t<sp/>cid)</highlight></codeline>
<codeline lineno="2988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pObj<sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/><sp/><sp/>delObj<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/><sp/><sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/>pObj<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pHead-&gt;pNext;</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/>uint8_t<sp/>attResponse<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/>uint8_t<sp/>opCode<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>each<sp/>object&apos;s<sp/>name<sp/>and<sp/>compare<sp/>it<sp/>with<sp/>the<sp/>input<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pObj<sp/>!=<sp/>pHead)</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;metaData.name_len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delObj<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj;</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delObj-&gt;metaData.isCurrObjValid<sp/>=<sp/>OTP_VFS_OLCP_INVALID_OBJ;</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="otp__vfs__api_8h_1aa7cfa910c1c66488953b6685a425a523" kindref="member">OtpVFSCoreDelete</ref>(delObj-&gt;handler);</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1adb88f2eb7f49da847b169d8035c4ccdc" kindref="member">OtpVFSUtilListRemove</ref>((<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*)delObj);</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1a4546778c7ec1b0709ae1bd5c8abfcd55" kindref="member">OtpVFSUtilListInsert</ref>(&amp;OtpVFSCtx.freeIdHead,<sp/>(<ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*)delObj);</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;delObj-&gt;metaData,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct___otp_v_f_s_meta_data" kindref="compound">OtpVFSMetaData</ref>));</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].olcp.totalNoOfObj--;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>pHead-&gt;pNext;</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>pObj-&gt;pNext;</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"></highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>the<sp/>first<sp/>object<sp/>of<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><ref refid="otp__vfs__main_8c_1a10c79523f124d46e24efa1692b428682" kindref="member">OtpVFSOlcpOpObject</ref>(OTS_UI_CID,<sp/>&amp;opCode,<sp/>&amp;attResponse);</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><ref refid="otp__vfs__main_8c_1a7f707ea7b8b78c0caa7e5aec582a327b" kindref="member">setChannelStatus</ref>(OTS_UI_CID,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3019"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3028"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="otp__vfs__main_8c_1ae6b213d6904a68b93c92ea7f8ab58e29" kindref="member">OtpVFSClearAllMarkObject</ref>(uint8_t<sp/>cid)</highlight></codeline>
<codeline lineno="3029"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pObj<sp/><sp/>=<sp/>pHead-&gt;pNext;</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>each<sp/>valid<sp/>object<sp/>and<sp/>clear<sp/>the<sp/>bit<sp/>property;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pObj<sp/>!=<sp/>pHead)</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;metaData.property<sp/>&amp;=<sp/>~<sp/>OTP_OBJ_MARK_PROPERTY;</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>pObj-&gt;pNext;</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"></highlight></codeline>
<codeline lineno="3040"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3051"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3052"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OtpVFSComparsion(uint8_t<sp/>sortType,<sp/><ref refid="struct___otp_v_f_s_meta_data" kindref="compound">OtpVFSMetaData</ref>*<sp/>a,<sp/><ref refid="struct___otp_v_f_s_meta_data" kindref="compound">OtpVFSMetaData</ref>*<sp/>b)</highlight></codeline>
<codeline lineno="3053"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/>uint8_t<sp/>order<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>ascending<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ret<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sortType<sp/>&amp;<sp/>0x10)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/>order<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"></highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sortType)</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTS_ORDER_BY_NAME_ASCENDING:</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTS_ORDER_BY_NAME_DESCENDING:</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>OtpVFSBinaryCompareVarLen(a-&gt;name,<sp/>b-&gt;name,<sp/>a-&gt;name_len,<sp/>b-&gt;name_len);</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"></highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTS_ORDER_BY_TYPE_ASCENDING:</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTS_ORDER_BY_TYPE_DESCENDING:</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="otp__vfs__main_8c_1af86b252feafd919709537596109c7be0" kindref="member">OtpVFSTypeCompare</ref>(a-&gt;type,<sp/>a-&gt;isTypeLong,<sp/>b-&gt;type,<sp/>b-&gt;isTypeLong);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"></highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTS_ORDER_BY_CURRENT_SIZE_ASCENDING:</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTS_ORDER_BY_CURRENT_SIZE_DESCENDING:</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>(a-&gt;currSize<sp/>&gt;<sp/>b-&gt;currSize);</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTS_ORDER_BY_CREATE_TIME_ASCENDING:</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTS_ORDER_BY_CREATE_TIME_DESCENDING:</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>OtpVFSBinaryCompareVarLen(</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;createTime,<sp/>b-&gt;createTime,<sp/>OTP_VFS_TIMESTAMP_SIZE,<sp/>OTP_VFS_TIMESTAMP_SIZE);</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTS_ORDER_BY_MODIFY_TIME_ASCENDING:</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OTS_ORDER_BY_MODIFY_TIME_DESCENDING:</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>OtpVFSBinaryCompareVarLen(</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a-&gt;modifyTime,<sp/>b-&gt;modifyTime,<sp/>OTP_VFS_TIMESTAMP_SIZE,<sp/>OTP_VFS_TIMESTAMP_SIZE);</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"></highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret<sp/>^<sp/>order);</highlight></codeline>
<codeline lineno="3109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"></highlight></codeline>
<codeline lineno="3111"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="otp__vfs__main_8c_1a3da020dfb774fbc5c5a7fcc18b663afa" kindref="member">OtpVFSSortObject</ref>(uint8_t<sp/>cid,<sp/>uint8_t<sp/>sortType)</highlight></codeline>
<codeline lineno="3123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pObj<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pNext;</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref><sp/><sp/>pDummy;</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pTarget;</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"></highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><ref refid="otp__vfs__main_8c_1aa846ceadc965cf3b5b423cc04308b5f8" kindref="member">OtpVFSUtilListInit</ref>(&amp;pDummy);</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>the<sp/>objects<sp/>from<sp/>the<sp/>head<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/>pObj<sp/>=<sp/>pHead-&gt;pNext;</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pObj<sp/>!=<sp/>pHead)</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/>pNext<sp/>=<sp/>pObj-&gt;pNext;</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"></highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1adb88f2eb7f49da847b169d8035c4ccdc" kindref="member">OtpVFSUtilListRemove</ref>(pObj);</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1a4546778c7ec1b0709ae1bd5c8abfcd55" kindref="member">OtpVFSUtilListInsert</ref>(&amp;pDummy,<sp/>pObj);</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"></highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>pNext;</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"></highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sort<sp/>the<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pDummy.pNext<sp/>!=<sp/>&amp;pDummy)<sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/>pHead<sp/><sp/><sp/>=<sp/>&amp;pDummy;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj<sp/><sp/><sp/><sp/>=<sp/>pHead-&gt;pNext;</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/>pTarget<sp/>=<sp/>pObj;</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"></highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pObj<sp/>!=<sp/>pHead)</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>return<sp/>value<sp/>is<sp/>1,<sp/>it<sp/>means<sp/>a<sp/>is<sp/>satisfied<sp/>with<sp/>the<sp/>sorting<sp/>condition<sp/>compared<sp/>to<sp/>b,</highlight></codeline>
<codeline lineno="3155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>where:</highlight></codeline>
<codeline lineno="3156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>In<sp/>ascending<sp/>order,<sp/>if<sp/>1,<sp/>a<sp/>is<sp/>smaller<sp/>than<sp/>b.</highlight></codeline>
<codeline lineno="3157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>In<sp/>ascending<sp/>order,<sp/>if<sp/>0,<sp/>b<sp/>is<sp/>smaller<sp/>than<sp/>a.</highlight></codeline>
<codeline lineno="3158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>In<sp/>descending<sp/>order,<sp/>if<sp/>1,<sp/>a<sp/>is<sp/>greater<sp/>than<sp/>b.</highlight></codeline>
<codeline lineno="3159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>In<sp/>descending<sp/>order,<sp/>if<sp/>0,<sp/>b<sp/>is<sp/>greater<sp/>than<sp/>a.</highlight></codeline>
<codeline lineno="3160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Therefore,<sp/>ret<sp/>=<sp/>1<sp/>means<sp/>keeping<sp/>b<sp/>as<sp/>the<sp/>remaining<sp/>object.</highlight></codeline>
<codeline lineno="3161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtpVFSComparsion(sortType,<sp/>&amp;((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pTarget)-&gt;metaData,<sp/>&amp;((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;metaData);</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTarget<sp/>=<sp/>pObj;</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>pObj-&gt;pNext;</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"></highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1adb88f2eb7f49da847b169d8035c4ccdc" kindref="member">OtpVFSUtilListRemove</ref>(pTarget);</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="otp__vfs__main_8c_1a4546778c7ec1b0709ae1bd5c8abfcd55" kindref="member">OtpVFSUtilListInsert</ref>(&amp;OtpVFSCtx.conn[cid].filteredIdHead,<sp/>pTarget);</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"></highlight></codeline>
<codeline lineno="3176"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3184"><highlight class="normal">uint32_t<sp/><ref refid="otp__vfs__main_8c_1ad34f3d179de32b3069c350bbbbcd2c7c" kindref="member">OtpVFSReadCheckSum</ref>(uint8_t<sp/>cid)</highlight></codeline>
<codeline lineno="3185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.checksum;</highlight></codeline>
<codeline lineno="3187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3196"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal">uint32_t<sp/><ref refid="otp__vfs__main_8c_1a5f2fa5a3af37a7b423dfdb87950c4b1a" kindref="member">OtpVFSReadCheckSumUi</ref>(uint8_t<sp/>objId[6],<sp/>uint8_t<sp/>cid)</highlight></codeline>
<codeline lineno="3198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>iObj<sp/><sp/>=<sp/>pHead;</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/><sp/><sp/>pObj<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/>idBuf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"></highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>object<sp/>ID<sp/>to<sp/>a<sp/>64-bit<sp/>buffer<sp/>for<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/>memcpy(&amp;idBuf,<sp/>objId,<sp/>OTP_VFS_OBJECT_ID_LEN);</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"></highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>object<sp/>with<sp/>the<sp/>specified<sp/>object<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)iObj)-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>idBuf)</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iObj<sp/>=<sp/>iObj-&gt;pNext;</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)iObj;</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iObj<sp/>!=<sp/>pHead);</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"></highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>selected<sp/>object<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObj<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pObj-&gt;metaData.checksum;</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"></highlight></codeline>
<codeline lineno="3233"><highlight class="normal"></highlight></codeline>
<codeline lineno="3234"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3242"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="otp__vfs__main_8c_1a0541c462f0199ff1a7749a51dd806b49" kindref="member">OtpSetCccIdx</ref>(uint8_t<sp/>oacpCccIdx,<sp/>uint8_t<sp/>olcpCccIdx,<sp/>uint8_t<sp/>objChangedCccIdx)</highlight></codeline>
<codeline lineno="3244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/>OtpVFSCtx.conn[0].oacpCccIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>oacpCccIdx;</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/>OtpVFSCtx.conn[0].olcpCccIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>olcpCccIdx;</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/>OtpVFSCtx.conn[0].objChangedCccIdx<sp/>=<sp/>objChangedCccIdx;</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/>OtpVFSCtx.conn[1].oacpCccIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>oacpCccIdx;</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/>OtpVFSCtx.conn[1].olcpCccIdx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>olcpCccIdx;</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/>OtpVFSCtx.conn[1].objChangedCccIdx<sp/>=<sp/>objChangedCccIdx;</highlight></codeline>
<codeline lineno="3251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"></highlight></codeline>
<codeline lineno="3253"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3260"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="otp__vfs__main_8c_1ab974e3fcb347a103bd4da6feab42c62b" kindref="member">OtpSetFeatures</ref>(uint8_t<sp/>cid,<sp/>uint64_t<sp/>featuresField)</highlight></codeline>
<codeline lineno="3262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>&gt;=<sp/>OTP_VFS_MAX_NO)</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/>OtpVFSCtx.conn[cid].otsFeatures<sp/>=<sp/>featuresField;</highlight></codeline>
<codeline lineno="3268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"></highlight></codeline>
<codeline lineno="3270"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3277"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="otp__vfs__main_8c_1a849031fc6eb5307bb4dbca6d37293333" kindref="member">OtpSetMtu</ref>(uint8_t<sp/>cid,<sp/>uint16_t<sp/>mtuLen)</highlight></codeline>
<codeline lineno="3279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>&gt;=<sp/>OTP_VFS_MAX_NO)</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mtuLen<sp/>&lt;<sp/>OTS_LOCAL_MTU)</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].oacp.mtuLen<sp/>=<sp/>mtuLen;</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/>OtpVFSCtx.conn[cid].oacp.mtuLen<sp/>=<sp/>OTS_LOCAL_MTU;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3301"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3302"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="otp__vfs__main_8c_1a7ef662d9998bdbbc5ab7c46984b1358f" kindref="member">OtpGetFeatures</ref>(uint8_t<sp/>cid,<sp/>uint64_t*<sp/>featuresField)</highlight></codeline>
<codeline lineno="3303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>&gt;=<sp/>OTP_VFS_MAX_NO)</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/>*featuresField<sp/>=<sp/>OtpVFSCtx.conn[cid].otsFeatures;</highlight></codeline>
<codeline lineno="3309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"></highlight></codeline>
<codeline lineno="3311"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3322"><highlight class="normal">uint8_t<sp/><ref refid="otp__vfs__main_8c_1a3046042620f1a6966f85935758bc19a7" kindref="member">OtpGetCccIdx</ref>(uint8_t<sp/>cid,<sp/>uint8_t<sp/>type,<sp/>uint8_t*<sp/>idx)</highlight></codeline>
<codeline lineno="3323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>&gt;=<sp/>OTP_VFS_MAX_NO)</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"></highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>OTP_VFS_CCCD_IDX_OACP)</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/>*idx<sp/>=<sp/>OtpVFSCtx.conn[cid].oacpCccIdx;</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>OTP_VFS_CCCD_IDX_OLCP)</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/>*idx<sp/>=<sp/>OtpVFSCtx.conn[cid].olcpCccIdx;</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>OTP_VFS_CCCD_IDX_OBJ_CH)</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/>*idx<sp/>=<sp/>OtpVFSCtx.conn[cid].objChangedCccIdx;</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3358"><highlight class="normal">uint64_t<sp/><ref refid="otp__vfs__main_8c_1a026dde3f586a903ef20ecbfba44a07dc" kindref="member">OtpGetCurrId</ref>(uint8_t<sp/>cid)</highlight></codeline>
<codeline lineno="3359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cid<sp/>&gt;=<sp/>OTP_VFS_MAX_NO)</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>current<sp/>object<sp/>in<sp/>the<sp/>Object<sp/>List<sp/>Control<sp/>Point<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;metaData.isCurrObjValid<sp/>==</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OTP_VFS_OLCP_VALID_OBJ)</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cast<sp/>the<sp/>current<sp/>object<sp/>to<sp/>an<sp/>OtpVFSId<sp/>pointer<sp/>and<sp/>return<sp/>its<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)OtpVFSCtx.conn[cid].olcp.currObj)-&gt;id;</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"></highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>0<sp/>when<sp/>the<sp/>current<sp/>object<sp/>is<sp/>not<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"></highlight></codeline>
<codeline lineno="3376"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3383"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="otp__vfs__main_8c_1aec5c2c982f676526af18b971b53bafb4" kindref="member">printObjList</ref>(uint8_t<sp/>cid)</highlight></codeline>
<codeline lineno="3384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pObj<sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><ref refid="struct___otp_v_f_s_list" kindref="compound">OtpVFSList</ref>*<sp/>pHead<sp/>=<sp/>&amp;OtpVFSCtx.conn[cid].filteredIdHead;</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/>pObj<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pHead-&gt;pNext;</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/>uint16_t<sp/>yBuf<sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>each<sp/>object&apos;s<sp/>name<sp/>and<sp/>compare<sp/>it<sp/>with<sp/>the<sp/>input<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pObj<sp/>!=<sp/>pHead)</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*<sp/>pObj2<sp/>=<sp/>(<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj;</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/>APP_TRACE_INFO1(</highlight><highlight class="stringliteral">&quot;Name:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>pObj2-&gt;metaData.name);</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/>APP_TRACE_INFO2(</highlight><highlight class="stringliteral">&quot;ID:<sp/>%08x<sp/>%08x&quot;</highlight><highlight class="normal">,<sp/>(uint32_t)(pObj2-&gt;id<sp/>&gt;&gt;<sp/>32),<sp/>(uint32_t)(pObj2-&gt;id));</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObj2-&gt;metaData.isTypeLong)</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>typeAsUint32[4]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(typeAsUint32,<sp/>pObj2-&gt;metaData.type,<sp/>ATT_128_UUID_LEN);</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_INFO4(</highlight><highlight class="stringliteral">&quot;Type:<sp/>%02x%02x%02x%02x&quot;</highlight><highlight class="normal">,<sp/>typeAsUint32[0]<sp/>&amp;<sp/>0xFF,</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(typeAsUint32[0]<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF,<sp/>(typeAsUint32[0]<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF,</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(typeAsUint32[0]<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_INFO4(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>%02x%02x%02x%02x&quot;</highlight><highlight class="normal">,<sp/>typeAsUint32[1]<sp/>&amp;<sp/>0xFF,</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(typeAsUint32[1]<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF,<sp/>(typeAsUint32[1]<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF,</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(typeAsUint32[1]<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"></highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_INFO4(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>%02x%02x%02x%02x&quot;</highlight><highlight class="normal">,<sp/>typeAsUint32[2]<sp/>&amp;<sp/>0xFF,</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(typeAsUint32[2]<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF,<sp/>(typeAsUint32[2]<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF,</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(typeAsUint32[2]<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"></highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_INFO4(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>%02x%02x%02x%02x&quot;</highlight><highlight class="normal">,<sp/>typeAsUint32[3]<sp/>&amp;<sp/>0xFF,</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(typeAsUint32[3]<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF,<sp/>(typeAsUint32[3]<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF,</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(typeAsUint32[3]<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>APP_TRACE_INFO2(</highlight><highlight class="stringliteral">&quot;Type:<sp/>%x<sp/>%x&quot;</highlight><highlight class="normal">,<sp/>pObj2-&gt;metaData.type[0],<sp/>pObj2-&gt;metaData.type[1]);</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/>APP_TRACE_INFO1(</highlight><highlight class="stringliteral">&quot;Size:<sp/>%x&quot;</highlight><highlight class="normal">,<sp/>pObj2-&gt;metaData.currSize);</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/>APP_TRACE_INFO1(</highlight><highlight class="stringliteral">&quot;Allocated:<sp/>%x&quot;</highlight><highlight class="normal">,<sp/>pObj2-&gt;metaData.allocSize);</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;yBuf,<sp/>&amp;(pObj2)-&gt;metaData.createTime[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t));</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/>APP_TRACE_INFO6(</highlight><highlight class="stringliteral">&quot;Created<sp/><sp/>%d/%d/%d<sp/>%d:%d:%d&quot;</highlight><highlight class="normal">,<sp/>yBuf,</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;metaData.createTime[2],</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;metaData.createTime[3],</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;metaData.createTime[4],</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;metaData.createTime[5],</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;metaData.createTime[6]);</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;yBuf,<sp/>&amp;(pObj2)-&gt;metaData.modifyTime[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t));</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/>APP_TRACE_INFO6(</highlight><highlight class="stringliteral">&quot;Modified<sp/>%d/%d/%d<sp/>%d:%d:%d&quot;</highlight><highlight class="normal">,<sp/>yBuf,</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;metaData.modifyTime[2],</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;metaData.modifyTime[3],</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;metaData.modifyTime[4],</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;metaData.modifyTime[5],</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)((<ref refid="struct___otp_v_f_s_id" kindref="compound">OtpVFSId</ref>*)pObj)-&gt;metaData.modifyTime[6]);</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"></highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>pObj-&gt;pNext;</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3440"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/otp/otp_vfs_main.c"/>
  </compounddef>
</doxygen>
