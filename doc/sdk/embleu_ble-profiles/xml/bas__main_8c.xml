<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="bas__main_8c" kind="file" language="C++">
    <compoundname>bas_main.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="yes">wsf_types.h</includes>
    <includes local="yes">wsf_assert.h</includes>
    <includes local="yes">wsf_trace.h</includes>
    <includes local="yes">util/bstream.h</includes>
    <includes local="yes">att_api.h</includes>
    <includes refid="svc__ch_8h" local="yes">svc_ch.h</includes>
    <includes refid="svc__batt_8h" local="yes">svc_batt.h</includes>
    <includes refid="app__api_8h" local="yes">app_api.h</includes>
    <includes refid="app__hw_8h" local="yes">app_hw.h</includes>
    <includes refid="bas__api_8h" local="yes">bas_api.h</includes>
    <incdepgraph>
      <node id="10">
        <label>app_api.h</label>
        <link refid="app__api_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>app_cfg.h</label>
        <link refid="app__cfg_8h"/>
      </node>
      <node id="13">
        <label>app_db.h</label>
        <link refid="app__db_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>app_hw.h</label>
        <link refid="app__hw_8h"/>
      </node>
      <node id="16">
        <label>bas_api.h</label>
        <link refid="bas__api_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c</label>
        <link refid="bas__main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>svc_batt.h</label>
        <link refid="svc__batt_8h"/>
      </node>
      <node id="8">
        <label>svc_ch.h</label>
        <link refid="svc__ch_8h"/>
      </node>
      <node id="7">
        <label>att_api.h</label>
      </node>
      <node id="12">
        <label>dm_api.h</label>
      </node>
      <node id="2">
        <label>string.h</label>
      </node>
      <node id="6">
        <label>util/bstream.h</label>
      </node>
      <node id="4">
        <label>wsf_assert.h</label>
      </node>
      <node id="11">
        <label>wsf_os.h</label>
      </node>
      <node id="17">
        <label>wsf_timer.h</label>
      </node>
      <node id="5">
        <label>wsf_trace.h</label>
      </node>
      <node id="3">
        <label>wsf_types.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structbas_conn__t" prot="public">basConn_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="bas__main_8c_1a11e28119f5c70f009e239fe033739c2b" prot="public" static="no">
        <name>BAS_BATT_LEVEL_INIT</name>
        <initializer>0xFF</initializer>
        <briefdescription>
<para>battery level initialization value </para>
        </briefdescription>
        <detaileddescription>
<para>Default battery level </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="39" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="bas__main_8c_1a5817ee28b02e199ec676a9c730bd9a93" prot="public" static="no" mutable="no">
        <type><ref refid="structbas_conn__t" kindref="compound">basConn_t</ref></type>
        <definition>basConn_t conn[DM_CONN_MAX]</definition>
        <argsstring>[DM_CONN_MAX]</argsstring>
        <name>conn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>connection control block </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="56" column="21" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bas__main_8c_1a0569c274ab948e21e83fc6e4970d9fa6" prot="public" static="no" mutable="no">
        <type>wsfTimer_t</type>
        <definition>wsfTimer_t measTimer</definition>
        <argsstring></argsstring>
        <name>measTimer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>periodic measurement timer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="57" column="21" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bas__main_8c_1a5386b9c4ba3e53a546473b6d26edf9fa" prot="public" static="no" mutable="no">
        <type><ref refid="structbas_cfg__t" kindref="compound">basCfg_t</ref></type>
        <definition>basCfg_t cfg</definition>
        <argsstring></argsstring>
        <name>cfg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>configurable parameters </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="58" column="21" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bas__main_8c_1a33bbd93f40e8a9b79e333834d9b86928" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t currCount</definition>
        <argsstring></argsstring>
        <name>currCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>current measurement period count </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="59" column="21" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bas__main_8c_1ae87fe04a681ae30b4a41d5e2db99f94b" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool txReady</definition>
        <argsstring></argsstring>
        <name>txReady</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>true if ready to send notifications </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="60" column="21" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bas__main_8c_1a4f1eb73adfd9150a348d1ddd0aca0785" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t measBattLevel</definition>
        <argsstring></argsstring>
        <name>measBattLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>value of last measured battery level </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="61" column="21" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bas__main_8c_1a3df8ac610dc2d84eeebcadf1d622623d" prot="public" static="yes" mutable="no">
        <type>struct @10</type>
        <definition>struct @10 basCb</definition>
        <argsstring></argsstring>
        <name>basCb</name>
        <briefdescription>
<para>Control block. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="62" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bas__main_8c_1a3d641d227968c642134ce3f9b3ddfe34" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool basNoConnActive</definition>
        <argsstring>(void)</argsstring>
        <name>basNoConnActive</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return true if no connections with active measurements. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if no connections active. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="71" column="13" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="71" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="bas__main_8c_1a534c1b5fa1318a93cef43902aa3a08fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void basSetupToSend</definition>
        <argsstring>(void)</argsstring>
        <name>basSetupToSend</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Setup to send measurements on active connections. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="93" column="13" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="93" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="bas__main_8c_1a23e3a3561d4a32cf8a4d77ff4e20d1dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structbas_conn__t" kindref="compound">basConn_t</ref> *</type>
        <definition>static basConn_t * basFindNextToSend</definition>
        <argsstring>(uint8_t cccIdx)</argsstring>
        <name>basFindNextToSend</name>
        <param>
          <type>uint8_t</type>
          <declname>cccIdx</declname>
        </param>
        <briefdescription>
<para>Find next connection with measurement to send. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cccIdx</parametername>
</parameternamelist>
<parameterdescription>
<para>Battery measurement CCC descriptor index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Connection control block. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="116" column="18" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="116" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="bas__main_8c_1abd9703b0bbd47d68557a2dfcad69e72f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void basSendPeriodicBattlevel</definition>
        <argsstring>(basConn_t *pConn)</argsstring>
        <name>basSendPeriodicBattlevel</name>
        <param>
          <type><ref refid="structbas_conn__t" kindref="compound">basConn_t</ref> *</type>
          <declname>pConn</declname>
        </param>
        <briefdescription>
<para>Send periodic battery measurement. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pConn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection control block.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="144" column="13" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="144" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="bas__main_8c_1af67d8bd2d0d06738eba7c6d997a9be50" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void basConnOpen</definition>
        <argsstring>(dmEvt_t *pMsg)</argsstring>
        <name>basConnOpen</name>
        <param>
          <type>dmEvt_t *</type>
          <declname>pMsg</declname>
        </param>
        <briefdescription>
<para>Handle connection open. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pMsg</parametername>
</parameternamelist>
<parameterdescription>
<para>Event message.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="161" column="13" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="bas__main_8c_1a4fa46dd7d49d6ebe992b20f3d82bdc87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void basHandleValueCnf</definition>
        <argsstring>(attEvt_t *pMsg)</argsstring>
        <name>basHandleValueCnf</name>
        <param>
          <type>attEvt_t *</type>
          <declname>pMsg</declname>
        </param>
        <briefdescription>
<para>Handle a received ATT handle value confirm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pMsg</parametername>
</parameternamelist>
<parameterdescription>
<para>Event message.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="175" column="13" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="175" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="bas__main_8c_1a78e65e8a362e149bdfccd1b0cda521a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void basMeasTimerExp</definition>
        <argsstring>(wsfMsgHdr_t *pMsg)</argsstring>
        <name>basMeasTimerExp</name>
        <param>
          <type>wsfMsgHdr_t *</type>
          <declname>pMsg</declname>
        </param>
        <briefdescription>
<para>This function is called by the application when the periodic measurement timer expires. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pMsg</parametername>
</parameternamelist>
<parameterdescription>
<para>Event message.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="201" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="201" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="group___b_a_t_t_e_r_y___p_r_o_f_i_l_e_1gabe703dcf908db450ff570fd88117957d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BasInit</definition>
        <argsstring>(wsfHandlerId_t handlerId, basCfg_t *pCfg)</argsstring>
        <name>BasInit</name>
        <param>
          <type>wsfHandlerId_t</type>
          <declname>handlerId</declname>
        </param>
        <param>
          <type><ref refid="structbas_cfg__t" kindref="compound">basCfg_t</ref> *</type>
          <declname>pCfg</declname>
        </param>
        <briefdescription>
<para>Initialize the battery service server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handerId</parametername>
</parameternamelist>
<parameterdescription>
<para>WSF handler ID of the application using this service. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pCfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Battery service configurable parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="245" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="245" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="group___b_a_t_t_e_r_y___p_r_o_f_i_l_e_1ga66393bc47d9b93be503e1c24c91977ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BasMeasBattStart</definition>
        <argsstring>(dmConnId_t connId, uint8_t timerEvt, uint8_t battCccIdx)</argsstring>
        <name>BasMeasBattStart</name>
        <param>
          <type>dmConnId_t</type>
          <declname>connId</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>timerEvt</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>battCccIdx</declname>
        </param>
        <briefdescription>
<para>Start periodic battery level measurement. This function starts a timer to perform periodic battery measurements. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connId</parametername>
</parameternamelist>
<parameterdescription>
<para>DM connection identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timerEvt</parametername>
</parameternamelist>
<parameterdescription>
<para>WSF event designated by the application for the timer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>battCccIdx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of battery level CCC descriptor in CCC descriptor handle table.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="263" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="263" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="group___b_a_t_t_e_r_y___p_r_o_f_i_l_e_1ga342ebdcc1c55892ec592e956a49c649a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BasMeasBattStop</definition>
        <argsstring>(dmConnId_t connId)</argsstring>
        <name>BasMeasBattStop</name>
        <param>
          <type>dmConnId_t</type>
          <declname>connId</declname>
        </param>
        <briefdescription>
<para>Stop periodic battery level measurement. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connId</parametername>
</parameternamelist>
<parameterdescription>
<para>DM connection identifier.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="292" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="292" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="group___b_a_t_t_e_r_y___p_r_o_f_i_l_e_1ga9ce70804156987122988324dd2c7821b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BasProcMsg</definition>
        <argsstring>(wsfMsgHdr_t *pMsg)</argsstring>
        <name>BasProcMsg</name>
        <param>
          <type>wsfMsgHdr_t *</type>
          <declname>pMsg</declname>
        </param>
        <briefdescription>
<para>Process received WSF message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pMsg</parametername>
</parameternamelist>
<parameterdescription>
<para>Event message.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="315" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="315" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="group___b_a_t_t_e_r_y___p_r_o_f_i_l_e_1ga080e8827b70f644f4befe013f3cdac31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BasSendBattLevel</definition>
        <argsstring>(dmConnId_t connId, uint8_t idx, uint8_t level)</argsstring>
        <name>BasSendBattLevel</name>
        <param>
          <type>dmConnId_t</type>
          <declname>connId</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Send the battery level to the peer device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connId</parametername>
</parameternamelist>
<parameterdescription>
<para>DM connection identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of battery level CCC descriptor in CCC descriptor handle table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The battery level.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="342" column="6" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="342" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="group___b_a_t_t_e_r_y___p_r_o_f_i_l_e_1ga0b47065ee85a2365d595e17704e06411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t BasReadCback</definition>
        <argsstring>(dmConnId_t connId, uint16_t handle, uint8_t operation, uint16_t offset, attsAttr_t *pAttr)</argsstring>
        <name>BasReadCback</name>
        <param>
          <type>dmConnId_t</type>
          <declname>connId</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>attsAttr_t *</type>
          <declname>pAttr</declname>
        </param>
        <briefdescription>
<para>ATTS read callback for battery service used to read the battery level. Use this function as a parameter to <ref refid="group___b_a_t_t_e_r_y___s_e_r_v_i_c_e_1ga50401bda95f8c15cc431e00d382fac6d" kindref="member">SvcBattCbackRegister()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>ATT status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" line="358" column="9" bodyfile="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c" bodystart="358" bodyend="365"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Battery service server. </para>
    </briefdescription>
    <detaileddescription>
<para>Copyright (c) 2012-2018 Arm Ltd. All Rights Reserved.</para>
<para>Copyright (c) 2019-2024 Packetcraft, Inc. All rights reserved. Packetcraft, Inc. confidential and proprietary.</para>
<para>IMPORTANT. Your use of this file is governed by a Software License Agreement (&quot;Agreement&quot;) that must be accepted in order to download or otherwise receive a copy of this file. You may not use or copy this file for any purpose other than as described in the Agreement. If you do not agree to all of the terms of the Agreement do not use this file and delete all copies in your possession or control; if you do not have a copy of the Agreement, you must contact Packetcraft, Inc. prior to any use, copying or further distribution of this software. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wsf_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wsf_assert.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wsf_trace.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;util/bstream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;att_api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="svc__ch_8h" kindref="compound">svc_ch.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="svc__batt_8h" kindref="compound">svc_batt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="app__api_8h" kindref="compound">app_api.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="app__hw_8h" kindref="compound">app_hw.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bas__api_8h" kindref="compound">bas_api.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/**************************************************************************************************</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/>Macros</highlight></codeline>
<codeline lineno="36"><highlight class="comment">**************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BAS_BATT_LEVEL_INIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFF<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/**************************************************************************************************</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/>Local<sp/>Variables</highlight></codeline>
<codeline lineno="43"><highlight class="comment">**************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="structbas_conn__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>dmConnId_t<sp/><sp/><sp/><sp/>connId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>battToSend;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sentBattLevel;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal">}<sp/><ref refid="structbas_conn__t" kindref="compound">basConn_t</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="structbas_conn__t" kindref="compound">basConn_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bas__main_8c_1a5817ee28b02e199ec676a9c730bd9a93" kindref="member">conn</ref>[DM_CONN_MAX];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>wsfTimer_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bas__main_8c_1a0569c274ab948e21e83fc6e4970d9fa6" kindref="member">measTimer</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="structbas_cfg__t" kindref="compound">basCfg_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bas__main_8c_1a5386b9c4ba3e53a546473b6d26edf9fa" kindref="member">cfg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bas__main_8c_1a33bbd93f40e8a9b79e333834d9b86928" kindref="member">currCount</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bas__main_8c_1ae87fe04a681ae30b4a41d5e2db99f94b" kindref="member">txReady</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bas__main_8c_1a4f1eb73adfd9150a348d1ddd0aca0785" kindref="member">measBattLevel</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}<sp/>basCb;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>basNoConnActive(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="structbas_conn__t" kindref="compound">basConn_t</ref><sp/><sp/><sp/><sp/><sp/>*pConn<sp/>=<sp/>basCb.conn;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>DM_CONN_MAX;<sp/>i++,<sp/>pConn++)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pConn-&gt;<ref refid="structbas_conn__t_1aea7512aae9da3c0c76fdb28e647e00a8" kindref="member">connId</ref><sp/>!=<sp/>DM_CONN_ID_NONE)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>basSetupToSend(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="structbas_conn__t" kindref="compound">basConn_t</ref><sp/><sp/><sp/><sp/><sp/>*pConn<sp/>=<sp/>basCb.conn;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>DM_CONN_MAX;<sp/>i++,<sp/>pConn++)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pConn-&gt;<ref refid="structbas_conn__t_1aea7512aae9da3c0c76fdb28e647e00a8" kindref="member">connId</ref><sp/>!=<sp/>DM_CONN_ID_NONE)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pConn-&gt;<ref refid="structbas_conn__t_1ad0762fa4bd404549792b362dfebff36a" kindref="member">battToSend</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structbas_conn__t" kindref="compound">basConn_t</ref><sp/>*basFindNextToSend(uint8_t<sp/>cccIdx)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="structbas_conn__t" kindref="compound">basConn_t</ref><sp/><sp/><sp/><sp/>*pConn<sp/>=<sp/>basCb.conn;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>DM_CONN_MAX;<sp/>i++,<sp/>pConn++)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pConn-&gt;<ref refid="structbas_conn__t_1aea7512aae9da3c0c76fdb28e647e00a8" kindref="member">connId</ref><sp/>!=<sp/>DM_CONN_ID_NONE<sp/>&amp;&amp;<sp/>pConn-&gt;<ref refid="structbas_conn__t_1ad0762fa4bd404549792b362dfebff36a" kindref="member">battToSend</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pConn-&gt;<ref refid="structbas_conn__t_1a6e57afb25bd177c5a68c51d206895845" kindref="member">sentBattLevel</ref><sp/>!=<sp/>basCb.measBattLevel)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AttsCccEnabled(pConn-&gt;<ref refid="structbas_conn__t_1aea7512aae9da3c0c76fdb28e647e00a8" kindref="member">connId</ref>,<sp/>cccIdx))</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pConn;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>basSendPeriodicBattlevel(<ref refid="structbas_conn__t" kindref="compound">basConn_t</ref><sp/>*pConn)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="group___b_a_t_t_e_r_y___p_r_o_f_i_l_e_1ga080e8827b70f644f4befe013f3cdac31" kindref="member">BasSendBattLevel</ref>(pConn-&gt;<ref refid="structbas_conn__t_1aea7512aae9da3c0c76fdb28e647e00a8" kindref="member">connId</ref>,<sp/>basCb.measTimer.msg.status,<sp/>basCb.measBattLevel);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>pConn-&gt;<ref refid="structbas_conn__t_1a6e57afb25bd177c5a68c51d206895845" kindref="member">sentBattLevel</ref><sp/>=<sp/>basCb.measBattLevel;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>pConn-&gt;<ref refid="structbas_conn__t_1ad0762fa4bd404549792b362dfebff36a" kindref="member">battToSend</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>basCb.txReady<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>basConnOpen(dmEvt_t<sp/>*pMsg)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>basCb.txReady<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>basHandleValueCnf(attEvt_t<sp/>*pMsg)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="structbas_conn__t" kindref="compound">basConn_t</ref><sp/><sp/>*pConn;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMsg-&gt;hdr.status<sp/>==<sp/>ATT_SUCCESS<sp/>&amp;&amp;<sp/>pMsg-&gt;handle<sp/>==<sp/><ref refid="group___b_a_t_t_e_r_y___s_e_r_v_i_c_e_1gga1fb9092bcdeada2d206bdc74afbbe122a02d2de256a56a433c259582951118967" kindref="member">BATT_LVL_HDL</ref>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>basCb.txReady<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>next<sp/>connection<sp/>to<sp/>send<sp/>(note<sp/>ccc<sp/>idx<sp/>is<sp/>stored<sp/>in<sp/>timer<sp/>status)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pConn<sp/>=<sp/>basFindNextToSend(basCb.measTimer.msg.status))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>basSendPeriodicBattlevel(pConn);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bas__main_8c_1a78e65e8a362e149bdfccd1b0cda521a7" kindref="member">basMeasTimerExp</ref>(wsfMsgHdr_t<sp/>*pMsg)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="structbas_conn__t" kindref="compound">basConn_t</ref><sp/><sp/>*pConn;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>there<sp/>are<sp/>active<sp/>connections<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basNoConnActive()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--basCb.currCount<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>basCb.currCount<sp/>=<sp/>basCb.cfg.count;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>battery<sp/>measurement<sp/>to<sp/>be<sp/>sent<sp/>on<sp/>all<sp/>connections<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>basSetupToSend();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>battery<sp/>measurement<sp/>sensor<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_p_p___f_r_a_m_e_w_o_r_k___h_w___a_p_i_1ga62e02377430edae49fbd84a644950bc3" kindref="member">AppHwBattRead</ref>(&amp;basCb.measBattLevel);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>ready<sp/>to<sp/>send<sp/>measurements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basCb.txReady)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>next<sp/>connection<sp/>to<sp/>send<sp/>(note<sp/>ccc<sp/>idx<sp/>is<sp/>stored<sp/>in<sp/>timer<sp/>status)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pConn<sp/>=<sp/>basFindNextToSend(pMsg-&gt;status))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basSendPeriodicBattlevel(pConn);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restart<sp/>timer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>WsfTimerStartSec(&amp;basCb.measTimer,<sp/>basCb.cfg.period);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_a_t_t_e_r_y___p_r_o_f_i_l_e_1gabe703dcf908db450ff570fd88117957d" kindref="member">BasInit</ref>(wsfHandlerId_t<sp/>handlerId,<sp/><ref refid="structbas_cfg__t" kindref="compound">basCfg_t</ref><sp/>*pCfg)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>basCb.measTimer.handlerId<sp/>=<sp/>handlerId;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>basCb.cfg<sp/>=<sp/>*pCfg;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_a_t_t_e_r_y___p_r_o_f_i_l_e_1ga66393bc47d9b93be503e1c24c91977ed" kindref="member">BasMeasBattStart</ref>(dmConnId_t<sp/>connId,<sp/>uint8_t<sp/>timerEvt,<sp/>uint8_t<sp/>battCccIdx)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>this<sp/>is<sp/>first<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basNoConnActive())</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>control<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>basCb.measTimer.msg.event<sp/>=<sp/>timerEvt;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>basCb.measTimer.msg.status<sp/>=<sp/>battCccIdx;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>basCb.measBattLevel<sp/>=<sp/><ref refid="bas__main_8c_1a11e28119f5c70f009e239fe033739c2b" kindref="member">BAS_BATT_LEVEL_INIT</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>basCb.currCount<sp/>=<sp/>basCb.cfg.count;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>timer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>WsfTimerStartSec(&amp;basCb.measTimer,<sp/>basCb.cfg.period);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>conn<sp/>id<sp/>and<sp/>last<sp/>sent<sp/>battery<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>basCb.conn[connId<sp/>-<sp/>1].connId<sp/>=<sp/>connId;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>basCb.conn[connId<sp/>-<sp/>1].sentBattLevel<sp/>=<sp/><ref refid="bas__main_8c_1a11e28119f5c70f009e239fe033739c2b" kindref="member">BAS_BATT_LEVEL_INIT</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_a_t_t_e_r_y___p_r_o_f_i_l_e_1ga342ebdcc1c55892ec592e956a49c649a" kindref="member">BasMeasBattStop</ref>(dmConnId_t<sp/>connId)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>basCb.conn[connId<sp/>-<sp/>1].connId<sp/>=<sp/>DM_CONN_ID_NONE;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>basCb.conn[connId<sp/>-<sp/>1].battToSend<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>no<sp/>remaining<sp/>connections<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basNoConnActive())</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stop<sp/>timer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>WsfTimerStop(&amp;basCb.measTimer);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_a_t_t_e_r_y___p_r_o_f_i_l_e_1ga9ce70804156987122988324dd2c7821b" kindref="member">BasProcMsg</ref>(wsfMsgHdr_t<sp/>*pMsg)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMsg-&gt;event<sp/>==<sp/>DM_CONN_OPEN_IND)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>basConnOpen((dmEvt_t<sp/>*)<sp/>pMsg);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMsg-&gt;event<sp/>==<sp/>ATTS_HANDLE_VALUE_CNF)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>basHandleValueCnf((attEvt_t<sp/>*)<sp/>pMsg);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMsg-&gt;event<sp/>==<sp/>basCb.measTimer.msg.event)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bas__main_8c_1a78e65e8a362e149bdfccd1b0cda521a7" kindref="member">basMeasTimerExp</ref>(pMsg);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_a_t_t_e_r_y___p_r_o_f_i_l_e_1ga080e8827b70f644f4befe013f3cdac31" kindref="member">BasSendBattLevel</ref>(dmConnId_t<sp/>connId,<sp/>uint8_t<sp/>idx,<sp/>uint8_t<sp/>level)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(AttsCccEnabled(connId,<sp/>idx))</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>AttsHandleValueNtf(connId,<sp/><ref refid="group___b_a_t_t_e_r_y___s_e_r_v_i_c_e_1gga1fb9092bcdeada2d206bdc74afbbe122a02d2de256a56a433c259582951118967" kindref="member">BATT_LVL_HDL</ref>,<sp/><ref refid="group___s_e_r_v_i_c_e___c_o_n_s_t_a_n_t_s_1ga6780b2a772ed88769ce73a5c3a6de5fd" kindref="member">CH_BATT_LEVEL_LEN</ref>,<sp/>&amp;level);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal">uint8_t<sp/><ref refid="group___b_a_t_t_e_r_y___p_r_o_f_i_l_e_1ga0b47065ee85a2365d595e17704e06411" kindref="member">BasReadCback</ref>(dmConnId_t<sp/>connId,<sp/>uint16_t<sp/>handle,<sp/>uint8_t<sp/>operation,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>offset,<sp/>attsAttr_t<sp/>*pAttr)</highlight></codeline>
<codeline lineno="360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>battery<sp/>level<sp/>and<sp/>set<sp/>attribute<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><ref refid="group___a_p_p___f_r_a_m_e_w_o_r_k___h_w___a_p_i_1ga62e02377430edae49fbd84a644950bc3" kindref="member">AppHwBattRead</ref>(pAttr-&gt;pValue);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ATT_SUCCESS;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/emm-drjenkins/ado-agent-03/_work/43/T9305_DEV/sdk/utils/doc_generator/build/src_tmp/libs/third_party/emb/packetcraft/ble-profiles/sources/profiles/bas/bas_main.c"/>
  </compounddef>
</doxygen>
